//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:27:21 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundIgenfitdImeasurementsRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "measurementsRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void genfitcLcLHMatrixPhi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLHMatrixPhi(void *p = 0);
   static void *newArray_genfitcLcLHMatrixPhi(Long_t size, void *p);
   static void delete_genfitcLcLHMatrixPhi(void *p);
   static void deleteArray_genfitcLcLHMatrixPhi(void *p);
   static void destruct_genfitcLcLHMatrixPhi(void *p);
   static void streamer_genfitcLcLHMatrixPhi(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HMatrixPhi*)
   {
      ::genfit::HMatrixPhi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HMatrixPhi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HMatrixPhi", ::genfit::HMatrixPhi::Class_Version(), "/input/FairShip/genfit/measurements/include/HMatrixPhi.h", 37,
                  typeid(::genfit::HMatrixPhi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HMatrixPhi::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::HMatrixPhi) );
      instance.SetNew(&new_genfitcLcLHMatrixPhi);
      instance.SetNewArray(&newArray_genfitcLcLHMatrixPhi);
      instance.SetDelete(&delete_genfitcLcLHMatrixPhi);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHMatrixPhi);
      instance.SetDestructor(&destruct_genfitcLcLHMatrixPhi);
      instance.SetStreamerFunc(&streamer_genfitcLcLHMatrixPhi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HMatrixPhi*)
   {
      return GenerateInitInstanceLocal((::genfit::HMatrixPhi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HMatrixPhi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLHMatrixU_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLHMatrixU(void *p = 0);
   static void *newArray_genfitcLcLHMatrixU(Long_t size, void *p);
   static void delete_genfitcLcLHMatrixU(void *p);
   static void deleteArray_genfitcLcLHMatrixU(void *p);
   static void destruct_genfitcLcLHMatrixU(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HMatrixU*)
   {
      ::genfit::HMatrixU *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HMatrixU >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HMatrixU", ::genfit::HMatrixU::Class_Version(), "/input/FairShip/genfit/measurements/include/HMatrixU.h", 37,
                  typeid(::genfit::HMatrixU), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HMatrixU::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::HMatrixU) );
      instance.SetNew(&new_genfitcLcLHMatrixU);
      instance.SetNewArray(&newArray_genfitcLcLHMatrixU);
      instance.SetDelete(&delete_genfitcLcLHMatrixU);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHMatrixU);
      instance.SetDestructor(&destruct_genfitcLcLHMatrixU);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HMatrixU*)
   {
      return GenerateInitInstanceLocal((::genfit::HMatrixU*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HMatrixU*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLHMatrixUnit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLHMatrixUnit(void *p = 0);
   static void *newArray_genfitcLcLHMatrixUnit(Long_t size, void *p);
   static void delete_genfitcLcLHMatrixUnit(void *p);
   static void deleteArray_genfitcLcLHMatrixUnit(void *p);
   static void destruct_genfitcLcLHMatrixUnit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HMatrixUnit*)
   {
      ::genfit::HMatrixUnit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HMatrixUnit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HMatrixUnit", ::genfit::HMatrixUnit::Class_Version(), "/input/FairShip/genfit/measurements/include/HMatrixUnit.h", 40,
                  typeid(::genfit::HMatrixUnit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HMatrixUnit::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::HMatrixUnit) );
      instance.SetNew(&new_genfitcLcLHMatrixUnit);
      instance.SetNewArray(&newArray_genfitcLcLHMatrixUnit);
      instance.SetDelete(&delete_genfitcLcLHMatrixUnit);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHMatrixUnit);
      instance.SetDestructor(&destruct_genfitcLcLHMatrixUnit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HMatrixUnit*)
   {
      return GenerateInitInstanceLocal((::genfit::HMatrixUnit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HMatrixUnit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLHMatrixV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLHMatrixV(void *p = 0);
   static void *newArray_genfitcLcLHMatrixV(Long_t size, void *p);
   static void delete_genfitcLcLHMatrixV(void *p);
   static void deleteArray_genfitcLcLHMatrixV(void *p);
   static void destruct_genfitcLcLHMatrixV(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HMatrixV*)
   {
      ::genfit::HMatrixV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HMatrixV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HMatrixV", ::genfit::HMatrixV::Class_Version(), "/input/FairShip/genfit/measurements/include/HMatrixV.h", 37,
                  typeid(::genfit::HMatrixV), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HMatrixV::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::HMatrixV) );
      instance.SetNew(&new_genfitcLcLHMatrixV);
      instance.SetNewArray(&newArray_genfitcLcLHMatrixV);
      instance.SetDelete(&delete_genfitcLcLHMatrixV);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHMatrixV);
      instance.SetDestructor(&destruct_genfitcLcLHMatrixV);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HMatrixV*)
   {
      return GenerateInitInstanceLocal((::genfit::HMatrixV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HMatrixV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLHMatrixUV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLHMatrixUV(void *p = 0);
   static void *newArray_genfitcLcLHMatrixUV(Long_t size, void *p);
   static void delete_genfitcLcLHMatrixUV(void *p);
   static void deleteArray_genfitcLcLHMatrixUV(void *p);
   static void destruct_genfitcLcLHMatrixUV(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HMatrixUV*)
   {
      ::genfit::HMatrixUV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HMatrixUV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HMatrixUV", ::genfit::HMatrixUV::Class_Version(), "/input/FairShip/genfit/measurements/include/HMatrixUV.h", 39,
                  typeid(::genfit::HMatrixUV), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HMatrixUV::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::HMatrixUV) );
      instance.SetNew(&new_genfitcLcLHMatrixUV);
      instance.SetNewArray(&newArray_genfitcLcLHMatrixUV);
      instance.SetDelete(&delete_genfitcLcLHMatrixUV);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHMatrixUV);
      instance.SetDestructor(&destruct_genfitcLcLHMatrixUV);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HMatrixUV*)
   {
      return GenerateInitInstanceLocal((::genfit::HMatrixUV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HMatrixUV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLFullMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLFullMeasurement(void *p = 0);
   static void *newArray_genfitcLcLFullMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLFullMeasurement(void *p);
   static void deleteArray_genfitcLcLFullMeasurement(void *p);
   static void destruct_genfitcLcLFullMeasurement(void *p);
   static void streamer_genfitcLcLFullMeasurement(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::FullMeasurement*)
   {
      ::genfit::FullMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::FullMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::FullMeasurement", ::genfit::FullMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/FullMeasurement.h", 42,
                  typeid(::genfit::FullMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::FullMeasurement::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::FullMeasurement) );
      instance.SetNew(&new_genfitcLcLFullMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLFullMeasurement);
      instance.SetDelete(&delete_genfitcLcLFullMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLFullMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLFullMeasurement);
      instance.SetStreamerFunc(&streamer_genfitcLcLFullMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::FullMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::FullMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::FullMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLPlanarMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLPlanarMeasurement(void *p = 0);
   static void *newArray_genfitcLcLPlanarMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLPlanarMeasurement(void *p);
   static void deleteArray_genfitcLcLPlanarMeasurement(void *p);
   static void destruct_genfitcLcLPlanarMeasurement(void *p);
   static void streamer_genfitcLcLPlanarMeasurement(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::PlanarMeasurement*)
   {
      ::genfit::PlanarMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::PlanarMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::PlanarMeasurement", ::genfit::PlanarMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/PlanarMeasurement.h", 44,
                  typeid(::genfit::PlanarMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::PlanarMeasurement::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::PlanarMeasurement) );
      instance.SetNew(&new_genfitcLcLPlanarMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLPlanarMeasurement);
      instance.SetDelete(&delete_genfitcLcLPlanarMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLPlanarMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLPlanarMeasurement);
      instance.SetStreamerFunc(&streamer_genfitcLcLPlanarMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::PlanarMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::PlanarMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::PlanarMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLSpacepointMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLSpacepointMeasurement(void *p = 0);
   static void *newArray_genfitcLcLSpacepointMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLSpacepointMeasurement(void *p);
   static void deleteArray_genfitcLcLSpacepointMeasurement(void *p);
   static void destruct_genfitcLcLSpacepointMeasurement(void *p);
   static void streamer_genfitcLcLSpacepointMeasurement(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::SpacepointMeasurement*)
   {
      ::genfit::SpacepointMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::SpacepointMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::SpacepointMeasurement", ::genfit::SpacepointMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/SpacepointMeasurement.h", 46,
                  typeid(::genfit::SpacepointMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::SpacepointMeasurement::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::SpacepointMeasurement) );
      instance.SetNew(&new_genfitcLcLSpacepointMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLSpacepointMeasurement);
      instance.SetDelete(&delete_genfitcLcLSpacepointMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLSpacepointMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLSpacepointMeasurement);
      instance.SetStreamerFunc(&streamer_genfitcLcLSpacepointMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::SpacepointMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::SpacepointMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::SpacepointMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLProlateSpacepointMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLProlateSpacepointMeasurement(void *p = 0);
   static void *newArray_genfitcLcLProlateSpacepointMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLProlateSpacepointMeasurement(void *p);
   static void deleteArray_genfitcLcLProlateSpacepointMeasurement(void *p);
   static void destruct_genfitcLcLProlateSpacepointMeasurement(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::ProlateSpacepointMeasurement*)
   {
      ::genfit::ProlateSpacepointMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::ProlateSpacepointMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::ProlateSpacepointMeasurement", ::genfit::ProlateSpacepointMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/ProlateSpacepointMeasurement.h", 46,
                  typeid(::genfit::ProlateSpacepointMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::ProlateSpacepointMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::ProlateSpacepointMeasurement) );
      instance.SetNew(&new_genfitcLcLProlateSpacepointMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLProlateSpacepointMeasurement);
      instance.SetDelete(&delete_genfitcLcLProlateSpacepointMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLProlateSpacepointMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLProlateSpacepointMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::ProlateSpacepointMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::ProlateSpacepointMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::ProlateSpacepointMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLWireMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLWireMeasurement(void *p = 0);
   static void *newArray_genfitcLcLWireMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLWireMeasurement(void *p);
   static void deleteArray_genfitcLcLWireMeasurement(void *p);
   static void destruct_genfitcLcLWireMeasurement(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::WireMeasurement*)
   {
      ::genfit::WireMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::WireMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::WireMeasurement", ::genfit::WireMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/WireMeasurement.h", 52,
                  typeid(::genfit::WireMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::WireMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::WireMeasurement) );
      instance.SetNew(&new_genfitcLcLWireMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLWireMeasurement);
      instance.SetDelete(&delete_genfitcLcLWireMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLWireMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLWireMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::WireMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::WireMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::WireMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLWirePointMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLWirePointMeasurement(void *p = 0);
   static void *newArray_genfitcLcLWirePointMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLWirePointMeasurement(void *p);
   static void deleteArray_genfitcLcLWirePointMeasurement(void *p);
   static void destruct_genfitcLcLWirePointMeasurement(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::WirePointMeasurement*)
   {
      ::genfit::WirePointMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::WirePointMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::WirePointMeasurement", ::genfit::WirePointMeasurement::Class_Version(), "/input/FairShip/genfit/measurements/include/WirePointMeasurement.h", 51,
                  typeid(::genfit::WirePointMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::WirePointMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::WirePointMeasurement) );
      instance.SetNew(&new_genfitcLcLWirePointMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLWirePointMeasurement);
      instance.SetDelete(&delete_genfitcLcLWirePointMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLWirePointMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLWirePointMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::WirePointMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::WirePointMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::WirePointMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLWireTrackCandHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLWireTrackCandHit(void *p = 0);
   static void *newArray_genfitcLcLWireTrackCandHit(Long_t size, void *p);
   static void delete_genfitcLcLWireTrackCandHit(void *p);
   static void deleteArray_genfitcLcLWireTrackCandHit(void *p);
   static void destruct_genfitcLcLWireTrackCandHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::WireTrackCandHit*)
   {
      ::genfit::WireTrackCandHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::WireTrackCandHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::WireTrackCandHit", ::genfit::WireTrackCandHit::Class_Version(), "/input/FairShip/genfit/measurements/include/WireTrackCandHit.h", 34,
                  typeid(::genfit::WireTrackCandHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::WireTrackCandHit::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::WireTrackCandHit) );
      instance.SetNew(&new_genfitcLcLWireTrackCandHit);
      instance.SetNewArray(&newArray_genfitcLcLWireTrackCandHit);
      instance.SetDelete(&delete_genfitcLcLWireTrackCandHit);
      instance.SetDeleteArray(&deleteArray_genfitcLcLWireTrackCandHit);
      instance.SetDestructor(&destruct_genfitcLcLWireTrackCandHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::WireTrackCandHit*)
   {
      return GenerateInitInstanceLocal((::genfit::WireTrackCandHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::WireTrackCandHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HMatrixPhi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMatrixPhi::Class_Name()
{
   return "genfit::HMatrixPhi";
}

//______________________________________________________________________________
const char *HMatrixPhi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixPhi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMatrixPhi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixPhi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMatrixPhi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixPhi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMatrixPhi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixPhi*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HMatrixU::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMatrixU::Class_Name()
{
   return "genfit::HMatrixU";
}

//______________________________________________________________________________
const char *HMatrixU::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixU*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMatrixU::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixU*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMatrixU::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixU*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMatrixU::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixU*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HMatrixUnit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMatrixUnit::Class_Name()
{
   return "genfit::HMatrixUnit";
}

//______________________________________________________________________________
const char *HMatrixUnit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUnit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMatrixUnit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUnit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMatrixUnit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUnit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMatrixUnit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUnit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HMatrixV::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMatrixV::Class_Name()
{
   return "genfit::HMatrixV";
}

//______________________________________________________________________________
const char *HMatrixV::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMatrixV::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMatrixV::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMatrixV::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixV*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HMatrixUV::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMatrixUV::Class_Name()
{
   return "genfit::HMatrixUV";
}

//______________________________________________________________________________
const char *HMatrixUV::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMatrixUV::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMatrixUV::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMatrixUV::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HMatrixUV*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr FullMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FullMeasurement::Class_Name()
{
   return "genfit::FullMeasurement";
}

//______________________________________________________________________________
const char *FullMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::FullMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FullMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::FullMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FullMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::FullMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FullMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::FullMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr PlanarMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PlanarMeasurement::Class_Name()
{
   return "genfit::PlanarMeasurement";
}

//______________________________________________________________________________
const char *PlanarMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::PlanarMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PlanarMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::PlanarMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PlanarMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::PlanarMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PlanarMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::PlanarMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr SpacepointMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SpacepointMeasurement::Class_Name()
{
   return "genfit::SpacepointMeasurement";
}

//______________________________________________________________________________
const char *SpacepointMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::SpacepointMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SpacepointMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::SpacepointMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SpacepointMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::SpacepointMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SpacepointMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::SpacepointMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr ProlateSpacepointMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ProlateSpacepointMeasurement::Class_Name()
{
   return "genfit::ProlateSpacepointMeasurement";
}

//______________________________________________________________________________
const char *ProlateSpacepointMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ProlateSpacepointMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ProlateSpacepointMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ProlateSpacepointMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ProlateSpacepointMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ProlateSpacepointMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ProlateSpacepointMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ProlateSpacepointMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr WireMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WireMeasurement::Class_Name()
{
   return "genfit::WireMeasurement";
}

//______________________________________________________________________________
const char *WireMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WireMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WireMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WireMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr WirePointMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WirePointMeasurement::Class_Name()
{
   return "genfit::WirePointMeasurement";
}

//______________________________________________________________________________
const char *WirePointMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WirePointMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WirePointMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WirePointMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WirePointMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WirePointMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WirePointMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WirePointMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr WireTrackCandHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WireTrackCandHit::Class_Name()
{
   return "genfit::WireTrackCandHit";
}

//______________________________________________________________________________
const char *WireTrackCandHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireTrackCandHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WireTrackCandHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireTrackCandHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WireTrackCandHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireTrackCandHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WireTrackCandHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::WireTrackCandHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
void HMatrixU::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::HMatrixU.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::HMatrixU::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::HMatrixU::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void HMatrixU::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HMatrixU.
      TClass *R__cl = ::genfit::HMatrixU::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsHMatrix baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLHMatrixU(void *p) {
      return  p ? new(p) ::genfit::HMatrixU : new ::genfit::HMatrixU;
   }
   static void *newArray_genfitcLcLHMatrixU(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::HMatrixU[nElements] : new ::genfit::HMatrixU[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLHMatrixU(void *p) {
      delete ((::genfit::HMatrixU*)p);
   }
   static void deleteArray_genfitcLcLHMatrixU(void *p) {
      delete [] ((::genfit::HMatrixU*)p);
   }
   static void destruct_genfitcLcLHMatrixU(void *p) {
      typedef ::genfit::HMatrixU current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::HMatrixU

      namespace genfit {
//______________________________________________________________________________
void HMatrixUnit::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::HMatrixUnit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::HMatrixUnit::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::HMatrixUnit::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void HMatrixUnit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HMatrixUnit.
      TClass *R__cl = ::genfit::HMatrixUnit::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsHMatrix baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLHMatrixUnit(void *p) {
      return  p ? new(p) ::genfit::HMatrixUnit : new ::genfit::HMatrixUnit;
   }
   static void *newArray_genfitcLcLHMatrixUnit(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::HMatrixUnit[nElements] : new ::genfit::HMatrixUnit[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLHMatrixUnit(void *p) {
      delete ((::genfit::HMatrixUnit*)p);
   }
   static void deleteArray_genfitcLcLHMatrixUnit(void *p) {
      delete [] ((::genfit::HMatrixUnit*)p);
   }
   static void destruct_genfitcLcLHMatrixUnit(void *p) {
      typedef ::genfit::HMatrixUnit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::HMatrixUnit

      namespace genfit {
//______________________________________________________________________________
void HMatrixV::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::HMatrixV.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::HMatrixV::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::HMatrixV::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void HMatrixV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HMatrixV.
      TClass *R__cl = ::genfit::HMatrixV::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsHMatrix baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLHMatrixV(void *p) {
      return  p ? new(p) ::genfit::HMatrixV : new ::genfit::HMatrixV;
   }
   static void *newArray_genfitcLcLHMatrixV(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::HMatrixV[nElements] : new ::genfit::HMatrixV[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLHMatrixV(void *p) {
      delete ((::genfit::HMatrixV*)p);
   }
   static void deleteArray_genfitcLcLHMatrixV(void *p) {
      delete [] ((::genfit::HMatrixV*)p);
   }
   static void destruct_genfitcLcLHMatrixV(void *p) {
      typedef ::genfit::HMatrixV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::HMatrixV

      namespace genfit {
//______________________________________________________________________________
void HMatrixUV::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::HMatrixUV.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::HMatrixUV::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::HMatrixUV::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void HMatrixUV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HMatrixUV.
      TClass *R__cl = ::genfit::HMatrixUV::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsHMatrix baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLHMatrixUV(void *p) {
      return  p ? new(p) ::genfit::HMatrixUV : new ::genfit::HMatrixUV;
   }
   static void *newArray_genfitcLcLHMatrixUV(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::HMatrixUV[nElements] : new ::genfit::HMatrixUV[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLHMatrixUV(void *p) {
      delete ((::genfit::HMatrixUV*)p);
   }
   static void deleteArray_genfitcLcLHMatrixUV(void *p) {
      delete [] ((::genfit::HMatrixUV*)p);
   }
   static void destruct_genfitcLcLHMatrixUV(void *p) {
      typedef ::genfit::HMatrixUV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::HMatrixUV

      namespace genfit {
//______________________________________________________________________________
void ProlateSpacepointMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::ProlateSpacepointMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::ProlateSpacepointMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::ProlateSpacepointMeasurement::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void ProlateSpacepointMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::ProlateSpacepointMeasurement.
      TClass *R__cl = ::genfit::ProlateSpacepointMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "largestErrorDirection_", &largestErrorDirection_);
      R__insp.InspectMember(largestErrorDirection_, "largestErrorDirection_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::SpacepointMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLProlateSpacepointMeasurement(void *p) {
      return  p ? new(p) ::genfit::ProlateSpacepointMeasurement : new ::genfit::ProlateSpacepointMeasurement;
   }
   static void *newArray_genfitcLcLProlateSpacepointMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::ProlateSpacepointMeasurement[nElements] : new ::genfit::ProlateSpacepointMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLProlateSpacepointMeasurement(void *p) {
      delete ((::genfit::ProlateSpacepointMeasurement*)p);
   }
   static void deleteArray_genfitcLcLProlateSpacepointMeasurement(void *p) {
      delete [] ((::genfit::ProlateSpacepointMeasurement*)p);
   }
   static void destruct_genfitcLcLProlateSpacepointMeasurement(void *p) {
      typedef ::genfit::ProlateSpacepointMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::ProlateSpacepointMeasurement

      namespace genfit {
//______________________________________________________________________________
void WireMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::WireMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::WireMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::WireMeasurement::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void WireMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::WireMeasurement.
      TClass *R__cl = ::genfit::WireMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxDistance_", &maxDistance_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leftRight_", &leftRight_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLWireMeasurement(void *p) {
      return  p ? new(p) ::genfit::WireMeasurement : new ::genfit::WireMeasurement;
   }
   static void *newArray_genfitcLcLWireMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::WireMeasurement[nElements] : new ::genfit::WireMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLWireMeasurement(void *p) {
      delete ((::genfit::WireMeasurement*)p);
   }
   static void deleteArray_genfitcLcLWireMeasurement(void *p) {
      delete [] ((::genfit::WireMeasurement*)p);
   }
   static void destruct_genfitcLcLWireMeasurement(void *p) {
      typedef ::genfit::WireMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::WireMeasurement

      namespace genfit {
//______________________________________________________________________________
void WirePointMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::WirePointMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::WirePointMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::WirePointMeasurement::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void WirePointMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::WirePointMeasurement.
      TClass *R__cl = ::genfit::WirePointMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::WireMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLWirePointMeasurement(void *p) {
      return  p ? new(p) ::genfit::WirePointMeasurement : new ::genfit::WirePointMeasurement;
   }
   static void *newArray_genfitcLcLWirePointMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::WirePointMeasurement[nElements] : new ::genfit::WirePointMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLWirePointMeasurement(void *p) {
      delete ((::genfit::WirePointMeasurement*)p);
   }
   static void deleteArray_genfitcLcLWirePointMeasurement(void *p) {
      delete [] ((::genfit::WirePointMeasurement*)p);
   }
   static void destruct_genfitcLcLWirePointMeasurement(void *p) {
      typedef ::genfit::WirePointMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::WirePointMeasurement

//______________________________________________________________________________
      namespace genfit {
void HMatrixPhi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HMatrixPhi.
      TClass *R__cl = ::genfit::HMatrixPhi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_", &phi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosPhi_", &cosPhi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sinPhi_", &sinPhi_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsHMatrix baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLHMatrixPhi(void *p) {
      return  p ? new(p) ::genfit::HMatrixPhi : new ::genfit::HMatrixPhi;
   }
   static void *newArray_genfitcLcLHMatrixPhi(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::HMatrixPhi[nElements] : new ::genfit::HMatrixPhi[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLHMatrixPhi(void *p) {
      delete ((::genfit::HMatrixPhi*)p);
   }
   static void deleteArray_genfitcLcLHMatrixPhi(void *p) {
      delete [] ((::genfit::HMatrixPhi*)p);
   }
   static void destruct_genfitcLcLHMatrixPhi(void *p) {
      typedef ::genfit::HMatrixPhi current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLHMatrixPhi(TBuffer &buf, void *obj) {
      ((::genfit::HMatrixPhi*)obj)->::genfit::HMatrixPhi::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::HMatrixPhi

//______________________________________________________________________________
      namespace genfit {
void FullMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::FullMeasurement.
      TClass *R__cl = ::genfit::FullMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plane_", (void*)&plane_);
      R__insp.InspectMember("genfit::SharedPlanePtr", (void*)&plane_, "plane_.", true);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLFullMeasurement(void *p) {
      return  p ? new(p) ::genfit::FullMeasurement : new ::genfit::FullMeasurement;
   }
   static void *newArray_genfitcLcLFullMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::FullMeasurement[nElements] : new ::genfit::FullMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLFullMeasurement(void *p) {
      delete ((::genfit::FullMeasurement*)p);
   }
   static void deleteArray_genfitcLcLFullMeasurement(void *p) {
      delete [] ((::genfit::FullMeasurement*)p);
   }
   static void destruct_genfitcLcLFullMeasurement(void *p) {
      typedef ::genfit::FullMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLFullMeasurement(TBuffer &buf, void *obj) {
      ((::genfit::FullMeasurement*)obj)->::genfit::FullMeasurement::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::FullMeasurement

//______________________________________________________________________________
      namespace genfit {
void PlanarMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::PlanarMeasurement.
      TClass *R__cl = ::genfit::PlanarMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "physicalPlane_", (void*)&physicalPlane_);
      R__insp.InspectMember("genfit::SharedPlanePtr", (void*)&physicalPlane_, "physicalPlane_.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "planeId_", &planeId_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripV_", &stripV_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLPlanarMeasurement(void *p) {
      return  p ? new(p) ::genfit::PlanarMeasurement : new ::genfit::PlanarMeasurement;
   }
   static void *newArray_genfitcLcLPlanarMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::PlanarMeasurement[nElements] : new ::genfit::PlanarMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLPlanarMeasurement(void *p) {
      delete ((::genfit::PlanarMeasurement*)p);
   }
   static void deleteArray_genfitcLcLPlanarMeasurement(void *p) {
      delete [] ((::genfit::PlanarMeasurement*)p);
   }
   static void destruct_genfitcLcLPlanarMeasurement(void *p) {
      typedef ::genfit::PlanarMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLPlanarMeasurement(TBuffer &buf, void *obj) {
      ((::genfit::PlanarMeasurement*)obj)->::genfit::PlanarMeasurement::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::PlanarMeasurement

//______________________________________________________________________________
      namespace genfit {
void SpacepointMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::SpacepointMeasurement.
      TClass *R__cl = ::genfit::SpacepointMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightedPlaneContruction_", &weightedPlaneContruction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G_", &G_);
      R__insp.InspectMember(G_, "G_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutCov_", &cutCov_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLSpacepointMeasurement(void *p) {
      return  p ? new(p) ::genfit::SpacepointMeasurement : new ::genfit::SpacepointMeasurement;
   }
   static void *newArray_genfitcLcLSpacepointMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::SpacepointMeasurement[nElements] : new ::genfit::SpacepointMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLSpacepointMeasurement(void *p) {
      delete ((::genfit::SpacepointMeasurement*)p);
   }
   static void deleteArray_genfitcLcLSpacepointMeasurement(void *p) {
      delete [] ((::genfit::SpacepointMeasurement*)p);
   }
   static void destruct_genfitcLcLSpacepointMeasurement(void *p) {
      typedef ::genfit::SpacepointMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLSpacepointMeasurement(TBuffer &buf, void *obj) {
      ((::genfit::SpacepointMeasurement*)obj)->::genfit::SpacepointMeasurement::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::SpacepointMeasurement

      namespace genfit {
//______________________________________________________________________________
void WireTrackCandHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::WireTrackCandHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::WireTrackCandHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::WireTrackCandHit::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void WireTrackCandHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::WireTrackCandHit.
      TClass *R__cl = ::genfit::WireTrackCandHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leftRight_", &leftRight_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::TrackCandHit baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLWireTrackCandHit(void *p) {
      return  p ? new(p) ::genfit::WireTrackCandHit : new ::genfit::WireTrackCandHit;
   }
   static void *newArray_genfitcLcLWireTrackCandHit(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::WireTrackCandHit[nElements] : new ::genfit::WireTrackCandHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLWireTrackCandHit(void *p) {
      delete ((::genfit::WireTrackCandHit*)p);
   }
   static void deleteArray_genfitcLcLWireTrackCandHit(void *p) {
      delete [] ((::genfit::WireTrackCandHit*)p);
   }
   static void destruct_genfitcLcLWireTrackCandHit(void *p) {
      typedef ::genfit::WireTrackCandHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::WireTrackCandHit

/********************************************************
* /input/FairShipRun/genfit/measurementsRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemeasurementsRootDict();

extern "C" void G__set_cpp_environmentmeasurementsRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/HMatrixPhi.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/HMatrixU.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/HMatrixUnit.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/HMatrixV.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/HMatrixUV.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/FullMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/PlanarMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/ProlateSpacepointMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/SpacepointMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/WireMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/WirePointMeasurement.h");
  G__add_compiledheader("/input/FairShip/genfit/measurements/include/WireTrackCandHit.h");
  G__cpp_reset_tagtablemeasurementsRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevmeasurementsRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genfit::HMatrixPhi */
static int G__measurementsRootDict_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HMatrixPhi* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixPhi((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::HMatrixPhi((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::HMatrixPhi[n];
       } else {
         p = new((void*) gvp) genfit::HMatrixPhi[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::HMatrixPhi;
       } else {
         p = new((void*) gvp) genfit::HMatrixPhi;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HMatrixPhi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixPhi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HMatrixPhi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HMatrixPhi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HMatrixPhi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixPhi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixPhi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixPhi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_249_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixPhi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_249_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HMatrixPhi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HMatrixPhi(*(genfit::HMatrixPhi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HMatrixPhi G__TgenfitcLcLHMatrixPhi;
static int G__measurementsRootDict_249_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HMatrixPhi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HMatrixPhi*) (soff+(sizeof(genfit::HMatrixPhi)*i)))->~G__TgenfitcLcLHMatrixPhi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HMatrixPhi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HMatrixPhi*) (soff))->~G__TgenfitcLcLHMatrixPhi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::HMatrixU */
static int G__measurementsRootDict_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HMatrixU* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixU[n];
     } else {
       p = new((void*) gvp) genfit::HMatrixU[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixU;
     } else {
       p = new((void*) gvp) genfit::HMatrixU;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HMatrixU::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixU::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HMatrixU::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HMatrixU::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HMatrixU*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixU::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixU::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixU::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixU::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HMatrixU* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HMatrixU(*(genfit::HMatrixU*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HMatrixU G__TgenfitcLcLHMatrixU;
static int G__measurementsRootDict_250_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HMatrixU*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HMatrixU*) (soff+(sizeof(genfit::HMatrixU)*i)))->~G__TgenfitcLcLHMatrixU();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HMatrixU*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HMatrixU*) (soff))->~G__TgenfitcLcLHMatrixU();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::HMatrixUnit */
static int G__measurementsRootDict_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HMatrixUnit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixUnit[n];
     } else {
       p = new((void*) gvp) genfit::HMatrixUnit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixUnit;
     } else {
       p = new((void*) gvp) genfit::HMatrixUnit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HMatrixUnit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUnit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HMatrixUnit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HMatrixUnit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HMatrixUnit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUnit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixUnit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUnit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_251_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixUnit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_251_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HMatrixUnit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HMatrixUnit(*(genfit::HMatrixUnit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HMatrixUnit G__TgenfitcLcLHMatrixUnit;
static int G__measurementsRootDict_251_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HMatrixUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HMatrixUnit*) (soff+(sizeof(genfit::HMatrixUnit)*i)))->~G__TgenfitcLcLHMatrixUnit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HMatrixUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HMatrixUnit*) (soff))->~G__TgenfitcLcLHMatrixUnit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::HMatrixV */
static int G__measurementsRootDict_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HMatrixV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixV[n];
     } else {
       p = new((void*) gvp) genfit::HMatrixV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixV;
     } else {
       p = new((void*) gvp) genfit::HMatrixV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HMatrixV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HMatrixV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HMatrixV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HMatrixV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_252_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_252_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HMatrixV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HMatrixV(*(genfit::HMatrixV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HMatrixV G__TgenfitcLcLHMatrixV;
static int G__measurementsRootDict_252_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HMatrixV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HMatrixV*) (soff+(sizeof(genfit::HMatrixV)*i)))->~G__TgenfitcLcLHMatrixV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HMatrixV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HMatrixV*) (soff))->~G__TgenfitcLcLHMatrixV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::HMatrixUV */
static int G__measurementsRootDict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HMatrixUV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixUV[n];
     } else {
       p = new((void*) gvp) genfit::HMatrixUV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::HMatrixUV;
     } else {
       p = new((void*) gvp) genfit::HMatrixUV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HMatrixUV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HMatrixUV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HMatrixUV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HMatrixUV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixUV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HMatrixUV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HMatrixUV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HMatrixUV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HMatrixUV(*(genfit::HMatrixUV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HMatrixUV G__TgenfitcLcLHMatrixUV;
static int G__measurementsRootDict_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HMatrixUV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HMatrixUV*) (soff+(sizeof(genfit::HMatrixUV)*i)))->~G__TgenfitcLcLHMatrixUV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HMatrixUV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HMatrixUV*) (soff))->~G__TgenfitcLcLHMatrixUV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::FullMeasurement */
static int G__measurementsRootDict_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::FullMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::FullMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::FullMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::FullMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::FullMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::FullMeasurement;
       } else {
         p = new((void*) gvp) genfit::FullMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::FullMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::FullMeasurement(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (genfit::TrackPoint*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) genfit::FullMeasurement(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (genfit::TrackPoint*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::FullMeasurement(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::FullMeasurement(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::FullMeasurement(*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::FullMeasurement(*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::FullMeasurement(*(genfit::MeasuredStateOnPlane*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) genfit::FullMeasurement(*(genfit::MeasuredStateOnPlane*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::FullMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::FullMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::FullMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::FullMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::FullMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::FullMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::FullMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::FullMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_284_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::FullMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::FullMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::FullMeasurement(*(genfit::FullMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::FullMeasurement G__TgenfitcLcLFullMeasurement;
static int G__measurementsRootDict_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::FullMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::FullMeasurement*) (soff+(sizeof(genfit::FullMeasurement)*i)))->~G__TgenfitcLcLFullMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::FullMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::FullMeasurement*) (soff))->~G__TgenfitcLcLFullMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::PlanarMeasurement */
static int G__measurementsRootDict_285_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::PlanarMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::PlanarMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::PlanarMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::PlanarMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::PlanarMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::PlanarMeasurement;
       } else {
         p = new((void*) gvp) genfit::PlanarMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::PlanarMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::PlanarMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genfit::PlanarMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genfit::PlanarMeasurement*) G__getstructoffset())->getPlaneId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genfit::PlanarMeasurement*) G__getstructoffset())->setPlane(*(genfit::SharedPlanePtr*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genfit::PlanarMeasurement*) G__getstructoffset())->setPlane(*(genfit::SharedPlanePtr*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::PlanarMeasurement*) G__getstructoffset())->setStripV((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::PlanarMeasurement*) G__getstructoffset())->setStripV();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::PlanarMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::PlanarMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::PlanarMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::PlanarMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::PlanarMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::PlanarMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::PlanarMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::PlanarMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_285_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::PlanarMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_285_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::PlanarMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::PlanarMeasurement(*(genfit::PlanarMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::PlanarMeasurement G__TgenfitcLcLPlanarMeasurement;
static int G__measurementsRootDict_285_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::PlanarMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::PlanarMeasurement*) (soff+(sizeof(genfit::PlanarMeasurement)*i)))->~G__TgenfitcLcLPlanarMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::PlanarMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::PlanarMeasurement*) (soff))->~G__TgenfitcLcLPlanarMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::SpacepointMeasurement */
static int G__measurementsRootDict_286_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::SpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::SpacepointMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::SpacepointMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::SpacepointMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::SpacepointMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::SpacepointMeasurement;
       } else {
         p = new((void*) gvp) genfit::SpacepointMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::SpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (bool) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (bool) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) genfit::SpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::SpacepointMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::SpacepointMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::SpacepointMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::SpacepointMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::SpacepointMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::SpacepointMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::SpacepointMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::SpacepointMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_286_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::SpacepointMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_286_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::SpacepointMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::SpacepointMeasurement(*(genfit::SpacepointMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::SpacepointMeasurement G__TgenfitcLcLSpacepointMeasurement;
static int G__measurementsRootDict_286_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::SpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::SpacepointMeasurement*) (soff+(sizeof(genfit::SpacepointMeasurement)*i)))->~G__TgenfitcLcLSpacepointMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::SpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::SpacepointMeasurement*) (soff))->~G__TgenfitcLcLSpacepointMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::ProlateSpacepointMeasurement */
static int G__measurementsRootDict_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ProlateSpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::ProlateSpacepointMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::ProlateSpacepointMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::ProlateSpacepointMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::ProlateSpacepointMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::ProlateSpacepointMeasurement;
       } else {
         p = new((void*) gvp) genfit::ProlateSpacepointMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ProlateSpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ProlateSpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genfit::ProlateSpacepointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((genfit::ProlateSpacepointMeasurement*) G__getstructoffset())->getLargestErrorDirection();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ProlateSpacepointMeasurement*) G__getstructoffset())->setLargestErrorDirection(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::ProlateSpacepointMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ProlateSpacepointMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::ProlateSpacepointMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::ProlateSpacepointMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ProlateSpacepointMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ProlateSpacepointMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::ProlateSpacepointMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ProlateSpacepointMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::ProlateSpacepointMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::ProlateSpacepointMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::ProlateSpacepointMeasurement(*(genfit::ProlateSpacepointMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::ProlateSpacepointMeasurement G__TgenfitcLcLProlateSpacepointMeasurement;
static int G__measurementsRootDict_287_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::ProlateSpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::ProlateSpacepointMeasurement*) (soff+(sizeof(genfit::ProlateSpacepointMeasurement)*i)))->~G__TgenfitcLcLProlateSpacepointMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::ProlateSpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::ProlateSpacepointMeasurement*) (soff))->~G__TgenfitcLcLProlateSpacepointMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::WireMeasurement */
static int G__measurementsRootDict_288_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::WireMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::WireMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WireMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::WireMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WireMeasurement;
       } else {
         p = new((void*) gvp) genfit::WireMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::WireMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::WireMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genfit::WireMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WireMeasurement*) G__getstructoffset())->setMaxDistance((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WireMeasurement*) G__getstructoffset())->setLeftRightResolution((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((genfit::WireMeasurement*) G__getstructoffset())->getMaxDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genfit::WireMeasurement*) G__getstructoffset())->getLeftRightResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::WireMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::WireMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::WireMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WireMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WireMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_288_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WireMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_288_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::WireMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::WireMeasurement(*(genfit::WireMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::WireMeasurement G__TgenfitcLcLWireMeasurement;
static int G__measurementsRootDict_288_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::WireMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::WireMeasurement*) (soff+(sizeof(genfit::WireMeasurement)*i)))->~G__TgenfitcLcLWireMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::WireMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::WireMeasurement*) (soff))->~G__TgenfitcLcLWireMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::WirePointMeasurement */
static int G__measurementsRootDict_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::WirePointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WirePointMeasurement((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::WirePointMeasurement((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WirePointMeasurement[n];
       } else {
         p = new((void*) gvp) genfit::WirePointMeasurement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WirePointMeasurement;
       } else {
         p = new((void*) gvp) genfit::WirePointMeasurement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::WirePointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::WirePointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genfit::WirePointMeasurement(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (genfit::TrackPoint*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::WirePointMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WirePointMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::WirePointMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::WirePointMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WirePointMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WirePointMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WirePointMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WirePointMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_289_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WirePointMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__measurementsRootDict_289_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::WirePointMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::WirePointMeasurement(*(genfit::WirePointMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::WirePointMeasurement G__TgenfitcLcLWirePointMeasurement;
static int G__measurementsRootDict_289_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::WirePointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::WirePointMeasurement*) (soff+(sizeof(genfit::WirePointMeasurement)*i)))->~G__TgenfitcLcLWirePointMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::WirePointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::WirePointMeasurement*) (soff))->~G__TgenfitcLcLWirePointMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::WireTrackCandHit */
static int G__measurementsRootDict_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::WireTrackCandHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (char) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (char) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::WireTrackCandHit(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireTrackCandHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::WireTrackCandHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::WireTrackCandHit((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::WireTrackCandHit((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WireTrackCandHit[n];
       } else {
         p = new((void*) gvp) genfit::WireTrackCandHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::WireTrackCandHit;
       } else {
         p = new((void*) gvp) genfit::WireTrackCandHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::WireTrackCandHit*) G__getstructoffset())->getLeftRightResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WireTrackCandHit*) G__getstructoffset())->setLeftRightResolution((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::WireTrackCandHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireTrackCandHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::WireTrackCandHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::WireTrackCandHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::WireTrackCandHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireTrackCandHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WireTrackCandHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::WireTrackCandHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__measurementsRootDict_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::WireTrackCandHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::WireTrackCandHit G__TgenfitcLcLWireTrackCandHit;
static int G__measurementsRootDict_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::WireTrackCandHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::WireTrackCandHit*) (soff+(sizeof(genfit::WireTrackCandHit)*i)))->~G__TgenfitcLcLWireTrackCandHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::WireTrackCandHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::WireTrackCandHit*) (soff))->~G__TgenfitcLcLWireTrackCandHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genfit::HMatrixPhi */

/* genfit::HMatrixU */

/* genfit::HMatrixUnit */

/* genfit::HMatrixV */

/* genfit::HMatrixUV */

/* genfit::FullMeasurement */

/* genfit::PlanarMeasurement */

/* genfit::SpacepointMeasurement */

/* genfit::ProlateSpacepointMeasurement */

/* genfit::WireMeasurement */

/* genfit::WirePointMeasurement */

/* genfit::WireTrackCandHit */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmeasurementsRootDict {
 public:
  G__Sizep2memfuncmeasurementsRootDict(): p(&G__Sizep2memfuncmeasurementsRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmeasurementsRootDict::*p)();
};

size_t G__get_sizep2memfuncmeasurementsRootDict()
{
  G__Sizep2memfuncmeasurementsRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemeasurementsRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi))) {
     genfit::HMatrixPhi *G__Lderived;
     G__Lderived=(genfit::HMatrixPhi*)0x1000;
     {
       genfit::AbsHMatrix *G__Lpbase=(genfit::AbsHMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU))) {
     genfit::HMatrixU *G__Lderived;
     G__Lderived=(genfit::HMatrixU*)0x1000;
     {
       genfit::AbsHMatrix *G__Lpbase=(genfit::AbsHMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit))) {
     genfit::HMatrixUnit *G__Lderived;
     G__Lderived=(genfit::HMatrixUnit*)0x1000;
     {
       genfit::AbsHMatrix *G__Lpbase=(genfit::AbsHMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV))) {
     genfit::HMatrixV *G__Lderived;
     G__Lderived=(genfit::HMatrixV*)0x1000;
     {
       genfit::AbsHMatrix *G__Lpbase=(genfit::AbsHMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV))) {
     genfit::HMatrixUV *G__Lderived;
     G__Lderived=(genfit::HMatrixUV*)0x1000;
     {
       genfit::AbsHMatrix *G__Lpbase=(genfit::AbsHMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement))) {
     genfit::FullMeasurement *G__Lderived;
     G__Lderived=(genfit::FullMeasurement*)0x1000;
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement))) {
     genfit::PlanarMeasurement *G__Lderived;
     G__Lderived=(genfit::PlanarMeasurement*)0x1000;
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement))) {
     genfit::SpacepointMeasurement *G__Lderived;
     G__Lderived=(genfit::SpacepointMeasurement*)0x1000;
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement))) {
     genfit::ProlateSpacepointMeasurement *G__Lderived;
     G__Lderived=(genfit::ProlateSpacepointMeasurement*)0x1000;
     {
       genfit::SpacepointMeasurement *G__Lpbase=(genfit::SpacepointMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement))) {
     genfit::WireMeasurement *G__Lderived;
     G__Lderived=(genfit::WireMeasurement*)0x1000;
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement))) {
     genfit::WirePointMeasurement *G__Lderived;
     G__Lderived=(genfit::WirePointMeasurement*)0x1000;
     {
       genfit::WireMeasurement *G__Lpbase=(genfit::WireMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit))) {
     genfit::WireTrackCandHit *G__Lderived;
     G__Lderived=(genfit::WireTrackCandHit*)0x1000;
     {
       genfit::TrackCandHit *G__Lpbase=(genfit::TrackCandHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit),G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLTrackCandHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit),G__get_linked_tagnum(&G__measurementsRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemeasurementsRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MatStep>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genfit::HMatrixPhi */
static void G__setup_memvargenfitcLcLHMatrixPhi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi));
   { genfit::HMatrixPhi *p; p=(genfit::HMatrixPhi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cosPhi_=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sinPhi_=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* genfit::HMatrixU */
static void G__setup_memvargenfitcLcLHMatrixU(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU));
   { genfit::HMatrixU *p; p=(genfit::HMatrixU*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::HMatrixUnit */
static void G__setup_memvargenfitcLcLHMatrixUnit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit));
   { genfit::HMatrixUnit *p; p=(genfit::HMatrixUnit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::HMatrixV */
static void G__setup_memvargenfitcLcLHMatrixV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV));
   { genfit::HMatrixV *p; p=(genfit::HMatrixV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::HMatrixUV */
static void G__setup_memvargenfitcLcLHMatrixUV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV));
   { genfit::HMatrixUV *p; p=(genfit::HMatrixUV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::FullMeasurement */
static void G__setup_memvargenfitcLcLFullMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   { genfit::FullMeasurement *p; p=(genfit::FullMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr),-1,-1,2,"plane_=",0,"! This is persistent, but '!' makes ROOT shut up.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::PlanarMeasurement */
static void G__setup_memvargenfitcLcLPlanarMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   { genfit::PlanarMeasurement *p; p=(genfit::PlanarMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr),-1,-1,2,"physicalPlane_=",0,"! This is persistent, but '!' makes ROOT shut up.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"planeId_=",0,"planeId id is -1 per default");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"stripV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::SpacepointMeasurement */
static void G__setup_memvargenfitcLcLSpacepointMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   { genfit::SpacepointMeasurement *p; p=(genfit::SpacepointMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"weightedPlaneContruction_=",0,"false: use POCA to construct DetPlane. true: Use metric G to construct POCA (default)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"G_=",0,"! inverse of 3x3 cov");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"cutCov_=",0,"false: project 3D cov onto DetPlane. true: cut 3D cov with DetPlane (default)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::ProlateSpacepointMeasurement */
static void G__setup_memvargenfitcLcLProlateSpacepointMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement));
   { genfit::ProlateSpacepointMeasurement *p; p=(genfit::ProlateSpacepointMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TVector3),-1,-1,2,"largestErrorDirection_=",0,"direction of largest error");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::WireMeasurement */
static void G__setup_memvargenfitcLcLWireMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   { genfit::WireMeasurement *p; p=(genfit::WireMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"maxDistance_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"leftRight_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::WirePointMeasurement */
static void G__setup_memvargenfitcLcLWirePointMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement));
   { genfit::WirePointMeasurement *p; p=(genfit::WirePointMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::WireTrackCandHit */
static void G__setup_memvargenfitcLcLWireTrackCandHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit));
   { genfit::WireTrackCandHit *p; p=(genfit::WireTrackCandHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"leftRight_=",0,"sorting parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__measurementsRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmeasurementsRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenfitcLcLHMatrixPhi(void) {
   /* genfit::HMatrixPhi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi));
   G__memfunc_setup("HMatrixPhi",990,G__measurementsRootDict_249_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi), -1, 0, 1, 1, 1, 0, "d - - 0 '0' phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatrix",949,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hv",190,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 1, 1, 1, 8, "u 'TVectorT<double>' 'TVectorD' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HMHt",337,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEqual",724,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genfit::AbsHMatrix' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_249_0_9, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HMatrixPhi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_249_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixPhi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_249_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HMatrixPhi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_249_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HMatrixPhi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_249_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_249_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixPhi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_249_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixPhi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_249_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixPhi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_249_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixPhi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMatrixPhi", 990, G__measurementsRootDict_249_0_21, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi), -1, 0, 1, 1, 1, 0, "u 'genfit::HMatrixPhi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMatrixPhi", 1116, G__measurementsRootDict_249_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLHMatrixU(void) {
   /* genfit::HMatrixU */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU));
   G__memfunc_setup("HMatrixU",786,G__measurementsRootDict_250_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatrix",949,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hv",190,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 1, 1, 1, 8, "u 'TVectorT<double>' 'TVectorD' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HMHt",337,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEqual",724,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genfit::AbsHMatrix' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_250_0_9, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HMatrixU::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_250_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixU::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_250_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HMatrixU::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_250_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HMatrixU::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_250_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_250_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixU::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_250_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixU::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_250_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixU::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_250_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixU::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMatrixU", 786, G__measurementsRootDict_250_0_21, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixU), -1, 0, 1, 1, 1, 0, "u 'genfit::HMatrixU' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMatrixU", 912, G__measurementsRootDict_250_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLHMatrixUnit(void) {
   /* genfit::HMatrixUnit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit));
   G__memfunc_setup("HMatrixUnit",1117,G__measurementsRootDict_251_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatrix",949,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hv",190,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 1, 1, 1, 8, "u 'TVectorT<double>' 'TVectorD' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HMHt",337,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEqual",724,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genfit::AbsHMatrix' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_251_0_9, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HMatrixUnit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_251_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUnit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_251_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HMatrixUnit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_251_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HMatrixUnit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_251_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_251_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUnit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_251_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixUnit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_251_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUnit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_251_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixUnit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMatrixUnit", 1117, G__measurementsRootDict_251_0_21, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit), -1, 0, 1, 1, 1, 0, "u 'genfit::HMatrixUnit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMatrixUnit", 1243, G__measurementsRootDict_251_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLHMatrixV(void) {
   /* genfit::HMatrixV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV));
   G__memfunc_setup("HMatrixV",787,G__measurementsRootDict_252_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatrix",949,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hv",190,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 1, 1, 1, 8, "u 'TVectorT<double>' 'TVectorD' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HMHt",337,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEqual",724,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genfit::AbsHMatrix' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_252_0_9, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HMatrixV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_252_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_252_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HMatrixV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_252_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HMatrixV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_252_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_252_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_252_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_252_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_252_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMatrixV", 787, G__measurementsRootDict_252_0_21, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixV), -1, 0, 1, 1, 1, 0, "u 'genfit::HMatrixV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMatrixV", 913, G__measurementsRootDict_252_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLHMatrixUV(void) {
   /* genfit::HMatrixUV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV));
   G__memfunc_setup("HMatrixUV",872,G__measurementsRootDict_253_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatrix",949,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hv",190,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 1, 1, 1, 8, "u 'TVectorT<double>' 'TVectorD' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHt",265,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 11 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HMHt",337,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - M", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEqual",724,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genfit::AbsHMatrix' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_253_0_9, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HMatrixUV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_253_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_253_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HMatrixUV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_253_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HMatrixUV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_253_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_253_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_253_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixUV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_253_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HMatrixUV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_253_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HMatrixUV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMatrixUV", 872, G__measurementsRootDict_253_0_21, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLHMatrixUV), -1, 0, 1, 1, 1, 0, "u 'genfit::HMatrixUV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMatrixUV", 998, G__measurementsRootDict_253_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLFullMeasurement(void) {
   /* genfit::FullMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement));
   G__memfunc_setup("FullMeasurement",1561,G__measurementsRootDict_284_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '5' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FullMeasurement",1561,G__measurementsRootDict_284_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement), -1, 0, 4, 1, 1, 0, 
"u 'genfit::MeasuredStateOnPlane' - 11 - - i - - 0 '-1' detId "
"i - - 0 '-1' hitId U 'genfit::TrackPoint' - 0 'NULL' trackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructMeasurementsOnPlane",2955,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructHMatrix",1698,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 1, 1, 1, 9, "U 'genfit::AbsTrackRep' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_284_0_7, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::FullMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_284_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::FullMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_284_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::FullMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_284_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::FullMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_284_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_284_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::FullMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_284_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::FullMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_284_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::FullMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_284_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::FullMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FullMeasurement", 1561, G__measurementsRootDict_284_0_19, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLFullMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::FullMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FullMeasurement", 1687, G__measurementsRootDict_284_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLPlanarMeasurement(void) {
   /* genfit::PlanarMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement));
   G__memfunc_setup("PlanarMeasurement",1764,G__measurementsRootDict_285_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '1' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlanarMeasurement",1764,G__measurementsRootDict_285_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement), -1, 0, 5, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - rawHitCoords u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - rawHitCov "
"i - - 0 - detId i - - 0 - hitId "
"U 'genfit::TrackPoint' - 0 - trackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPlaneId",989,G__measurementsRootDict_285_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructMeasurementsOnPlane",2955,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructHMatrix",1698,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 1, 1, 1, 9, "U 'genfit::AbsTrackRep' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setPlane",828,G__measurementsRootDict_285_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genfit::SharedPlanePtr' - 11 - physicalPlane i - - 0 '-1' planeId", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setStripV",948,G__measurementsRootDict_285_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__measurementsRootDict_285_0_10, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::PlanarMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_285_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::PlanarMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_285_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::PlanarMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_285_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::PlanarMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_285_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_285_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::PlanarMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_285_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::PlanarMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_285_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::PlanarMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_285_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::PlanarMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PlanarMeasurement", 1764, G__measurementsRootDict_285_0_22, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::PlanarMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PlanarMeasurement", 1890, G__measurementsRootDict_285_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLSpacepointMeasurement(void) {
   /* genfit::SpacepointMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement));
   G__memfunc_setup("SpacepointMeasurement",2204,G__measurementsRootDict_286_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '3' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpacepointMeasurement",2204,G__measurementsRootDict_286_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement), -1, 0, 7, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - rawHitCoords u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - rawHitCov "
"i - - 0 - detId i - - 0 - hitId "
"U 'genfit::TrackPoint' - 0 - trackPoint g - - 0 'true' weightedPlaneContruction "
"g - - 0 'true' cutCov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructMeasurementsOnPlane",2955,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructHMatrix",1698,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 1, 1, 1, 9, "U 'genfit::AbsTrackRep' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initG",507,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__measurementsRootDict_286_0_8, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::SpacepointMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_286_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::SpacepointMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_286_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::SpacepointMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_286_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::SpacepointMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_286_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_286_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::SpacepointMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_286_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::SpacepointMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_286_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::SpacepointMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_286_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::SpacepointMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SpacepointMeasurement", 2204, G__measurementsRootDict_286_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::SpacepointMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpacepointMeasurement", 2330, G__measurementsRootDict_286_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLProlateSpacepointMeasurement(void) {
   /* genfit::ProlateSpacepointMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement));
   G__memfunc_setup("ProlateSpacepointMeasurement",2931,G__measurementsRootDict_287_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '3' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProlateSpacepointMeasurement",2931,G__measurementsRootDict_287_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement), -1, 0, 5, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - rawHitCoords u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - rawHitCov "
"i - - 0 - detId i - - 0 - hitId "
"U 'genfit::TrackPoint' - 0 - trackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLargestErrorDirection",2493,G__measurementsRootDict_287_0_5, 117, G__get_linked_tagnum(&G__measurementsRootDictLN_TVector3), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLargestErrorDirection",2505,G__measurementsRootDict_287_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__measurementsRootDict_287_0_7, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::ProlateSpacepointMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_287_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ProlateSpacepointMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_287_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::ProlateSpacepointMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_287_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::ProlateSpacepointMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_287_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_287_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ProlateSpacepointMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_287_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::ProlateSpacepointMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_287_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ProlateSpacepointMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_287_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::ProlateSpacepointMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ProlateSpacepointMeasurement", 2931, G__measurementsRootDict_287_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::ProlateSpacepointMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ProlateSpacepointMeasurement", 3057, G__measurementsRootDict_287_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLWireMeasurement(void) {
   /* genfit::WireMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement));
   G__memfunc_setup("WireMeasurement",1565,G__measurementsRootDict_288_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '7' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WireMeasurement",1565,G__measurementsRootDict_288_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement), -1, 0, 5, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - rawHitCoords u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - rawHitCov "
"i - - 0 - detId i - - 0 - hitId "
"U 'genfit::TrackPoint' - 0 - trackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructMeasurementsOnPlane",2955,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructHMatrix",1698,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 1, 1, 1, 9, "U 'genfit::AbsTrackRep' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setMaxDistance",1437,G__measurementsRootDict_288_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeftRightResolution",2313,G__measurementsRootDict_288_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - lr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxDistance",1425,G__measurementsRootDict_288_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLeftRightResolution",2301,G__measurementsRootDict_288_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__measurementsRootDict_288_0_11, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::WireMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_288_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_288_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::WireMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_288_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::WireMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_288_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_288_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_288_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WireMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_288_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_288_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WireMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WireMeasurement", 1565, G__measurementsRootDict_288_0_23, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::WireMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WireMeasurement", 1691, G__measurementsRootDict_288_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLWirePointMeasurement(void) {
   /* genfit::WirePointMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement));
   G__memfunc_setup("WirePointMeasurement",2087,G__measurementsRootDict_289_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement), -1, 0, 1, 1, 1, 0, "i - - 0 '8' nDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WirePointMeasurement",2087,G__measurementsRootDict_289_0_2, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement), -1, 0, 5, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - rawHitCoords u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - rawHitCov "
"i - - 0 - detId i - - 0 - hitId "
"U 'genfit::TrackPoint' - 0 - trackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructPlane",1493,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructMeasurementsOnPlane",2955,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 1, 1, 1, 8, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("constructHMatrix",1698,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix), -1, 0, 1, 1, 1, 9, "U 'genfit::AbsTrackRep' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__measurementsRootDict_289_0_7, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::WirePointMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_289_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WirePointMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_289_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::WirePointMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_289_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::WirePointMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_289_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_289_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WirePointMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_289_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WirePointMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_289_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WirePointMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_289_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WirePointMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WirePointMeasurement", 2087, G__measurementsRootDict_289_0_19, (int) ('i'), G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::WirePointMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WirePointMeasurement", 2213, G__measurementsRootDict_289_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLWireTrackCandHit(void) {
   /* genfit::WireTrackCandHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit));
   G__memfunc_setup("WireTrackCandHit",1575,G__measurementsRootDict_291_0_1, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit), -1, 0, 5, 1, 1, 0, 
"i - - 0 '-1' detId i - - 0 '-1' hitId "
"i - - 0 '-1' planeId d - - 0 '0.' sortingParameter "
"c - - 0 '0' leftRight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLTrackCandHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLeftRightResolution",2301,G__measurementsRootDict_291_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeftRightResolution",2313,G__measurementsRootDict_291_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - leftRight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WireTrackCandHit",1575,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit), -1, 0, 1, 1, 2, 0, "u 'genfit::WireTrackCandHit' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit), -1, 1, 1, 1, 2, 0, "u 'genfit::WireTrackCandHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__measurementsRootDict_291_0_8, 85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::WireTrackCandHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__measurementsRootDict_291_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireTrackCandHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__measurementsRootDict_291_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::WireTrackCandHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__measurementsRootDict_291_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::WireTrackCandHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__measurementsRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__measurementsRootDict_291_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__measurementsRootDict_291_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireTrackCandHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__measurementsRootDict_291_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WireTrackCandHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__measurementsRootDict_291_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::WireTrackCandHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__measurementsRootDict_291_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::WireTrackCandHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WireTrackCandHit", 1701, G__measurementsRootDict_291_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmeasurementsRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmeasurementsRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmeasurementsRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__measurementsRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfit = { "genfit" , 110 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLAbsHMatrix = { "genfit::AbsHMatrix" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLHMatrixPhi = { "genfit::HMatrixPhi" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLHMatrixU = { "genfit::HMatrixU" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLHMatrixUnit = { "genfit::HMatrixUnit" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLHMatrixV = { "genfit::HMatrixV" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLHMatrixUV = { "genfit::HMatrixUV" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLSharedPlanePtr = { "genfit::SharedPlanePtr" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLStateOnPlane = { "genfit::StateOnPlane" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLMeasuredStateOnPlane = { "genfit::MeasuredStateOnPlane" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLAbsMeasurement = { "genfit::AbsMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLAbsTrackRep = { "genfit::AbsTrackRep" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR = { "vector<genfit::MatStep,allocator<genfit::MatStep> >" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MatStep,allocator<genfit::MatStep> >::iterator>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLTrackPoint = { "genfit::TrackPoint" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR = { "vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLFullMeasurement = { "genfit::FullMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLPlanarMeasurement = { "genfit::PlanarMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement = { "genfit::SpacepointMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement = { "genfit::ProlateSpacepointMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLWireMeasurement = { "genfit::WireMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLWirePointMeasurement = { "genfit::WirePointMeasurement" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLTrackCandHit = { "genfit::TrackCandHit" , 99 , -1 };
G__linked_taginfo G__measurementsRootDictLN_genfitcLcLWireTrackCandHit = { "genfit::WireTrackCandHit" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemeasurementsRootDict() {
  G__measurementsRootDictLN_TClass.tagnum = -1 ;
  G__measurementsRootDictLN_TBuffer.tagnum = -1 ;
  G__measurementsRootDictLN_TMemberInspector.tagnum = -1 ;
  G__measurementsRootDictLN_TObject.tagnum = -1 ;
  G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__measurementsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__measurementsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_genfit.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLAbsHMatrix.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLHMatrixPhi.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLHMatrixU.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLHMatrixUnit.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLHMatrixV.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLHMatrixUV.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__measurementsRootDictLN_TVector3.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLSharedPlanePtr.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLStateOnPlane.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLMeasuredStateOnPlane.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLAbsMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLAbsTrackRep.tagnum = -1 ;
  G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR.tagnum = -1 ;
  G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLTrackPoint.tagnum = -1 ;
  G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR.tagnum = -1 ;
  G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLFullMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLPlanarMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLWireMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLWirePointMeasurement.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLTrackCandHit.tagnum = -1 ;
  G__measurementsRootDictLN_genfitcLcLWireTrackCandHit.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemeasurementsRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfit);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLAbsHMatrix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLHMatrixPhi),sizeof(genfit::HMatrixPhi),-1,94464,(char*)NULL,G__setup_memvargenfitcLcLHMatrixPhi,G__setup_memfuncgenfitcLcLHMatrixPhi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLHMatrixU),sizeof(genfit::HMatrixU),-1,291072,(char*)NULL,G__setup_memvargenfitcLcLHMatrixU,G__setup_memfuncgenfitcLcLHMatrixU);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLHMatrixUnit),sizeof(genfit::HMatrixUnit),-1,291072,(char*)NULL,G__setup_memvargenfitcLcLHMatrixUnit,G__setup_memfuncgenfitcLcLHMatrixUnit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLHMatrixV),sizeof(genfit::HMatrixV),-1,291072,(char*)NULL,G__setup_memvargenfitcLcLHMatrixV,G__setup_memfuncgenfitcLcLHMatrixV);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLHMatrixUV),sizeof(genfit::HMatrixUV),-1,291072,(char*)NULL,G__setup_memvargenfitcLcLHMatrixUV,G__setup_memfuncgenfitcLcLHMatrixUV);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLSharedPlanePtr);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLStateOnPlane);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLMeasuredStateOnPlane);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLAbsMeasurement);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLAbsTrackRep);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLTrackPoint);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLFullMeasurement),sizeof(genfit::FullMeasurement),-1,128256,(char*)NULL,G__setup_memvargenfitcLcLFullMeasurement,G__setup_memfuncgenfitcLcLFullMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLPlanarMeasurement),sizeof(genfit::PlanarMeasurement),-1,128256,(char*)NULL,G__setup_memvargenfitcLcLPlanarMeasurement,G__setup_memfuncgenfitcLcLPlanarMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLSpacepointMeasurement),sizeof(genfit::SpacepointMeasurement),-1,128256,(char*)NULL,G__setup_memvargenfitcLcLSpacepointMeasurement,G__setup_memfuncgenfitcLcLSpacepointMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLProlateSpacepointMeasurement),sizeof(genfit::ProlateSpacepointMeasurement),-1,324864,(char*)NULL,G__setup_memvargenfitcLcLProlateSpacepointMeasurement,G__setup_memfuncgenfitcLcLProlateSpacepointMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLWireMeasurement),sizeof(genfit::WireMeasurement),-1,324864,(char*)NULL,G__setup_memvargenfitcLcLWireMeasurement,G__setup_memfuncgenfitcLcLWireMeasurement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLWirePointMeasurement),sizeof(genfit::WirePointMeasurement),-1,324864,(char*)NULL,G__setup_memvargenfitcLcLWirePointMeasurement,G__setup_memfuncgenfitcLcLWirePointMeasurement);
   G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLTrackCandHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__measurementsRootDictLN_genfitcLcLWireTrackCandHit),sizeof(genfit::WireTrackCandHit),-1,294656,(char*)NULL,G__setup_memvargenfitcLcLWireTrackCandHit,G__setup_memfuncgenfitcLcLWireTrackCandHit);
}
extern "C" void G__cpp_setupmeasurementsRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmeasurementsRootDict()");
  G__set_cpp_environmentmeasurementsRootDict();
  G__cpp_setup_tagtablemeasurementsRootDict();

  G__cpp_setup_inheritancemeasurementsRootDict();

  G__cpp_setup_typetablemeasurementsRootDict();

  G__cpp_setup_memvarmeasurementsRootDict();

  G__cpp_setup_memfuncmeasurementsRootDict();
  G__cpp_setup_globalmeasurementsRootDict();
  G__cpp_setup_funcmeasurementsRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmeasurementsRootDict();
  return;
}
class G__cpp_setup_initmeasurementsRootDict {
  public:
    G__cpp_setup_initmeasurementsRootDict() { G__add_setup_func("measurementsRootDict",(G__incsetup)(&G__cpp_setupmeasurementsRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmeasurementsRootDict() { G__remove_setup_func("measurementsRootDict"); }
};
G__cpp_setup_initmeasurementsRootDict G__cpp_setup_initializermeasurementsRootDict;

