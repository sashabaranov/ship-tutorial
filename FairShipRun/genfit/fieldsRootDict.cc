//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:27:14 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundIgenfitdIfieldsRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "fieldsRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      namespace genfit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::genfit::ConstField ConstField;
      #else
      class ConstField  :  public ::genfit::AbsBField {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ConstField() throw() {};
         ::TVector3 field_; //
      };
      #endif
      } 
      namespace genfit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::genfit::BellField BellField;
      #else
      class BellField  :  public ::genfit::AbsBField {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~BellField() throw() {};
         double fMiddle; //
         double fPeak; //
         int fOrient; //
         double fBtube; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void genfitcLcLConstField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void genfitcLcLConstField_Dictionary();
   static void delete_genfitcLcLConstField(void *p);
   static void deleteArray_genfitcLcLConstField(void *p);
   static void destruct_genfitcLcLConstField(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::ConstField*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::genfit::ConstField) == sizeof( ::ROOTShadow::Shadow::genfit::ConstField));
      ::genfit::ConstField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genfit::ConstField),0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::ConstField", "/input/FairShip/genfit/fields/include/ConstField.h", 37,
                  typeid(::genfit::ConstField), ::ROOT::DefineBehavior(ptr, ptr),
                  &genfitcLcLConstField_ShowMembers, &genfitcLcLConstField_Dictionary, isa_proxy, 4,
                  sizeof(::genfit::ConstField) );
      instance.SetDelete(&delete_genfitcLcLConstField);
      instance.SetDeleteArray(&deleteArray_genfitcLcLConstField);
      instance.SetDestructor(&destruct_genfitcLcLConstField);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::ConstField*)
   {
      return GenerateInitInstanceLocal((::genfit::ConstField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::ConstField*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void genfitcLcLConstField_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ConstField*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLBellField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void genfitcLcLBellField_Dictionary();
   static void *new_genfitcLcLBellField(void *p = 0);
   static void *newArray_genfitcLcLBellField(Long_t size, void *p);
   static void delete_genfitcLcLBellField(void *p);
   static void deleteArray_genfitcLcLBellField(void *p);
   static void destruct_genfitcLcLBellField(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::BellField*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::genfit::BellField) == sizeof( ::ROOTShadow::Shadow::genfit::BellField));
      ::genfit::BellField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genfit::BellField),0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::BellField", "/input/FairShip/genfit/fields/include/BellField.h", 35,
                  typeid(::genfit::BellField), ::ROOT::DefineBehavior(ptr, ptr),
                  &genfitcLcLBellField_ShowMembers, &genfitcLcLBellField_Dictionary, isa_proxy, 4,
                  sizeof(::genfit::BellField) );
      instance.SetNew(&new_genfitcLcLBellField);
      instance.SetNewArray(&newArray_genfitcLcLBellField);
      instance.SetDelete(&delete_genfitcLcLBellField);
      instance.SetDeleteArray(&deleteArray_genfitcLcLBellField);
      instance.SetDestructor(&destruct_genfitcLcLBellField);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::BellField*)
   {
      return GenerateInitInstanceLocal((::genfit::BellField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::BellField*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void genfitcLcLBellField_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::BellField*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void genfitcLcLConstField_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class genfit::ConstField.
      typedef ::ROOTShadow::Shadow::genfit::ConstField ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ConstField*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "field_", &sobj->field_);
      R__insp.InspectMember(sobj->field_, "field_.");
      R__insp.GenericShowMembers("genfit::AbsBField", ( ::genfit::AbsBField * )( (::genfit::ConstField*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_genfitcLcLConstField(void *p) {
      delete ((::genfit::ConstField*)p);
   }
   static void deleteArray_genfitcLcLConstField(void *p) {
      delete [] ((::genfit::ConstField*)p);
   }
   static void destruct_genfitcLcLConstField(void *p) {
      typedef ::genfit::ConstField current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::ConstField

//______________________________________________________________________________
namespace ROOTDict {
   void genfitcLcLBellField_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class genfit::BellField.
      typedef ::ROOTShadow::Shadow::genfit::BellField ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::BellField*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiddle", &sobj->fMiddle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPeak", &sobj->fPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrient", &sobj->fOrient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBtube", &sobj->fBtube);
      R__insp.GenericShowMembers("genfit::AbsBField", ( ::genfit::AbsBField * )( (::genfit::BellField*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLBellField(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::BellField : new ::genfit::BellField;
   }
   static void *newArray_genfitcLcLBellField(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::BellField[nElements] : new ::genfit::BellField[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLBellField(void *p) {
      delete ((::genfit::BellField*)p);
   }
   static void deleteArray_genfitcLcLBellField(void *p) {
      delete [] ((::genfit::BellField*)p);
   }
   static void destruct_genfitcLcLBellField(void *p) {
      typedef ::genfit::BellField current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::BellField

/********************************************************
* /input/FairShipRun/genfit/fieldsRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablefieldsRootDict();

extern "C" void G__set_cpp_environmentfieldsRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/input/FairShip/genfit/fields/include/ConstField.h");
  G__add_compiledheader("/input/FairShip/genfit/fields/include/BellField.h");
  G__cpp_reset_tagtablefieldsRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevfieldsRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genfit::ConstField */
static int G__fieldsRootDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ConstField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ConstField(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) genfit::ConstField(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fieldsRootDict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ConstField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ConstField(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genfit::ConstField(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fieldsRootDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::ConstField* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::ConstField(*(genfit::ConstField*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::ConstField G__TgenfitcLcLConstField;
static int G__fieldsRootDict_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::ConstField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::ConstField*) (soff+(sizeof(genfit::ConstField)*i)))->~G__TgenfitcLcLConstField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::ConstField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::ConstField*) (soff))->~G__TgenfitcLcLConstField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__fieldsRootDict_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ConstField* dest = (genfit::ConstField*) G__getstructoffset();
   *dest = *(genfit::ConstField*) libp->para[0].ref;
   const genfit::ConstField& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::BellField */
static int G__fieldsRootDict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::BellField* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::BellField[n];
     } else {
       p = new((void*) gvp) genfit::BellField[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::BellField;
     } else {
       p = new((void*) gvp) genfit::BellField;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fieldsRootDict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::BellField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::BellField(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) genfit::BellField(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fieldsRootDict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::BellField* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::BellField(*(genfit::BellField*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::BellField G__TgenfitcLcLBellField;
static int G__fieldsRootDict_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::BellField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::BellField*) (soff+(sizeof(genfit::BellField)*i)))->~G__TgenfitcLcLBellField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::BellField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::BellField*) (soff))->~G__TgenfitcLcLBellField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__fieldsRootDict_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::BellField* dest = (genfit::BellField*) G__getstructoffset();
   *dest = *(genfit::BellField*) libp->para[0].ref;
   const genfit::BellField& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genfit::ConstField */

/* genfit::BellField */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncfieldsRootDict {
 public:
  G__Sizep2memfuncfieldsRootDict(): p(&G__Sizep2memfuncfieldsRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncfieldsRootDict::*p)();
};

size_t G__get_sizep2memfuncfieldsRootDict()
{
  G__Sizep2memfuncfieldsRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancefieldsRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField))) {
     genfit::ConstField *G__Lderived;
     G__Lderived=(genfit::ConstField*)0x1000;
     {
       genfit::AbsBField *G__Lpbase=(genfit::AbsBField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField),G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLAbsBField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField))) {
     genfit::BellField *G__Lderived;
     G__Lderived=(genfit::BellField*)0x1000;
     {
       genfit::AbsBField *G__Lpbase=(genfit::AbsBField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField),G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLAbsBField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablefieldsRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__fieldsRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genfit::ConstField */
static void G__setup_memvargenfitcLcLConstField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField));
   { genfit::ConstField *p; p=(genfit::ConstField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fieldsRootDictLN_TVector3),-1,-1,4,"field_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::BellField */
static void G__setup_memvargenfitcLcLBellField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField));
   { genfit::BellField *p; p=(genfit::BellField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMiddle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fOrient=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBtube=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarfieldsRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenfitcLcLConstField(void) {
   /* genfit::ConstField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField));
   G__memfunc_setup("ConstField",1003,G__fieldsRootDict_222_0_1, 105, G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField), -1, 0, 3, 1, 1, 0, 
"d - - 0 - b1 d - - 0 - b2 "
"d - - 0 - b3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstField",1003,G__fieldsRootDict_222_0_2, 105, G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__fieldsRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,121, -1, -1, 0, 6, 1, 1, 8, 
"d - - 11 - posX d - - 11 - posY "
"d - - 11 - posZ d - - 1 - Bx "
"d - - 1 - By d - - 1 - Bz", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("ConstField", 1003, G__fieldsRootDict_222_0_5, (int) ('i'), G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField), -1, 0, 1, 1, 1, 0, "u 'genfit::ConstField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConstField", 1129, G__fieldsRootDict_222_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__fieldsRootDict_222_0_7, (int) ('u'), G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLConstField), -1, 1, 1, 1, 1, 0, "u 'genfit::ConstField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLBellField(void) {
   /* genfit::BellField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField));
   G__memfunc_setup("BellField",867,G__fieldsRootDict_223_0_1, 105, G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BellField",867,G__fieldsRootDict_223_0_2, 105, G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField), -1, 0, 4, 1, 1, 0, 
"d - - 0 - Peak d - - 0 - Middle "
"i - - 0 - orientation d - - 0 - Btube", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__fieldsRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,121, -1, -1, 0, 6, 1, 1, 8, 
"d - - 11 - posX d - - 11 - posY "
"d - - 11 - posZ d - - 1 - Bx "
"d - - 1 - By d - - 1 - Bz", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("BellField", 867, G__fieldsRootDict_223_0_5, (int) ('i'), G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField), -1, 0, 1, 1, 1, 0, "u 'genfit::BellField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BellField", 993, G__fieldsRootDict_223_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__fieldsRootDict_223_0_7, (int) ('u'), G__get_linked_tagnum(&G__fieldsRootDictLN_genfitcLcLBellField), -1, 1, 1, 1, 1, 0, "u 'genfit::BellField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncfieldsRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalfieldsRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcfieldsRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_genfit = { "genfit" , 110 , -1 };
G__linked_taginfo G__fieldsRootDictLN_genfitcLcLAbsBField = { "genfit::AbsBField" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_genfitcLcLConstField = { "genfit::ConstField" , 99 , -1 };
G__linked_taginfo G__fieldsRootDictLN_genfitcLcLBellField = { "genfit::BellField" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablefieldsRootDict() {
  G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__fieldsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__fieldsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__fieldsRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__fieldsRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__fieldsRootDictLN_TVector3.tagnum = -1 ;
  G__fieldsRootDictLN_genfit.tagnum = -1 ;
  G__fieldsRootDictLN_genfitcLcLAbsBField.tagnum = -1 ;
  G__fieldsRootDictLN_genfitcLcLConstField.tagnum = -1 ;
  G__fieldsRootDictLN_genfitcLcLBellField.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablefieldsRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_genfit);
   G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_genfitcLcLAbsBField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_genfitcLcLConstField),sizeof(genfit::ConstField),-1,294912,(char*)NULL,G__setup_memvargenfitcLcLConstField,G__setup_memfuncgenfitcLcLConstField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fieldsRootDictLN_genfitcLcLBellField),sizeof(genfit::BellField),-1,295168,(char*)NULL,G__setup_memvargenfitcLcLBellField,G__setup_memfuncgenfitcLcLBellField);
}
extern "C" void G__cpp_setupfieldsRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupfieldsRootDict()");
  G__set_cpp_environmentfieldsRootDict();
  G__cpp_setup_tagtablefieldsRootDict();

  G__cpp_setup_inheritancefieldsRootDict();

  G__cpp_setup_typetablefieldsRootDict();

  G__cpp_setup_memvarfieldsRootDict();

  G__cpp_setup_memfuncfieldsRootDict();
  G__cpp_setup_globalfieldsRootDict();
  G__cpp_setup_funcfieldsRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncfieldsRootDict();
  return;
}
class G__cpp_setup_initfieldsRootDict {
  public:
    G__cpp_setup_initfieldsRootDict() { G__add_setup_func("fieldsRootDict",(G__incsetup)(&G__cpp_setupfieldsRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initfieldsRootDict() { G__remove_setup_func("fieldsRootDict"); }
};
G__cpp_setup_initfieldsRootDict G__cpp_setup_initializerfieldsRootDict;

