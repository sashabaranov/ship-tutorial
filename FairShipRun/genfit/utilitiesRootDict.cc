//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:27:13 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundIgenfitdIutilitiesRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "utilitiesRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void genfitcLcLHelixTrackModel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_genfitcLcLHelixTrackModel(void *p);
   static void deleteArray_genfitcLcLHelixTrackModel(void *p);
   static void destruct_genfitcLcLHelixTrackModel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::HelixTrackModel*)
   {
      ::genfit::HelixTrackModel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::HelixTrackModel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::HelixTrackModel", ::genfit::HelixTrackModel::Class_Version(), "/input/FairShip/genfit/utilities/include/HelixTrackModel.h", 41,
                  typeid(::genfit::HelixTrackModel), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::HelixTrackModel::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::HelixTrackModel) );
      instance.SetDelete(&delete_genfitcLcLHelixTrackModel);
      instance.SetDeleteArray(&deleteArray_genfitcLcLHelixTrackModel);
      instance.SetDestructor(&destruct_genfitcLcLHelixTrackModel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::HelixTrackModel*)
   {
      return GenerateInitInstanceLocal((::genfit::HelixTrackModel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::HelixTrackModel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLMeasurementCreator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLMeasurementCreator(void *p = 0);
   static void *newArray_genfitcLcLMeasurementCreator(Long_t size, void *p);
   static void delete_genfitcLcLMeasurementCreator(void *p);
   static void deleteArray_genfitcLcLMeasurementCreator(void *p);
   static void destruct_genfitcLcLMeasurementCreator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::MeasurementCreator*)
   {
      ::genfit::MeasurementCreator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::MeasurementCreator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::MeasurementCreator", ::genfit::MeasurementCreator::Class_Version(), "/input/FairShip/genfit/utilities/include/MeasurementCreator.h", 55,
                  typeid(::genfit::MeasurementCreator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::MeasurementCreator::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::MeasurementCreator) );
      instance.SetNew(&new_genfitcLcLMeasurementCreator);
      instance.SetNewArray(&newArray_genfitcLcLMeasurementCreator);
      instance.SetDelete(&delete_genfitcLcLMeasurementCreator);
      instance.SetDeleteArray(&deleteArray_genfitcLcLMeasurementCreator);
      instance.SetDestructor(&destruct_genfitcLcLMeasurementCreator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::MeasurementCreator*)
   {
      return GenerateInitInstanceLocal((::genfit::MeasurementCreator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::MeasurementCreator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLmySpacepointDetectorHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLmySpacepointDetectorHit(void *p = 0);
   static void *newArray_genfitcLcLmySpacepointDetectorHit(Long_t size, void *p);
   static void delete_genfitcLcLmySpacepointDetectorHit(void *p);
   static void deleteArray_genfitcLcLmySpacepointDetectorHit(void *p);
   static void destruct_genfitcLcLmySpacepointDetectorHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::mySpacepointDetectorHit*)
   {
      ::genfit::mySpacepointDetectorHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::mySpacepointDetectorHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::mySpacepointDetectorHit", ::genfit::mySpacepointDetectorHit::Class_Version(), "/input/FairShip/genfit/utilities/include/mySpacepointDetectorHit.h", 33,
                  typeid(::genfit::mySpacepointDetectorHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::mySpacepointDetectorHit::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::mySpacepointDetectorHit) );
      instance.SetNew(&new_genfitcLcLmySpacepointDetectorHit);
      instance.SetNewArray(&newArray_genfitcLcLmySpacepointDetectorHit);
      instance.SetDelete(&delete_genfitcLcLmySpacepointDetectorHit);
      instance.SetDeleteArray(&deleteArray_genfitcLcLmySpacepointDetectorHit);
      instance.SetDestructor(&destruct_genfitcLcLmySpacepointDetectorHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::mySpacepointDetectorHit*)
   {
      return GenerateInitInstanceLocal((::genfit::mySpacepointDetectorHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::mySpacepointDetectorHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLmySpacepointMeasurement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLmySpacepointMeasurement(void *p = 0);
   static void *newArray_genfitcLcLmySpacepointMeasurement(Long_t size, void *p);
   static void delete_genfitcLcLmySpacepointMeasurement(void *p);
   static void deleteArray_genfitcLcLmySpacepointMeasurement(void *p);
   static void destruct_genfitcLcLmySpacepointMeasurement(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::mySpacepointMeasurement*)
   {
      ::genfit::mySpacepointMeasurement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::mySpacepointMeasurement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::mySpacepointMeasurement", ::genfit::mySpacepointMeasurement::Class_Version(), "/input/FairShip/genfit/utilities/include/mySpacepointMeasurement.h", 36,
                  typeid(::genfit::mySpacepointMeasurement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::mySpacepointMeasurement::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::mySpacepointMeasurement) );
      instance.SetNew(&new_genfitcLcLmySpacepointMeasurement);
      instance.SetNewArray(&newArray_genfitcLcLmySpacepointMeasurement);
      instance.SetDelete(&delete_genfitcLcLmySpacepointMeasurement);
      instance.SetDeleteArray(&deleteArray_genfitcLcLmySpacepointMeasurement);
      instance.SetDestructor(&destruct_genfitcLcLmySpacepointMeasurement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::mySpacepointMeasurement*)
   {
      return GenerateInitInstanceLocal((::genfit::mySpacepointMeasurement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::mySpacepointMeasurement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr HelixTrackModel::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HelixTrackModel::Class_Name()
{
   return "genfit::HelixTrackModel";
}

//______________________________________________________________________________
const char *HelixTrackModel::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HelixTrackModel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HelixTrackModel::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HelixTrackModel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HelixTrackModel::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HelixTrackModel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HelixTrackModel::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::HelixTrackModel*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr MeasurementCreator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MeasurementCreator::Class_Name()
{
   return "genfit::MeasurementCreator";
}

//______________________________________________________________________________
const char *MeasurementCreator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::MeasurementCreator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MeasurementCreator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::MeasurementCreator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MeasurementCreator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::MeasurementCreator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MeasurementCreator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::MeasurementCreator*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr mySpacepointDetectorHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mySpacepointDetectorHit::Class_Name()
{
   return "genfit::mySpacepointDetectorHit";
}

//______________________________________________________________________________
const char *mySpacepointDetectorHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointDetectorHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mySpacepointDetectorHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointDetectorHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mySpacepointDetectorHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointDetectorHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mySpacepointDetectorHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointDetectorHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr mySpacepointMeasurement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mySpacepointMeasurement::Class_Name()
{
   return "genfit::mySpacepointMeasurement";
}

//______________________________________________________________________________
const char *mySpacepointMeasurement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointMeasurement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mySpacepointMeasurement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointMeasurement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mySpacepointMeasurement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointMeasurement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mySpacepointMeasurement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::mySpacepointMeasurement*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
void HelixTrackModel::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::HelixTrackModel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::HelixTrackModel::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::HelixTrackModel::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void HelixTrackModel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::HelixTrackModel.
      TClass *R__cl = ::genfit::HelixTrackModel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sgn_", &sgn_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom_", &mom_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_", &R_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "center_", &center_);
      R__insp.InspectMember(center_, "center_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha0_", &alpha0_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta_", &theta_);
      TObject::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_genfitcLcLHelixTrackModel(void *p) {
      delete ((::genfit::HelixTrackModel*)p);
   }
   static void deleteArray_genfitcLcLHelixTrackModel(void *p) {
      delete [] ((::genfit::HelixTrackModel*)p);
   }
   static void destruct_genfitcLcLHelixTrackModel(void *p) {
      typedef ::genfit::HelixTrackModel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::HelixTrackModel

      namespace genfit {
//______________________________________________________________________________
void MeasurementCreator::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::MeasurementCreator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::MeasurementCreator::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::MeasurementCreator::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void MeasurementCreator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::MeasurementCreator.
      TClass *R__cl = ::genfit::MeasurementCreator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trackModel_", &trackModel_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resolution_", &resolution_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resolutionWire_", &resolutionWire_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outlierProb_", &outlierProb_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outlierRange_", &outlierRange_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaDetPlane_", &thetaDetPlane_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiDetPlane_", &phiDetPlane_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireCounter_", &wireCounter_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireDir_", &wireDir_);
      R__insp.InspectMember(wireDir_, "wireDir_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minDrift_", &minDrift_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxDrift_", &maxDrift_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idealLRResolution_", &idealLRResolution_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useSkew_", &useSkew_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "skewAngle_", &skewAngle_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSuperLayer_", &nSuperLayer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "measurementCounter_", &measurementCounter_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debug_", &debug_);
      TObject::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLMeasurementCreator(void *p) {
      return  p ? new(p) ::genfit::MeasurementCreator : new ::genfit::MeasurementCreator;
   }
   static void *newArray_genfitcLcLMeasurementCreator(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::MeasurementCreator[nElements] : new ::genfit::MeasurementCreator[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLMeasurementCreator(void *p) {
      delete ((::genfit::MeasurementCreator*)p);
   }
   static void deleteArray_genfitcLcLMeasurementCreator(void *p) {
      delete [] ((::genfit::MeasurementCreator*)p);
   }
   static void destruct_genfitcLcLMeasurementCreator(void *p) {
      typedef ::genfit::MeasurementCreator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::MeasurementCreator

      namespace genfit {
//______________________________________________________________________________
void mySpacepointDetectorHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::mySpacepointDetectorHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::mySpacepointDetectorHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::mySpacepointDetectorHit::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void mySpacepointDetectorHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::mySpacepointDetectorHit.
      TClass *R__cl = ::genfit::mySpacepointDetectorHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_", &pos_);
      R__insp.InspectMember(pos_, "pos_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cov_", &cov_);
      R__insp.InspectMember(cov_, "cov_.");
      TObject::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLmySpacepointDetectorHit(void *p) {
      return  p ? new(p) ::genfit::mySpacepointDetectorHit : new ::genfit::mySpacepointDetectorHit;
   }
   static void *newArray_genfitcLcLmySpacepointDetectorHit(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::mySpacepointDetectorHit[nElements] : new ::genfit::mySpacepointDetectorHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLmySpacepointDetectorHit(void *p) {
      delete ((::genfit::mySpacepointDetectorHit*)p);
   }
   static void deleteArray_genfitcLcLmySpacepointDetectorHit(void *p) {
      delete [] ((::genfit::mySpacepointDetectorHit*)p);
   }
   static void destruct_genfitcLcLmySpacepointDetectorHit(void *p) {
      typedef ::genfit::mySpacepointDetectorHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::mySpacepointDetectorHit

      namespace genfit {
//______________________________________________________________________________
void mySpacepointMeasurement::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::mySpacepointMeasurement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::mySpacepointMeasurement::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::mySpacepointMeasurement::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void mySpacepointMeasurement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::mySpacepointMeasurement.
      TClass *R__cl = ::genfit::mySpacepointMeasurement::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::SpacepointMeasurement baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLmySpacepointMeasurement(void *p) {
      return  p ? new(p) ::genfit::mySpacepointMeasurement : new ::genfit::mySpacepointMeasurement;
   }
   static void *newArray_genfitcLcLmySpacepointMeasurement(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::mySpacepointMeasurement[nElements] : new ::genfit::mySpacepointMeasurement[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLmySpacepointMeasurement(void *p) {
      delete ((::genfit::mySpacepointMeasurement*)p);
   }
   static void deleteArray_genfitcLcLmySpacepointMeasurement(void *p) {
      delete [] ((::genfit::mySpacepointMeasurement*)p);
   }
   static void destruct_genfitcLcLmySpacepointMeasurement(void *p) {
      typedef ::genfit::mySpacepointMeasurement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::mySpacepointMeasurement

/********************************************************
* /input/FairShipRun/genfit/utilitiesRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableutilitiesRootDict();

extern "C" void G__set_cpp_environmentutilitiesRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/input/FairShip/genfit/utilities/include/HelixTrackModel.h");
  G__add_compiledheader("/input/FairShip/genfit/utilities/include/MeasurementCreator.h");
  G__add_compiledheader("/input/FairShip/genfit/utilities/include/mySpacepointDetectorHit.h");
  G__add_compiledheader("/input/FairShip/genfit/utilities/include/mySpacepointMeasurement.h");
  G__cpp_reset_tagtableutilitiesRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevutilitiesRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genfit::HelixTrackModel */
static int G__utilitiesRootDict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HelixTrackModel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::HelixTrackModel(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) genfit::HelixTrackModel(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const genfit::HelixTrackModel*) G__getstructoffset())->getPos((double) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genfit::HelixTrackModel*) G__getstructoffset())->getPosMom((double) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genfit::HelixTrackModel*) G__getstructoffset())->getPosDir((double) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::HelixTrackModel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HelixTrackModel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::HelixTrackModel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::HelixTrackModel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::HelixTrackModel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HelixTrackModel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HelixTrackModel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::HelixTrackModel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::HelixTrackModel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__utilitiesRootDict_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::HelixTrackModel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::HelixTrackModel(*(genfit::HelixTrackModel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::HelixTrackModel G__TgenfitcLcLHelixTrackModel;
static int G__utilitiesRootDict_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::HelixTrackModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::HelixTrackModel*) (soff+(sizeof(genfit::HelixTrackModel)*i)))->~G__TgenfitcLcLHelixTrackModel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::HelixTrackModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::HelixTrackModel*) (soff))->~G__TgenfitcLcLHelixTrackModel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__utilitiesRootDict_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::HelixTrackModel* dest = (genfit::HelixTrackModel*) G__getstructoffset();
   *dest = *(genfit::HelixTrackModel*) libp->para[0].ref;
   const genfit::HelixTrackModel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::MeasurementCreator */
static int G__utilitiesRootDict_281_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::MeasurementCreator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::MeasurementCreator[n];
     } else {
       p = new((void*) gvp) genfit::MeasurementCreator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::MeasurementCreator;
     } else {
       p = new((void*) gvp) genfit::MeasurementCreator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setTrackModel((genfit::HelixTrackModel*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setResolution((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setResolutionWire((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setOutlierProb((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setOutlierRange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setThetaDetPlane((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setPhiDetPlane((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setWireDir(*((const TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setMinDrift((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setMaxDrift((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setIdealLRResolution((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setUseSkew((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setSkewAngle((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setNSuperLayer((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->setDebug((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<genfit::AbsMeasurement*>* pobj;
         vector<genfit::AbsMeasurement*> xobj = ((genfit::MeasurementCreator*) G__getstructoffset())->create((genfit::eMeasurementType) G__int(libp->para[0]), (double) G__double(libp->para[1])
, *(bool*) G__Boolref(&libp->para[2]), *(int*) G__Intref(&libp->para[3]));
         pobj = new vector<genfit::AbsMeasurement*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<genfit::AbsMeasurement*>* pobj;
         vector<genfit::AbsMeasurement*> xobj = ((genfit::MeasurementCreator*) G__getstructoffset())->create((genfit::eMeasurementType) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<genfit::AbsMeasurement*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::MeasurementCreator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::MeasurementCreator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::MeasurementCreator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::MeasurementCreator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::MeasurementCreator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::MeasurementCreator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::MeasurementCreator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::MeasurementCreator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_281_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::MeasurementCreator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__utilitiesRootDict_281_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::MeasurementCreator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::MeasurementCreator(*(genfit::MeasurementCreator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::MeasurementCreator G__TgenfitcLcLMeasurementCreator;
static int G__utilitiesRootDict_281_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::MeasurementCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::MeasurementCreator*) (soff+(sizeof(genfit::MeasurementCreator)*i)))->~G__TgenfitcLcLMeasurementCreator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::MeasurementCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::MeasurementCreator*) (soff))->~G__TgenfitcLcLMeasurementCreator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::mySpacepointDetectorHit */
static int G__utilitiesRootDict_286_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::mySpacepointDetectorHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::mySpacepointDetectorHit[n];
     } else {
       p = new((void*) gvp) genfit::mySpacepointDetectorHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::mySpacepointDetectorHit;
     } else {
       p = new((void*) gvp) genfit::mySpacepointDetectorHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::mySpacepointDetectorHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::mySpacepointDetectorHit(*(TVector3*) libp->para[0].ref, *((const TMatrixDSym*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) genfit::mySpacepointDetectorHit(*(TVector3*) libp->para[0].ref, *((const TMatrixDSym*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const genfit::mySpacepointDetectorHit*) G__getstructoffset())->getPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym* pobj;
         const TMatrixDSym xobj = ((const genfit::mySpacepointDetectorHit*) G__getstructoffset())->getCov();
         pobj = new TMatrixDSym(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::mySpacepointDetectorHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointDetectorHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::mySpacepointDetectorHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::mySpacepointDetectorHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::mySpacepointDetectorHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointDetectorHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::mySpacepointDetectorHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointDetectorHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_286_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::mySpacepointDetectorHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__utilitiesRootDict_286_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::mySpacepointDetectorHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::mySpacepointDetectorHit(*(genfit::mySpacepointDetectorHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::mySpacepointDetectorHit G__TgenfitcLcLmySpacepointDetectorHit;
static int G__utilitiesRootDict_286_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::mySpacepointDetectorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::mySpacepointDetectorHit*) (soff+(sizeof(genfit::mySpacepointDetectorHit)*i)))->~G__TgenfitcLcLmySpacepointDetectorHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::mySpacepointDetectorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::mySpacepointDetectorHit*) (soff))->~G__TgenfitcLcLmySpacepointDetectorHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__utilitiesRootDict_286_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::mySpacepointDetectorHit* dest = (genfit::mySpacepointDetectorHit*) G__getstructoffset();
   *dest = *(genfit::mySpacepointDetectorHit*) libp->para[0].ref;
   const genfit::mySpacepointDetectorHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::mySpacepointMeasurement */
static int G__utilitiesRootDict_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::mySpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::mySpacepointMeasurement[n];
     } else {
       p = new((void*) gvp) genfit::mySpacepointMeasurement[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::mySpacepointMeasurement;
     } else {
       p = new((void*) gvp) genfit::mySpacepointMeasurement;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::mySpacepointMeasurement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::mySpacepointMeasurement((genfit::mySpacepointDetectorHit*) G__int(libp->para[0]), (genfit::TrackCandHit*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) genfit::mySpacepointMeasurement((genfit::mySpacepointDetectorHit*) G__int(libp->para[0]), (genfit::TrackCandHit*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::mySpacepointMeasurement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointMeasurement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::mySpacepointMeasurement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::mySpacepointMeasurement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::mySpacepointMeasurement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointMeasurement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::mySpacepointMeasurement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::mySpacepointMeasurement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__utilitiesRootDict_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::mySpacepointMeasurement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__utilitiesRootDict_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::mySpacepointMeasurement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::mySpacepointMeasurement(*(genfit::mySpacepointMeasurement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::mySpacepointMeasurement G__TgenfitcLcLmySpacepointMeasurement;
static int G__utilitiesRootDict_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::mySpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::mySpacepointMeasurement*) (soff+(sizeof(genfit::mySpacepointMeasurement)*i)))->~G__TgenfitcLcLmySpacepointMeasurement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::mySpacepointMeasurement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::mySpacepointMeasurement*) (soff))->~G__TgenfitcLcLmySpacepointMeasurement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genfit::HelixTrackModel */

/* genfit::MeasurementCreator */

/* genfit::mySpacepointDetectorHit */

/* genfit::mySpacepointMeasurement */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncutilitiesRootDict {
 public:
  G__Sizep2memfuncutilitiesRootDict(): p(&G__Sizep2memfuncutilitiesRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncutilitiesRootDict::*p)();
};

size_t G__get_sizep2memfuncutilitiesRootDict()
{
  G__Sizep2memfuncutilitiesRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceutilitiesRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel))) {
     genfit::HelixTrackModel *G__Lderived;
     G__Lderived=(genfit::HelixTrackModel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel),G__get_linked_tagnum(&G__utilitiesRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator))) {
     genfit::MeasurementCreator *G__Lderived;
     G__Lderived=(genfit::MeasurementCreator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator),G__get_linked_tagnum(&G__utilitiesRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit))) {
     genfit::mySpacepointDetectorHit *G__Lderived;
     G__Lderived=(genfit::mySpacepointDetectorHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit),G__get_linked_tagnum(&G__utilitiesRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement))) {
     genfit::mySpacepointMeasurement *G__Lderived;
     G__Lderived=(genfit::mySpacepointMeasurement*)0x1000;
     {
       genfit::SpacepointMeasurement *G__Lpbase=(genfit::SpacepointMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement),G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLSpacepointMeasurement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsMeasurement *G__Lpbase=(genfit::AbsMeasurement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement),G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLAbsMeasurement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement),G__get_linked_tagnum(&G__utilitiesRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableutilitiesRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MatStep>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::AbsMeasurement*>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLSpacepointMeasurement));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genfit::HelixTrackModel */
static void G__setup_memvargenfitcLcLHelixTrackModel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel));
   { genfit::HelixTrackModel *p; p=(genfit::HelixTrackModel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sgn_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mom_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"R_=",0,"radius");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TVector3),-1,-1,4,"center_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpha0_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"theta_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::MeasurementCreator */
static void G__setup_memvargenfitcLcLMeasurementCreator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator));
   { genfit::MeasurementCreator *p; p=(genfit::MeasurementCreator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel),-1,-1,4,"trackModel_=",0,"ownership");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"resolution_=",0,"cm; resolution of generated measurements");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"resolutionWire_=",0,"cm; resolution in wire direction of generated measurements (wire and prolate sp measurements)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"outlierProb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"outlierRange_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaDetPlane_=",0,"degree");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phiDetPlane_=",0,"degree");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"wireCounter_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TVector3),-1,-1,4,"wireDir_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"minDrift_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"maxDrift_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"idealLRResolution_=",0,"resolve the l/r ambiguities of the wire measurements");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useSkew_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"skewAngle_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nSuperLayer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"measurementCounter_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"debug_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::mySpacepointDetectorHit */
static void G__setup_memvargenfitcLcLmySpacepointDetectorHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit));
   { genfit::mySpacepointDetectorHit *p; p=(genfit::mySpacepointDetectorHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TVector3),-1,-1,4,"pos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"cov_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::mySpacepointMeasurement */
static void G__setup_memvargenfitcLcLmySpacepointMeasurement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement));
   { genfit::mySpacepointMeasurement *p; p=(genfit::mySpacepointMeasurement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarutilitiesRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenfitcLcLHelixTrackModel(void) {
   /* genfit::HelixTrackModel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel));
   G__memfunc_setup("HelixTrackModel",1504,G__utilitiesRootDict_221_0_1, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel), -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - pos u 'TVector3' - 11 - mom "
"d - - 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPos",626,G__utilitiesRootDict_221_0_2, 117, G__get_linked_tagnum(&G__utilitiesRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "d - - 0 - tracklength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosMom",923,G__utilitiesRootDict_221_0_3, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - tracklength u 'TVector3' - 1 - pos "
"u 'TVector3' - 1 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosDir",913,G__utilitiesRootDict_221_0_4, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - tracklength u 'TVector3' - 1 - pos "
"u 'TVector3' - 1 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__utilitiesRootDict_221_0_5, 85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::HelixTrackModel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__utilitiesRootDict_221_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HelixTrackModel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__utilitiesRootDict_221_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::HelixTrackModel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__utilitiesRootDict_221_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::HelixTrackModel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__utilitiesRootDict_221_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__utilitiesRootDict_221_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HelixTrackModel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__utilitiesRootDict_221_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HelixTrackModel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__utilitiesRootDict_221_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::HelixTrackModel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__utilitiesRootDict_221_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::HelixTrackModel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HelixTrackModel", 1504, G__utilitiesRootDict_221_0_17, (int) ('i'), G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel), -1, 0, 1, 1, 1, 0, "u 'genfit::HelixTrackModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HelixTrackModel", 1630, G__utilitiesRootDict_221_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__utilitiesRootDict_221_0_19, (int) ('u'), G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel), -1, 1, 1, 1, 1, 0, "u 'genfit::HelixTrackModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLMeasurementCreator(void) {
   /* genfit::MeasurementCreator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator));
   G__memfunc_setup("MeasurementCreator",1878,G__utilitiesRootDict_281_0_1, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackModel",1330,G__utilitiesRootDict_281_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::HelixTrackModel' - 10 - model", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResolution",1408,G__utilitiesRootDict_281_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - resolution", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResolutionWire",1815,G__utilitiesRootDict_281_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - resolutionWire", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutlierProb",1475,G__utilitiesRootDict_281_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - outlierProb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutlierRange",1565,G__utilitiesRootDict_281_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - outlierRange", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setThetaDetPlane",1615,G__utilitiesRootDict_281_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - thetaDetPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhiDetPlane",1402,G__utilitiesRootDict_281_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phiDetPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWireDir",1026,G__utilitiesRootDict_281_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 10 - wireDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinDrift",1129,G__utilitiesRootDict_281_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - minDrift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxDrift",1131,G__utilitiesRootDict_281_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - maxDrift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdealLRResolution",2045,G__utilitiesRootDict_281_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - idealLRResolution", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseSkew",1043,G__utilitiesRootDict_281_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - useSkew", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSkewAngle",1229,G__utilitiesRootDict_281_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - skewAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSuperLayer",1446,G__utilitiesRootDict_281_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nSuperLayer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDebug",819,G__utilitiesRootDict_281_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create",628,G__utilitiesRootDict_281_0_17, 117, G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR), G__defined_typename("vector<genfit::AbsMeasurement*>"), 0, 4, 1, 1, 0, 
"i 'genfit::eMeasurementType' - 0 - - d - - 0 - tracklength "
"g - - 1 - outlier i - - 1 - lr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create",628,G__utilitiesRootDict_281_0_18, 117, G__get_linked_tagnum(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR), G__defined_typename("vector<genfit::AbsMeasurement*>"), 0, 2, 1, 1, 0, 
"i 'genfit::eMeasurementType' - 0 - type d - - 0 - tracklength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__utilitiesRootDict_281_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__utilitiesRootDict_281_0_20, 85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::MeasurementCreator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__utilitiesRootDict_281_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::MeasurementCreator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__utilitiesRootDict_281_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::MeasurementCreator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__utilitiesRootDict_281_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::MeasurementCreator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__utilitiesRootDict_281_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__utilitiesRootDict_281_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::MeasurementCreator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__utilitiesRootDict_281_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::MeasurementCreator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__utilitiesRootDict_281_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::MeasurementCreator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__utilitiesRootDict_281_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::MeasurementCreator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MeasurementCreator", 1878, G__utilitiesRootDict_281_0_32, (int) ('i'), G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator), -1, 0, 1, 1, 1, 0, "u 'genfit::MeasurementCreator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MeasurementCreator", 2004, G__utilitiesRootDict_281_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLmySpacepointDetectorHit(void) {
   /* genfit::mySpacepointDetectorHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit));
   G__memfunc_setup("mySpacepointDetectorHit",2395,G__utilitiesRootDict_286_0_1, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mySpacepointDetectorHit",2395,G__utilitiesRootDict_286_0_2, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - pos u 'TMatrixTSym<double>' 'TMatrixDSym' 10 - cov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPos",626,G__utilitiesRootDict_286_0_3, 117, G__get_linked_tagnum(&G__utilitiesRootDictLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCov",616,G__utilitiesRootDict_286_0_4, 117, G__get_linked_tagnum(&G__utilitiesRootDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__utilitiesRootDict_286_0_5, 85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::mySpacepointDetectorHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__utilitiesRootDict_286_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointDetectorHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__utilitiesRootDict_286_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::mySpacepointDetectorHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__utilitiesRootDict_286_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::mySpacepointDetectorHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__utilitiesRootDict_286_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__utilitiesRootDict_286_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointDetectorHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__utilitiesRootDict_286_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::mySpacepointDetectorHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__utilitiesRootDict_286_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointDetectorHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__utilitiesRootDict_286_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::mySpacepointDetectorHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("mySpacepointDetectorHit", 2395, G__utilitiesRootDict_286_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit), -1, 0, 1, 1, 1, 0, "u 'genfit::mySpacepointDetectorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mySpacepointDetectorHit", 2521, G__utilitiesRootDict_286_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__utilitiesRootDict_286_0_19, (int) ('u'), G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit), -1, 1, 1, 1, 1, 0, "u 'genfit::mySpacepointDetectorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLmySpacepointMeasurement(void) {
   /* genfit::mySpacepointMeasurement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement));
   G__memfunc_setup("mySpacepointMeasurement",2434,G__utilitiesRootDict_289_0_1, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mySpacepointMeasurement",2434,G__utilitiesRootDict_289_0_2, 105, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement), -1, 0, 2, 1, 1, 0, 
"U 'genfit::mySpacepointDetectorHit' - 10 - detHit U 'genfit::TrackCandHit' - 10 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLAbsMeasurement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__utilitiesRootDict_289_0_4, 85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::mySpacepointMeasurement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__utilitiesRootDict_289_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointMeasurement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__utilitiesRootDict_289_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::mySpacepointMeasurement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__utilitiesRootDict_289_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::mySpacepointMeasurement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__utilitiesRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__utilitiesRootDict_289_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__utilitiesRootDict_289_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointMeasurement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__utilitiesRootDict_289_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::mySpacepointMeasurement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__utilitiesRootDict_289_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::mySpacepointMeasurement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__utilitiesRootDict_289_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::mySpacepointMeasurement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("mySpacepointMeasurement", 2434, G__utilitiesRootDict_289_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement), -1, 0, 1, 1, 1, 0, "u 'genfit::mySpacepointMeasurement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mySpacepointMeasurement", 2560, G__utilitiesRootDict_289_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncutilitiesRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalutilitiesRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcutilitiesRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__utilitiesRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfit = { "genfit" , 110 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLHelixTrackModel = { "genfit::HelixTrackModel" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLAbsMeasurement = { "genfit::AbsMeasurement" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR = { "vector<genfit::MatStep,allocator<genfit::MatStep> >" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MatStep,allocator<genfit::MatStep> >::iterator>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR = { "vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLeMeasurementType = { "genfit::eMeasurementType" , 101 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLMeasurementCreator = { "genfit::MeasurementCreator" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR = { "vector<genfit::AbsMeasurement*,allocator<genfit::AbsMeasurement*> >" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::AbsMeasurement*,allocator<genfit::AbsMeasurement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit = { "genfit::mySpacepointDetectorHit" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLSpacepointMeasurement = { "genfit::SpacepointMeasurement" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLTrackCandHit = { "genfit::TrackCandHit" , 99 , -1 };
G__linked_taginfo G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement = { "genfit::mySpacepointMeasurement" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableutilitiesRootDict() {
  G__utilitiesRootDictLN_TClass.tagnum = -1 ;
  G__utilitiesRootDictLN_TBuffer.tagnum = -1 ;
  G__utilitiesRootDictLN_TMemberInspector.tagnum = -1 ;
  G__utilitiesRootDictLN_TObject.tagnum = -1 ;
  G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__utilitiesRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__utilitiesRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__utilitiesRootDictLN_TVector3.tagnum = -1 ;
  G__utilitiesRootDictLN_genfit.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLHelixTrackModel.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLAbsMeasurement.tagnum = -1 ;
  G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR.tagnum = -1 ;
  G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR.tagnum = -1 ;
  G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLeMeasurementType.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLMeasurementCreator.tagnum = -1 ;
  G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR.tagnum = -1 ;
  G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLSpacepointMeasurement.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLTrackCandHit.tagnum = -1 ;
  G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableutilitiesRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLHelixTrackModel),sizeof(genfit::HelixTrackModel),-1,323584,(char*)NULL,G__setup_memvargenfitcLcLHelixTrackModel,G__setup_memfuncgenfitcLcLHelixTrackModel);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLAbsMeasurement);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLeMeasurementType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLMeasurementCreator),sizeof(genfit::MeasurementCreator),-1,292096,(char*)NULL,G__setup_memvargenfitcLcLMeasurementCreator,G__setup_memfuncgenfitcLcLMeasurementCreator);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLmySpacepointDetectorHit),sizeof(genfit::mySpacepointDetectorHit),-1,323840,(char*)NULL,G__setup_memvargenfitcLcLmySpacepointDetectorHit,G__setup_memfuncgenfitcLcLmySpacepointDetectorHit);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLSpacepointMeasurement);
   G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLTrackCandHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__utilitiesRootDictLN_genfitcLcLmySpacepointMeasurement),sizeof(genfit::mySpacepointMeasurement),-1,323840,(char*)NULL,G__setup_memvargenfitcLcLmySpacepointMeasurement,G__setup_memfuncgenfitcLcLmySpacepointMeasurement);
}
extern "C" void G__cpp_setuputilitiesRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuputilitiesRootDict()");
  G__set_cpp_environmentutilitiesRootDict();
  G__cpp_setup_tagtableutilitiesRootDict();

  G__cpp_setup_inheritanceutilitiesRootDict();

  G__cpp_setup_typetableutilitiesRootDict();

  G__cpp_setup_memvarutilitiesRootDict();

  G__cpp_setup_memfuncutilitiesRootDict();
  G__cpp_setup_globalutilitiesRootDict();
  G__cpp_setup_funcutilitiesRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncutilitiesRootDict();
  return;
}
class G__cpp_setup_initutilitiesRootDict {
  public:
    G__cpp_setup_initutilitiesRootDict() { G__add_setup_func("utilitiesRootDict",(G__incsetup)(&G__cpp_setuputilitiesRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initutilitiesRootDict() { G__remove_setup_func("utilitiesRootDict"); }
};
G__cpp_setup_initutilitiesRootDict G__cpp_setup_initializerutilitiesRootDict;

