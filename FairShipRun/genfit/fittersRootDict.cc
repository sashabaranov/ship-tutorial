//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:27:31 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundIgenfitdIfittersRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "fittersRootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void genfitcLcLKalmanFitterInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLKalmanFitterInfo(void *p = 0);
   static void *newArray_genfitcLcLKalmanFitterInfo(Long_t size, void *p);
   static void delete_genfitcLcLKalmanFitterInfo(void *p);
   static void deleteArray_genfitcLcLKalmanFitterInfo(void *p);
   static void destruct_genfitcLcLKalmanFitterInfo(void *p);
   static void streamer_genfitcLcLKalmanFitterInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::KalmanFitterInfo*)
   {
      ::genfit::KalmanFitterInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::KalmanFitterInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::KalmanFitterInfo", ::genfit::KalmanFitterInfo::Class_Version(), "/input/FairShip/genfit/fitters/include/KalmanFitterInfo.h", 46,
                  typeid(::genfit::KalmanFitterInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::KalmanFitterInfo::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::KalmanFitterInfo) );
      instance.SetNew(&new_genfitcLcLKalmanFitterInfo);
      instance.SetNewArray(&newArray_genfitcLcLKalmanFitterInfo);
      instance.SetDelete(&delete_genfitcLcLKalmanFitterInfo);
      instance.SetDeleteArray(&deleteArray_genfitcLcLKalmanFitterInfo);
      instance.SetDestructor(&destruct_genfitcLcLKalmanFitterInfo);
      instance.SetStreamerFunc(&streamer_genfitcLcLKalmanFitterInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::KalmanFitterInfo*)
   {
      return GenerateInitInstanceLocal((::genfit::KalmanFitterInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::KalmanFitterInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLAbsKalmanFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_genfitcLcLAbsKalmanFitter(void *p);
   static void deleteArray_genfitcLcLAbsKalmanFitter(void *p);
   static void destruct_genfitcLcLAbsKalmanFitter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::AbsKalmanFitter*)
   {
      ::genfit::AbsKalmanFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::AbsKalmanFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::AbsKalmanFitter", ::genfit::AbsKalmanFitter::Class_Version(), "/input/FairShip/genfit/fitters/include/AbsKalmanFitter.h", 51,
                  typeid(::genfit::AbsKalmanFitter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::AbsKalmanFitter::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::AbsKalmanFitter) );
      instance.SetDelete(&delete_genfitcLcLAbsKalmanFitter);
      instance.SetDeleteArray(&deleteArray_genfitcLcLAbsKalmanFitter);
      instance.SetDestructor(&destruct_genfitcLcLAbsKalmanFitter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::AbsKalmanFitter*)
   {
      return GenerateInitInstanceLocal((::genfit::AbsKalmanFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::AbsKalmanFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLKalmanFittedStateOnPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLKalmanFittedStateOnPlane(void *p = 0);
   static void *newArray_genfitcLcLKalmanFittedStateOnPlane(Long_t size, void *p);
   static void delete_genfitcLcLKalmanFittedStateOnPlane(void *p);
   static void deleteArray_genfitcLcLKalmanFittedStateOnPlane(void *p);
   static void destruct_genfitcLcLKalmanFittedStateOnPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::KalmanFittedStateOnPlane*)
   {
      ::genfit::KalmanFittedStateOnPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::KalmanFittedStateOnPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::KalmanFittedStateOnPlane", ::genfit::KalmanFittedStateOnPlane::Class_Version(), "/input/FairShip/genfit/fitters/include/KalmanFittedStateOnPlane.h", 35,
                  typeid(::genfit::KalmanFittedStateOnPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::KalmanFittedStateOnPlane::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::KalmanFittedStateOnPlane) );
      instance.SetNew(&new_genfitcLcLKalmanFittedStateOnPlane);
      instance.SetNewArray(&newArray_genfitcLcLKalmanFittedStateOnPlane);
      instance.SetDelete(&delete_genfitcLcLKalmanFittedStateOnPlane);
      instance.SetDeleteArray(&deleteArray_genfitcLcLKalmanFittedStateOnPlane);
      instance.SetDestructor(&destruct_genfitcLcLKalmanFittedStateOnPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::KalmanFittedStateOnPlane*)
   {
      return GenerateInitInstanceLocal((::genfit::KalmanFittedStateOnPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::KalmanFittedStateOnPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLKalmanFitStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLKalmanFitStatus(void *p = 0);
   static void *newArray_genfitcLcLKalmanFitStatus(Long_t size, void *p);
   static void delete_genfitcLcLKalmanFitStatus(void *p);
   static void deleteArray_genfitcLcLKalmanFitStatus(void *p);
   static void destruct_genfitcLcLKalmanFitStatus(void *p);
   static void streamer_genfitcLcLKalmanFitStatus(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::KalmanFitStatus*)
   {
      ::genfit::KalmanFitStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::KalmanFitStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::KalmanFitStatus", ::genfit::KalmanFitStatus::Class_Version(), "/input/FairShip/genfit/fitters/include/KalmanFitStatus.h", 36,
                  typeid(::genfit::KalmanFitStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::KalmanFitStatus::Dictionary, isa_proxy, 0,
                  sizeof(::genfit::KalmanFitStatus) );
      instance.SetNew(&new_genfitcLcLKalmanFitStatus);
      instance.SetNewArray(&newArray_genfitcLcLKalmanFitStatus);
      instance.SetDelete(&delete_genfitcLcLKalmanFitStatus);
      instance.SetDeleteArray(&deleteArray_genfitcLcLKalmanFitStatus);
      instance.SetDestructor(&destruct_genfitcLcLKalmanFitStatus);
      instance.SetStreamerFunc(&streamer_genfitcLcLKalmanFitStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::KalmanFitStatus*)
   {
      return GenerateInitInstanceLocal((::genfit::KalmanFitStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::KalmanFitStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLReferenceStateOnPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLReferenceStateOnPlane(void *p = 0);
   static void *newArray_genfitcLcLReferenceStateOnPlane(Long_t size, void *p);
   static void delete_genfitcLcLReferenceStateOnPlane(void *p);
   static void deleteArray_genfitcLcLReferenceStateOnPlane(void *p);
   static void destruct_genfitcLcLReferenceStateOnPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::ReferenceStateOnPlane*)
   {
      ::genfit::ReferenceStateOnPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::ReferenceStateOnPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::ReferenceStateOnPlane", ::genfit::ReferenceStateOnPlane::Class_Version(), "/input/FairShip/genfit/fitters/include/ReferenceStateOnPlane.h", 43,
                  typeid(::genfit::ReferenceStateOnPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::ReferenceStateOnPlane::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::ReferenceStateOnPlane) );
      instance.SetNew(&new_genfitcLcLReferenceStateOnPlane);
      instance.SetNewArray(&newArray_genfitcLcLReferenceStateOnPlane);
      instance.SetDelete(&delete_genfitcLcLReferenceStateOnPlane);
      instance.SetDeleteArray(&deleteArray_genfitcLcLReferenceStateOnPlane);
      instance.SetDestructor(&destruct_genfitcLcLReferenceStateOnPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::ReferenceStateOnPlane*)
   {
      return GenerateInitInstanceLocal((::genfit::ReferenceStateOnPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::ReferenceStateOnPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLKalmanFitterRefTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLKalmanFitterRefTrack(void *p = 0);
   static void *newArray_genfitcLcLKalmanFitterRefTrack(Long_t size, void *p);
   static void delete_genfitcLcLKalmanFitterRefTrack(void *p);
   static void deleteArray_genfitcLcLKalmanFitterRefTrack(void *p);
   static void destruct_genfitcLcLKalmanFitterRefTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::KalmanFitterRefTrack*)
   {
      ::genfit::KalmanFitterRefTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::KalmanFitterRefTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::KalmanFitterRefTrack", ::genfit::KalmanFitterRefTrack::Class_Version(), "/input/FairShip/genfit/fitters/include/KalmanFitterRefTrack.h", 37,
                  typeid(::genfit::KalmanFitterRefTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::KalmanFitterRefTrack::Dictionary, isa_proxy, 4,
                  sizeof(::genfit::KalmanFitterRefTrack) );
      instance.SetNew(&new_genfitcLcLKalmanFitterRefTrack);
      instance.SetNewArray(&newArray_genfitcLcLKalmanFitterRefTrack);
      instance.SetDelete(&delete_genfitcLcLKalmanFitterRefTrack);
      instance.SetDeleteArray(&deleteArray_genfitcLcLKalmanFitterRefTrack);
      instance.SetDestructor(&destruct_genfitcLcLKalmanFitterRefTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::KalmanFitterRefTrack*)
   {
      return GenerateInitInstanceLocal((::genfit::KalmanFitterRefTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::KalmanFitterRefTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLKalmanFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLKalmanFitter(void *p = 0);
   static void *newArray_genfitcLcLKalmanFitter(Long_t size, void *p);
   static void delete_genfitcLcLKalmanFitter(void *p);
   static void deleteArray_genfitcLcLKalmanFitter(void *p);
   static void destruct_genfitcLcLKalmanFitter(void *p);
   static void streamer_genfitcLcLKalmanFitter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::KalmanFitter*)
   {
      ::genfit::KalmanFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::KalmanFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::KalmanFitter", ::genfit::KalmanFitter::Class_Version(), "/input/FairShip/genfit/fitters/include/KalmanFitter.h", 42,
                  typeid(::genfit::KalmanFitter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::KalmanFitter::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::KalmanFitter) );
      instance.SetNew(&new_genfitcLcLKalmanFitter);
      instance.SetNewArray(&newArray_genfitcLcLKalmanFitter);
      instance.SetDelete(&delete_genfitcLcLKalmanFitter);
      instance.SetDeleteArray(&deleteArray_genfitcLcLKalmanFitter);
      instance.SetDestructor(&destruct_genfitcLcLKalmanFitter);
      instance.SetStreamerFunc(&streamer_genfitcLcLKalmanFitter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::KalmanFitter*)
   {
      return GenerateInitInstanceLocal((::genfit::KalmanFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::KalmanFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void genfitcLcLDAF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_genfitcLcLDAF(void *p = 0);
   static void *newArray_genfitcLcLDAF(Long_t size, void *p);
   static void delete_genfitcLcLDAF(void *p);
   static void deleteArray_genfitcLcLDAF(void *p);
   static void destruct_genfitcLcLDAF(void *p);
   static void streamer_genfitcLcLDAF(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genfit::DAF*)
   {
      ::genfit::DAF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genfit::DAF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genfit::DAF", ::genfit::DAF::Class_Version(), "/input/FairShip/genfit/fitters/include/DAF.h", 48,
                  typeid(::genfit::DAF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genfit::DAF::Dictionary, isa_proxy, 1,
                  sizeof(::genfit::DAF) );
      instance.SetNew(&new_genfitcLcLDAF);
      instance.SetNewArray(&newArray_genfitcLcLDAF);
      instance.SetDelete(&delete_genfitcLcLDAF);
      instance.SetDeleteArray(&deleteArray_genfitcLcLDAF);
      instance.SetDestructor(&destruct_genfitcLcLDAF);
      instance.SetStreamerFunc(&streamer_genfitcLcLDAF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genfit::DAF*)
   {
      return GenerateInitInstanceLocal((::genfit::DAF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genfit::DAF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr KalmanFitterInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KalmanFitterInfo::Class_Name()
{
   return "genfit::KalmanFitterInfo";
}

//______________________________________________________________________________
const char *KalmanFitterInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KalmanFitterInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KalmanFitterInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KalmanFitterInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr AbsKalmanFitter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AbsKalmanFitter::Class_Name()
{
   return "genfit::AbsKalmanFitter";
}

//______________________________________________________________________________
const char *AbsKalmanFitter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::AbsKalmanFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AbsKalmanFitter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::AbsKalmanFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AbsKalmanFitter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::AbsKalmanFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AbsKalmanFitter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::AbsKalmanFitter*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr KalmanFittedStateOnPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KalmanFittedStateOnPlane::Class_Name()
{
   return "genfit::KalmanFittedStateOnPlane";
}

//______________________________________________________________________________
const char *KalmanFittedStateOnPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFittedStateOnPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KalmanFittedStateOnPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFittedStateOnPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KalmanFittedStateOnPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFittedStateOnPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KalmanFittedStateOnPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFittedStateOnPlane*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr KalmanFitStatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KalmanFitStatus::Class_Name()
{
   return "genfit::KalmanFitStatus";
}

//______________________________________________________________________________
const char *KalmanFitStatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KalmanFitStatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KalmanFitStatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KalmanFitStatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitStatus*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr ReferenceStateOnPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ReferenceStateOnPlane::Class_Name()
{
   return "genfit::ReferenceStateOnPlane";
}

//______________________________________________________________________________
const char *ReferenceStateOnPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ReferenceStateOnPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ReferenceStateOnPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ReferenceStateOnPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ReferenceStateOnPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ReferenceStateOnPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ReferenceStateOnPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::ReferenceStateOnPlane*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr KalmanFitterRefTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KalmanFitterRefTrack::Class_Name()
{
   return "genfit::KalmanFitterRefTrack";
}

//______________________________________________________________________________
const char *KalmanFitterRefTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterRefTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KalmanFitterRefTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterRefTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KalmanFitterRefTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterRefTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KalmanFitterRefTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitterRefTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr KalmanFitter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KalmanFitter::Class_Name()
{
   return "genfit::KalmanFitter";
}

//______________________________________________________________________________
const char *KalmanFitter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KalmanFitter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KalmanFitter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KalmanFitter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::KalmanFitter*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
atomic_TClass_ptr DAF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DAF::Class_Name()
{
   return "genfit::DAF";
}

//______________________________________________________________________________
const char *DAF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::DAF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DAF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::DAF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DAF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::DAF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DAF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genfit::DAF*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genfit
      namespace genfit {
//______________________________________________________________________________
void AbsKalmanFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::AbsKalmanFitter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::AbsKalmanFitter::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::AbsKalmanFitter::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void AbsKalmanFitter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::AbsKalmanFitter.
      TClass *R__cl = ::genfit::AbsKalmanFitter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minIterations_", &minIterations_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxIterations_", &maxIterations_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPval_", &deltaPval_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "relChi2Change_", &relChi2Change_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "blowUpFactor_", &blowUpFactor_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multipleMeasurementHandling_", &multipleMeasurementHandling_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxFailedHits_", &maxFailedHits_);
      R__insp.GenericShowMembers("genfit::AbsFitter", ( ::genfit::AbsFitter *) (this ), false);
}

} // namespace genfit
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_genfitcLcLAbsKalmanFitter(void *p) {
      delete ((::genfit::AbsKalmanFitter*)p);
   }
   static void deleteArray_genfitcLcLAbsKalmanFitter(void *p) {
      delete [] ((::genfit::AbsKalmanFitter*)p);
   }
   static void destruct_genfitcLcLAbsKalmanFitter(void *p) {
      typedef ::genfit::AbsKalmanFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::AbsKalmanFitter

      namespace genfit {
//______________________________________________________________________________
void KalmanFitStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::KalmanFitStatus.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genfit::KalmanFitStatus thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::FitStatus baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> numIterations_;
      R__b >> fittedWithDaf_;
      R__b >> fittedWithReferenceTrack_;
      R__b >> trackLen_;
      R__b >> fChi2_;
      R__b >> fNdf_;
      R__b >> fPval_;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::FitStatus baseClass0;
      baseClass0::Streamer(R__b);
      R__b << numIterations_;
      R__b << fittedWithDaf_;
      R__b << fittedWithReferenceTrack_;
      R__b << trackLen_;
      R__b << fChi2_;
      R__b << fNdf_;
      R__b << fPval_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void KalmanFitStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::KalmanFitStatus.
      TClass *R__cl = ::genfit::KalmanFitStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numIterations_", &numIterations_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedWithDaf_", &fittedWithDaf_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fittedWithReferenceTrack_", &fittedWithReferenceTrack_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLen_", &trackLen_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2_", &fChi2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdf_", &fNdf_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPval_", &fPval_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::FitStatus baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLKalmanFitStatus(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitStatus : new ::genfit::KalmanFitStatus;
   }
   static void *newArray_genfitcLcLKalmanFitStatus(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitStatus[nElements] : new ::genfit::KalmanFitStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLKalmanFitStatus(void *p) {
      delete ((::genfit::KalmanFitStatus*)p);
   }
   static void deleteArray_genfitcLcLKalmanFitStatus(void *p) {
      delete [] ((::genfit::KalmanFitStatus*)p);
   }
   static void destruct_genfitcLcLKalmanFitStatus(void *p) {
      typedef ::genfit::KalmanFitStatus current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLKalmanFitStatus(TBuffer &buf, void *obj) {
      ((::genfit::KalmanFitStatus*)obj)->::genfit::KalmanFitStatus::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::KalmanFitStatus

      namespace genfit {
//______________________________________________________________________________
void KalmanFitterRefTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::KalmanFitterRefTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::KalmanFitterRefTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::KalmanFitterRefTrack::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void KalmanFitterRefTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::KalmanFitterRefTrack.
      TClass *R__cl = ::genfit::KalmanFitterRefTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refitAll_", &refitAll_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaChi2Ref_", &deltaChi2Ref_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FTransportMatrix_", &FTransportMatrix_);
      R__insp.InspectMember(FTransportMatrix_, "FTransportMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BTransportMatrix_", &BTransportMatrix_);
      R__insp.InspectMember(BTransportMatrix_, "BTransportMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FNoiseMatrix_", &FNoiseMatrix_);
      R__insp.InspectMember(FNoiseMatrix_, "FNoiseMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BNoiseMatrix_", &BNoiseMatrix_);
      R__insp.InspectMember(BNoiseMatrix_, "BNoiseMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forwardDeltaState_", &forwardDeltaState_);
      R__insp.InspectMember(forwardDeltaState_, "forwardDeltaState_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "backwardDeltaState_", &backwardDeltaState_);
      R__insp.InspectMember(backwardDeltaState_, "backwardDeltaState_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_", &p_);
      R__insp.InspectMember(p_, "p_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C_", &C_);
      R__insp.InspectMember(C_, "C_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "covSumInv_", &covSumInv_);
      R__insp.InspectMember(covSumInv_, "covSumInv_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rinv_", &Rinv_);
      R__insp.InspectMember(Rinv_, "Rinv_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_", &res_);
      R__insp.InspectMember(res_, "res_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resM_", &resM_);
      R__insp.InspectMember(resM_, "resM_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsKalmanFitter baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLKalmanFitterRefTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitterRefTrack : new ::genfit::KalmanFitterRefTrack;
   }
   static void *newArray_genfitcLcLKalmanFitterRefTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitterRefTrack[nElements] : new ::genfit::KalmanFitterRefTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLKalmanFitterRefTrack(void *p) {
      delete ((::genfit::KalmanFitterRefTrack*)p);
   }
   static void deleteArray_genfitcLcLKalmanFitterRefTrack(void *p) {
      delete [] ((::genfit::KalmanFitterRefTrack*)p);
   }
   static void destruct_genfitcLcLKalmanFitterRefTrack(void *p) {
      typedef ::genfit::KalmanFitterRefTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::KalmanFitterRefTrack

      namespace genfit {
//______________________________________________________________________________
void KalmanFittedStateOnPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::KalmanFittedStateOnPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::KalmanFittedStateOnPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::KalmanFittedStateOnPlane::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void KalmanFittedStateOnPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::KalmanFittedStateOnPlane.
      TClass *R__cl = ::genfit::KalmanFittedStateOnPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiSquareIncrement_", &chiSquareIncrement_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndf_", &ndf_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::MeasuredStateOnPlane baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLKalmanFittedStateOnPlane(void *p) {
      return  p ? new(p) ::genfit::KalmanFittedStateOnPlane : new ::genfit::KalmanFittedStateOnPlane;
   }
   static void *newArray_genfitcLcLKalmanFittedStateOnPlane(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::KalmanFittedStateOnPlane[nElements] : new ::genfit::KalmanFittedStateOnPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLKalmanFittedStateOnPlane(void *p) {
      delete ((::genfit::KalmanFittedStateOnPlane*)p);
   }
   static void deleteArray_genfitcLcLKalmanFittedStateOnPlane(void *p) {
      delete [] ((::genfit::KalmanFittedStateOnPlane*)p);
   }
   static void destruct_genfitcLcLKalmanFittedStateOnPlane(void *p) {
      typedef ::genfit::KalmanFittedStateOnPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::KalmanFittedStateOnPlane

      namespace genfit {
//______________________________________________________________________________
void ReferenceStateOnPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class genfit::ReferenceStateOnPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(genfit::ReferenceStateOnPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(genfit::ReferenceStateOnPlane::Class(),this);
   }
}

} // namespace genfit
//______________________________________________________________________________
      namespace genfit {
void ReferenceStateOnPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::ReferenceStateOnPlane.
      TClass *R__cl = ::genfit::ReferenceStateOnPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forwardSegmentLength_", &forwardSegmentLength_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "backwardSegmentLength_", &backwardSegmentLength_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forwardTransportMatrix_", &forwardTransportMatrix_);
      R__insp.InspectMember(forwardTransportMatrix_, "forwardTransportMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "backwardTransportMatrix_", &backwardTransportMatrix_);
      R__insp.InspectMember(backwardTransportMatrix_, "backwardTransportMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forwardNoiseMatrix_", &forwardNoiseMatrix_);
      R__insp.InspectMember(forwardNoiseMatrix_, "forwardNoiseMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "backwardNoiseMatrix_", &backwardNoiseMatrix_);
      R__insp.InspectMember(backwardNoiseMatrix_, "backwardNoiseMatrix_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "forwardDeltaState_", &forwardDeltaState_);
      R__insp.InspectMember(forwardDeltaState_, "forwardDeltaState_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "backwardDeltaState_", &backwardDeltaState_);
      R__insp.InspectMember(backwardDeltaState_, "backwardDeltaState_.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::StateOnPlane baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLReferenceStateOnPlane(void *p) {
      return  p ? new(p) ::genfit::ReferenceStateOnPlane : new ::genfit::ReferenceStateOnPlane;
   }
   static void *newArray_genfitcLcLReferenceStateOnPlane(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::ReferenceStateOnPlane[nElements] : new ::genfit::ReferenceStateOnPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLReferenceStateOnPlane(void *p) {
      delete ((::genfit::ReferenceStateOnPlane*)p);
   }
   static void deleteArray_genfitcLcLReferenceStateOnPlane(void *p) {
      delete [] ((::genfit::ReferenceStateOnPlane*)p);
   }
   static void destruct_genfitcLcLReferenceStateOnPlane(void *p) {
      typedef ::genfit::ReferenceStateOnPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genfit::ReferenceStateOnPlane

//______________________________________________________________________________
      namespace genfit {
void KalmanFitter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::KalmanFitter.
      TClass *R__cl = ::genfit::KalmanFitter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*currentState_", &currentState_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "squareRootFormalism_", &squareRootFormalism_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsKalmanFitter baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLKalmanFitter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitter : new ::genfit::KalmanFitter;
   }
   static void *newArray_genfitcLcLKalmanFitter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::KalmanFitter[nElements] : new ::genfit::KalmanFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLKalmanFitter(void *p) {
      delete ((::genfit::KalmanFitter*)p);
   }
   static void deleteArray_genfitcLcLKalmanFitter(void *p) {
      delete [] ((::genfit::KalmanFitter*)p);
   }
   static void destruct_genfitcLcLKalmanFitter(void *p) {
      typedef ::genfit::KalmanFitter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLKalmanFitter(TBuffer &buf, void *obj) {
      ((::genfit::KalmanFitter*)obj)->::genfit::KalmanFitter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::KalmanFitter

//______________________________________________________________________________
      namespace genfit {
void KalmanFitterInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::KalmanFitterInfo.
      TClass *R__cl = ::genfit::KalmanFitterInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*referenceState_", &referenceState_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*forwardPrediction_", &forwardPrediction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*forwardUpdate_", &forwardUpdate_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*backwardPrediction_", &backwardPrediction_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*backwardUpdate_", &backwardUpdate_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fittedStateUnbiased_", &fittedStateUnbiased_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fittedStateBiased_", &fittedStateBiased_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "measurementsOnPlane_", (void*)&measurementsOnPlane_);
      R__insp.InspectMember("vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >", (void*)&measurementsOnPlane_, "measurementsOnPlane_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixWeights_", &fixWeights_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsFitterInfo baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLKalmanFitterInfo(void *p) {
      return  p ? new(p) ::genfit::KalmanFitterInfo : new ::genfit::KalmanFitterInfo;
   }
   static void *newArray_genfitcLcLKalmanFitterInfo(Long_t nElements, void *p) {
      return p ? new(p) ::genfit::KalmanFitterInfo[nElements] : new ::genfit::KalmanFitterInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLKalmanFitterInfo(void *p) {
      delete ((::genfit::KalmanFitterInfo*)p);
   }
   static void deleteArray_genfitcLcLKalmanFitterInfo(void *p) {
      delete [] ((::genfit::KalmanFitterInfo*)p);
   }
   static void destruct_genfitcLcLKalmanFitterInfo(void *p) {
      typedef ::genfit::KalmanFitterInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLKalmanFitterInfo(TBuffer &buf, void *obj) {
      ((::genfit::KalmanFitterInfo*)obj)->::genfit::KalmanFitterInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::KalmanFitterInfo

//______________________________________________________________________________
      namespace genfit {
void DAF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genfit::DAF.
      TClass *R__cl = ::genfit::DAF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaWeight_", &deltaWeight_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betas_", (void*)&betas_);
      R__insp.InspectMember("vector<double>", (void*)&betas_, "betas_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2Cuts_", (void*)&chi2Cuts_);
      R__insp.InspectMember("map<int,double>", (void*)&chi2Cuts_, "chi2Cuts_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kalman_", &kalman_);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genfit::AbsKalmanFitter baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genfit
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_genfitcLcLDAF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::DAF : new ::genfit::DAF;
   }
   static void *newArray_genfitcLcLDAF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genfit::DAF[nElements] : new ::genfit::DAF[nElements];
   }
   // Wrapper around operator delete
   static void delete_genfitcLcLDAF(void *p) {
      delete ((::genfit::DAF*)p);
   }
   static void deleteArray_genfitcLcLDAF(void *p) {
      delete [] ((::genfit::DAF*)p);
   }
   static void destruct_genfitcLcLDAF(void *p) {
      typedef ::genfit::DAF current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_genfitcLcLDAF(TBuffer &buf, void *obj) {
      ((::genfit::DAF*)obj)->::genfit::DAF::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genfit::DAF

namespace ROOTDict {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,double>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEgenfitcLcLMeasurementOnPlanemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEgenfitcLcLMeasurementOnPlanemUgR_Dictionary();
   static void *new_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p = 0);
   static void *newArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR(Long_t size, void *p);
   static void delete_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p);
   static void deleteArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p);
   static void destruct_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<genfit::MeasurementOnPlane*>*)
   {
      vector<genfit::MeasurementOnPlane*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<genfit::MeasurementOnPlane*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<genfit::MeasurementOnPlane*>", -2, "prec_stl/vector", 49,
                  typeid(vector<genfit::MeasurementOnPlane*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEgenfitcLcLMeasurementOnPlanemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<genfit::MeasurementOnPlane*>) );
      instance.SetNew(&new_vectorlEgenfitcLcLMeasurementOnPlanemUgR);
      instance.SetNewArray(&newArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR);
      instance.SetDelete(&delete_vectorlEgenfitcLcLMeasurementOnPlanemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR);
      instance.SetDestructor(&destruct_vectorlEgenfitcLcLMeasurementOnPlanemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<genfit::MeasurementOnPlane*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<genfit::MeasurementOnPlane*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEgenfitcLcLMeasurementOnPlanemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<genfit::MeasurementOnPlane*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<genfit::MeasurementOnPlane*> : new vector<genfit::MeasurementOnPlane*>;
   }
   static void *newArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<genfit::MeasurementOnPlane*>[nElements] : new vector<genfit::MeasurementOnPlane*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p) {
      delete ((vector<genfit::MeasurementOnPlane*>*)p);
   }
   static void deleteArray_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p) {
      delete [] ((vector<genfit::MeasurementOnPlane*>*)p);
   }
   static void destruct_vectorlEgenfitcLcLMeasurementOnPlanemUgR(void *p) {
      typedef vector<genfit::MeasurementOnPlane*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<genfit::MeasurementOnPlane*>

/********************************************************
* /input/FairShipRun/genfit/fittersRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablefittersRootDict();

extern "C" void G__set_cpp_environmentfittersRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/AbsKalmanFitter.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/KalmanFittedStateOnPlane.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/KalmanFitStatus.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/ReferenceStateOnPlane.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/KalmanFitterRefTrack.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/KalmanFitter.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/KalmanFitterInfo.h");
  G__add_compiledheader("/input/FairShip/genfit/fitters/include/DAF.h");
  G__cpp_reset_tagtablefittersRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevfittersRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genfit::KalmanFitterInfo */
static int G__fittersRootDict_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitterInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitterInfo[n];
     } else {
       p = new((void*) gvp) genfit::KalmanFitterInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitterInfo;
     } else {
       p = new((void*) gvp) genfit::KalmanFitterInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitterInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::KalmanFitterInfo((genfit::TrackPoint*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) genfit::KalmanFitterInfo((genfit::TrackPoint*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getReferenceState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getForwardPrediction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getBackwardPrediction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getPrediction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getForwardUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getBackwardUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getUpdate((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<genfit::MeasurementOnPlane*>& obj = ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getMeasurementsOnPlane();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getMeasurementOnPlane((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getMeasurementOnPlane());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const genfit::MeasurementOnPlane* pobj;
         const genfit::MeasurementOnPlane xobj = ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getAvgWeightedMeasurementOnPlane((bool) G__int(libp->para[0]));
         pobj = new genfit::MeasurementOnPlane(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const genfit::MeasurementOnPlane* pobj;
         const genfit::MeasurementOnPlane xobj = ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getAvgWeightedMeasurementOnPlane();
         pobj = new genfit::MeasurementOnPlane(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getClosestMeasurementOnPlane((genfit::StateOnPlane*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getNumMeasurements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const genfit::KalmanFitterInfo*) G__getstructoffset())->getWeights();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->areWeightsFixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::KalmanFitterInfo*) G__getstructoffset())->hasPredictionsAndUpdates());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setReferenceState((genfit::ReferenceStateOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setForwardPrediction((genfit::MeasuredStateOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setBackwardPrediction((genfit::MeasuredStateOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setPrediction((genfit::MeasuredStateOnPlane*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setForwardUpdate((genfit::KalmanFittedStateOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setBackwardUpdate((genfit::KalmanFittedStateOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setUpdate((genfit::KalmanFittedStateOnPlane*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setMeasurementsOnPlane(*(vector<genfit::MeasurementOnPlane*>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->addMeasurementOnPlane((genfit::MeasurementOnPlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->addMeasurementsOnPlane(*(vector<genfit::MeasurementOnPlane*>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->setWeights(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->fixWeights((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->fixWeights();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->deletePredictions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::KalmanFitterInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::KalmanFitterInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::KalmanFitterInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitterInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_518_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitterInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::KalmanFitterInfo G__TgenfitcLcLKalmanFitterInfo;
static int G__fittersRootDict_518_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::KalmanFitterInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::KalmanFitterInfo*) (soff+(sizeof(genfit::KalmanFitterInfo)*i)))->~G__TgenfitcLcLKalmanFitterInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::KalmanFitterInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::KalmanFitterInfo*) (soff))->~G__TgenfitcLcLKalmanFitterInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::AbsKalmanFitter */
static int G__fittersRootDict_548_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getChiSquNdf((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getChiSqu((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getChiSqu((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getNdf((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getNdf((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getRedChiSqu((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getRedChiSqu((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getPVal((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getPVal((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->getMultipleMeasurementHandling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setMinIterations((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setMaxIterations((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setDeltaPval((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setRelChi2Change((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setMultipleMeasurementHandling((genfit::eMultipleMeasurementHandling) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->setMaxFailedHits((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->isTrackPrepared((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->isTrackFitted((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->canIgnoreWeights());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::AbsKalmanFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::AbsKalmanFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::AbsKalmanFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::AbsKalmanFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::AbsKalmanFitter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::AbsKalmanFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::AbsKalmanFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::AbsKalmanFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::AbsKalmanFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_548_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::AbsKalmanFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::AbsKalmanFitter G__TgenfitcLcLAbsKalmanFitter;
static int G__fittersRootDict_548_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::AbsKalmanFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::AbsKalmanFitter*) (soff+(sizeof(genfit::AbsKalmanFitter)*i)))->~G__TgenfitcLcLAbsKalmanFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::AbsKalmanFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::AbsKalmanFitter*) (soff))->~G__TgenfitcLcLAbsKalmanFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__fittersRootDict_548_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::AbsKalmanFitter* dest = (genfit::AbsKalmanFitter*) G__getstructoffset();
   *dest = *(genfit::AbsKalmanFitter*) libp->para[0].ref;
   const genfit::AbsKalmanFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::KalmanFittedStateOnPlane */
static int G__fittersRootDict_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFittedStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFittedStateOnPlane[n];
     } else {
       p = new((void*) gvp) genfit::KalmanFittedStateOnPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFittedStateOnPlane;
     } else {
       p = new((void*) gvp) genfit::KalmanFittedStateOnPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFittedStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::KalmanFittedStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(genfit::SharedPlanePtr*) libp->para[2].ref, (genfit::AbsTrackRep*) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) genfit::KalmanFittedStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(genfit::SharedPlanePtr*) libp->para[2].ref, (genfit::AbsTrackRep*) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFittedStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::KalmanFittedStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(genfit::SharedPlanePtr*) libp->para[2].ref, (genfit::AbsTrackRep*) G__int(libp->para[3])
, *(TVectorD*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) genfit::KalmanFittedStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(genfit::SharedPlanePtr*) libp->para[2].ref, (genfit::AbsTrackRep*) G__int(libp->para[3])
, *(TVectorD*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFittedStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::KalmanFittedStateOnPlane(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) genfit::KalmanFittedStateOnPlane(
*(genfit::MeasuredStateOnPlane*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genfit::KalmanFittedStateOnPlane& obj = ((genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->operator=(*((genfit::KalmanFittedStateOnPlane*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->swap(*(genfit::KalmanFittedStateOnPlane*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->getChiSquareIncrement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->getNdf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->setChiSquareIncrement((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->setNdf((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::KalmanFittedStateOnPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFittedStateOnPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::KalmanFittedStateOnPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::KalmanFittedStateOnPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFittedStateOnPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFittedStateOnPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFittedStateOnPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFittedStateOnPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFittedStateOnPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fittersRootDict_549_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::KalmanFittedStateOnPlane* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::KalmanFittedStateOnPlane(*(genfit::KalmanFittedStateOnPlane*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::KalmanFittedStateOnPlane G__TgenfitcLcLKalmanFittedStateOnPlane;
static int G__fittersRootDict_549_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::KalmanFittedStateOnPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::KalmanFittedStateOnPlane*) (soff+(sizeof(genfit::KalmanFittedStateOnPlane)*i)))->~G__TgenfitcLcLKalmanFittedStateOnPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::KalmanFittedStateOnPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::KalmanFittedStateOnPlane*) (soff))->~G__TgenfitcLcLKalmanFittedStateOnPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::KalmanFitStatus */
static int G__fittersRootDict_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitStatus[n];
     } else {
       p = new((void*) gvp) genfit::KalmanFitStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitStatus;
     } else {
       p = new((void*) gvp) genfit::KalmanFitStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getNumIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::KalmanFitStatus*) G__getstructoffset())->isFittedWithDaf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genfit::KalmanFitStatus*) G__getstructoffset())->isFittedWithReferenceTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getTrackLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getForwardChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getBackwardChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getForwardNdf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getBackwardNdf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getForwardPVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::KalmanFitStatus*) G__getstructoffset())->getBackwardPVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setNumIterations((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setIsFittedWithDaf((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setIsFittedWithDaf();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setIsFittedWithReferenceTrack((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setIsFittedWithReferenceTrack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setTrackLen((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setForwardChi2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setBackwardChi2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setForwardNdf((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->setBackwardNdf((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::KalmanFitStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::KalmanFitStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::KalmanFitStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_552_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fittersRootDict_552_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::KalmanFitStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::KalmanFitStatus(*(genfit::KalmanFitStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::KalmanFitStatus G__TgenfitcLcLKalmanFitStatus;
static int G__fittersRootDict_552_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::KalmanFitStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::KalmanFitStatus*) (soff+(sizeof(genfit::KalmanFitStatus)*i)))->~G__TgenfitcLcLKalmanFitStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::KalmanFitStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::KalmanFitStatus*) (soff))->~G__TgenfitcLcLKalmanFitStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__fittersRootDict_552_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitStatus* dest = (genfit::KalmanFitStatus*) G__getstructoffset();
   *dest = *(genfit::KalmanFitStatus*) libp->para[0].ref;
   const genfit::KalmanFitStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::ReferenceStateOnPlane */
static int G__fittersRootDict_553_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ReferenceStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::ReferenceStateOnPlane[n];
     } else {
       p = new((void*) gvp) genfit::ReferenceStateOnPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::ReferenceStateOnPlane;
     } else {
       p = new((void*) gvp) genfit::ReferenceStateOnPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ReferenceStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ReferenceStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(genfit::SharedPlanePtr*) libp->para[1].ref
, (genfit::AbsTrackRep*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) genfit::ReferenceStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(genfit::SharedPlanePtr*) libp->para[1].ref
, (genfit::AbsTrackRep*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ReferenceStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ReferenceStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(genfit::SharedPlanePtr*) libp->para[1].ref
, (genfit::AbsTrackRep*) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) genfit::ReferenceStateOnPlane(
*(TVectorD*) libp->para[0].ref, *(genfit::SharedPlanePtr*) libp->para[1].ref
, (genfit::AbsTrackRep*) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::ReferenceStateOnPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genfit::ReferenceStateOnPlane(*(genfit::StateOnPlane*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genfit::ReferenceStateOnPlane(*(genfit::StateOnPlane*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genfit::StateOnPlane& obj = ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->operator=(*((genfit::ReferenceStateOnPlane*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->swap(*(genfit::ReferenceStateOnPlane*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setForwardSegmentLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setBackwardSegmentLength((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setForwardTransportMatrix(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setBackwardTransportMatrix(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setTransportMatrix(*(TMatrixD*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setForwardNoiseMatrix(*(TMatrixDSym*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setBackwardNoiseMatrix(*(TMatrixDSym*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setNoiseMatrix(*(TMatrixDSym*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setForwardDeltaState(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setBackwardDeltaState(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->setDeltaState(*(TVectorD*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getForwardSegmentLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getBackwardSegmentLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getForwardTransportMatrix();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getBackwardTransportMatrix();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getTransportMatrix((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getForwardNoiseMatrix();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getBackwardNoiseMatrix();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getNoiseMatrix((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getForwardDeltaState();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getBackwardDeltaState();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((const genfit::ReferenceStateOnPlane*) G__getstructoffset())->getDeltaState((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->resetForward();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->resetBackward();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::ReferenceStateOnPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ReferenceStateOnPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::ReferenceStateOnPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::ReferenceStateOnPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::ReferenceStateOnPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ReferenceStateOnPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::ReferenceStateOnPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::ReferenceStateOnPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_553_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::ReferenceStateOnPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fittersRootDict_553_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::ReferenceStateOnPlane* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::ReferenceStateOnPlane(*(genfit::ReferenceStateOnPlane*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::ReferenceStateOnPlane G__TgenfitcLcLReferenceStateOnPlane;
static int G__fittersRootDict_553_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::ReferenceStateOnPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::ReferenceStateOnPlane*) (soff+(sizeof(genfit::ReferenceStateOnPlane)*i)))->~G__TgenfitcLcLReferenceStateOnPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::ReferenceStateOnPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::ReferenceStateOnPlane*) (soff))->~G__TgenfitcLcLReferenceStateOnPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::KalmanFitterRefTrack */
static int G__fittersRootDict_554_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitterRefTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitterRefTrack(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitterRefTrack(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitterRefTrack((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitterRefTrack((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitterRefTrack((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitterRefTrack((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::KalmanFitterRefTrack[n];
       } else {
         p = new((void*) gvp) genfit::KalmanFitterRefTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::KalmanFitterRefTrack;
       } else {
         p = new((void*) gvp) genfit::KalmanFitterRefTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->fitTrack((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->prepareTrack((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->setRefitAll((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->setRefitAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->setDeltaChi2Ref((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::KalmanFitterRefTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterRefTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::KalmanFitterRefTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::KalmanFitterRefTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitterRefTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterRefTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitterRefTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitterRefTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_554_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitterRefTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__fittersRootDict_554_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genfit::KalmanFitterRefTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genfit::KalmanFitterRefTrack(*(genfit::KalmanFitterRefTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::KalmanFitterRefTrack G__TgenfitcLcLKalmanFitterRefTrack;
static int G__fittersRootDict_554_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::KalmanFitterRefTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::KalmanFitterRefTrack*) (soff+(sizeof(genfit::KalmanFitterRefTrack)*i)))->~G__TgenfitcLcLKalmanFitterRefTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::KalmanFitterRefTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::KalmanFitterRefTrack*) (soff))->~G__TgenfitcLcLKalmanFitterRefTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__fittersRootDict_554_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitterRefTrack* dest = (genfit::KalmanFitterRefTrack*) G__getstructoffset();
   *dest = *(genfit::KalmanFitterRefTrack*) libp->para[0].ref;
   const genfit::KalmanFitterRefTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::KalmanFitter */
static int G__fittersRootDict_555_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::KalmanFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitter(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitter(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitter(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitter(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitter((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitter((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::KalmanFitter((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::KalmanFitter((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::KalmanFitter[n];
       } else {
         p = new((void*) gvp) genfit::KalmanFitter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::KalmanFitter;
       } else {
         p = new((void*) gvp) genfit::KalmanFitter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((genfit::KalmanFitter*) G__getstructoffset())->processTrackPartially((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((genfit::KalmanFitter*) G__getstructoffset())->processTrackPartially((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((genfit::KalmanFitter*) G__getstructoffset())->processTrackPartially((genfit::Track*) G__int(libp->para[0]), (genfit::AbsTrackRep*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genfit::KalmanFitter*) G__getstructoffset())->useSquareRootFormalism((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genfit::KalmanFitter*) G__getstructoffset())->useSquareRootFormalism();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::KalmanFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::KalmanFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::KalmanFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::KalmanFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::KalmanFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_555_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::KalmanFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::KalmanFitter G__TgenfitcLcLKalmanFitter;
static int G__fittersRootDict_555_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::KalmanFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::KalmanFitter*) (soff+(sizeof(genfit::KalmanFitter)*i)))->~G__TgenfitcLcLKalmanFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::KalmanFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::KalmanFitter*) (soff))->~G__TgenfitcLcLKalmanFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genfit::DAF */
static int G__fittersRootDict_556_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::DAF* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF(
(bool) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::DAF(
(bool) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF((bool) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::DAF((bool) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::DAF((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::DAF[n];
       } else {
         p = new((void*) gvp) genfit::DAF[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genfit::DAF;
       } else {
         p = new((void*) gvp) genfit::DAF;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genfit::DAF* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF(
(genfit::AbsKalmanFitter*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) genfit::DAF(
(genfit::AbsKalmanFitter*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF((genfit::AbsKalmanFitter*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) genfit::DAF((genfit::AbsKalmanFitter*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genfit::DAF((genfit::AbsKalmanFitter*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genfit::DAF((genfit::AbsKalmanFitter*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::DAF*) G__getstructoffset())->setProbCut((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::DAF*) G__getstructoffset())->addProbCut((const double) G__double(libp->para[0]), (const int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((genfit::DAF*) G__getstructoffset())->setBetas(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((genfit::DAF*) G__getstructoffset())->setBetas(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((genfit::DAF*) G__getstructoffset())->setBetas(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((genfit::DAF*) G__getstructoffset())->setBetas(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genfit::DAF*) G__getstructoffset())->setBetas((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::DAF*) G__getstructoffset())->setAnnealingScheme((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::DAF*) G__getstructoffset())->setConvergenceDeltaWeight((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genfit::DAF*) G__getstructoffset())->getKalman());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genfit::DAF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::DAF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genfit::DAF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genfit::DAF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genfit::DAF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::DAF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::DAF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genfit::DAF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__fittersRootDict_556_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genfit::DAF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genfit::DAF G__TgenfitcLcLDAF;
static int G__fittersRootDict_556_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genfit::DAF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genfit::DAF*) (soff+(sizeof(genfit::DAF)*i)))->~G__TgenfitcLcLDAF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genfit::DAF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genfit::DAF*) (soff))->~G__TgenfitcLcLDAF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genfit::KalmanFitterInfo */

/* genfit::AbsKalmanFitter */

/* genfit::KalmanFittedStateOnPlane */

/* genfit::KalmanFitStatus */

/* genfit::ReferenceStateOnPlane */

/* genfit::KalmanFitterRefTrack */

/* genfit::KalmanFitter */

/* genfit::DAF */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncfittersRootDict {
 public:
  G__Sizep2memfuncfittersRootDict(): p(&G__Sizep2memfuncfittersRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncfittersRootDict::*p)();
};

size_t G__get_sizep2memfuncfittersRootDict()
{
  G__Sizep2memfuncfittersRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancefittersRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo))) {
     genfit::KalmanFitterInfo *G__Lderived;
     G__Lderived=(genfit::KalmanFitterInfo*)0x1000;
     {
       genfit::AbsFitterInfo *G__Lpbase=(genfit::AbsFitterInfo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsFitterInfo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo),G__get_linked_tagnum(&G__fittersRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter))) {
     genfit::AbsKalmanFitter *G__Lderived;
     G__Lderived=(genfit::AbsKalmanFitter*)0x1000;
     {
       genfit::AbsFitter *G__Lpbase=(genfit::AbsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane))) {
     genfit::KalmanFittedStateOnPlane *G__Lderived;
     G__Lderived=(genfit::KalmanFittedStateOnPlane*)0x1000;
     {
       genfit::MeasuredStateOnPlane *G__Lpbase=(genfit::MeasuredStateOnPlane*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::StateOnPlane *G__Lpbase=(genfit::StateOnPlane*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLStateOnPlane),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),G__get_linked_tagnum(&G__fittersRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus))) {
     genfit::KalmanFitStatus *G__Lderived;
     G__Lderived=(genfit::KalmanFitStatus*)0x1000;
     {
       genfit::FitStatus *G__Lpbase=(genfit::FitStatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLFitStatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane))) {
     genfit::ReferenceStateOnPlane *G__Lderived;
     G__Lderived=(genfit::ReferenceStateOnPlane*)0x1000;
     {
       genfit::StateOnPlane *G__Lpbase=(genfit::StateOnPlane*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLStateOnPlane),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane),G__get_linked_tagnum(&G__fittersRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack))) {
     genfit::KalmanFitterRefTrack *G__Lderived;
     G__Lderived=(genfit::KalmanFitterRefTrack*)0x1000;
     {
       genfit::AbsKalmanFitter *G__Lpbase=(genfit::AbsKalmanFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsFitter *G__Lpbase=(genfit::AbsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsFitter),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter))) {
     genfit::KalmanFitter *G__Lderived;
     G__Lderived=(genfit::KalmanFitter*)0x1000;
     {
       genfit::AbsKalmanFitter *G__Lpbase=(genfit::AbsKalmanFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsFitter *G__Lpbase=(genfit::AbsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsFitter),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF))) {
     genfit::DAF *G__Lderived;
     G__Lderived=(genfit::DAF*)0x1000;
     {
       genfit::AbsKalmanFitter *G__Lpbase=(genfit::AbsKalmanFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genfit::AbsFitter *G__Lpbase=(genfit::AbsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF),G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsFitter),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablefittersRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MatStep>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::AbsMeasurement*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const genfit::AbsTrackRep*,genfit::AbsTrackRep*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsTrackRepmUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsTrackRepmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const genfit::AbsTrackRep*,genfit::AbsTrackRep*,less<const genfit::AbsTrackRep*> >",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsTrackRepmUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsTrackRepmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const genfit::AbsTrackRep*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<genfit::AbsFitterInfo*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const AbsTrackRep*,AbsFitterInfo*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const genfit::AbsTrackRep*,genfit::AbsFitterInfo*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const genfit::AbsTrackRep*,genfit::AbsFitterInfo*,less<const genfit::AbsTrackRep*> >",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementOnPlane*>",117,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genfit::KalmanFitterInfo */
static void G__setup_memvargenfitcLcLKalmanFitterInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo));
   { genfit::KalmanFitterInfo *p; p=(genfit::KalmanFitterInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane),-1,-1,4,"referenceState_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),-1,-1,4,"forwardPrediction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),-1,-1,4,"forwardUpdate_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),-1,-1,4,"backwardPrediction_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),-1,-1,4,"backwardUpdate_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),-1,-1,4,"fittedStateUnbiased_=",0,"!  cache");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),-1,-1,4,"fittedStateBiased_=",0,"!  cache");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR),-1,-1,4,"measurementsOnPlane_=",0,"Ownership");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fixWeights_=",0,"weights should not be altered by fitters anymore");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::AbsKalmanFitter */
static void G__setup_memvargenfitcLcLAbsKalmanFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter));
   { genfit::AbsKalmanFitter *p; p=(genfit::AbsKalmanFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"minIterations_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"maxIterations_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"deltaPval_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"relChi2Change_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"blowUpFactor_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLeMultipleMeasurementHandling),-1,-1,2,"multipleMeasurementHandling_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"maxFailedHits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::KalmanFittedStateOnPlane */
static void G__setup_memvargenfitcLcLKalmanFittedStateOnPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   { genfit::KalmanFittedStateOnPlane *p; p=(genfit::KalmanFittedStateOnPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"chiSquareIncrement_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"ndf_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::KalmanFitStatus */
static void G__setup_memvargenfitcLcLKalmanFitStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus));
   { genfit::KalmanFitStatus *p; p=(genfit::KalmanFitStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"numIterations_=",0,"number of iterations that have been performed");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fittedWithDaf_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fittedWithReferenceTrack_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"trackLen_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fChi2_=",0,"chi^2 of the forward fit");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fNdf_=",0,"degrees of freedom of the forward fit");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fPval_=",0,"p-value of the forward fit, set whenever either of chi2 or ndf changes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::ReferenceStateOnPlane */
static void G__setup_memvargenfitcLcLReferenceStateOnPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   { genfit::ReferenceStateOnPlane *p; p=(genfit::ReferenceStateOnPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"forwardSegmentLength_=",0,"*< Segment length from previous referenceState */");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"backwardSegmentLength_=",0,"*< Segment length from next referenceState */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"forwardTransportMatrix_=",0,"*< transport matrix F from previous referenceState */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"backwardTransportMatrix_=",0,"*< transport matrix F from next referenceState */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"forwardNoiseMatrix_=",0,"*< noise matrix N for transport from previous referenceState */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"backwardNoiseMatrix_=",0,"*< noise matrix N for transport from next referenceState */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"forwardDeltaState_=",0,"*< c */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"backwardDeltaState_=",0,"*< c */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::KalmanFitterRefTrack */
static void G__setup_memvargenfitcLcLKalmanFitterRefTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack));
   { genfit::KalmanFitterRefTrack *p; p=(genfit::KalmanFitterRefTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"refitAll_=",0,"always refit all points or only if reference states have changed");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"deltaChi2Ref_=",0,"reference track update cut");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"FTransportMatrix_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"BTransportMatrix_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"FNoiseMatrix_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"BNoiseMatrix_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"forwardDeltaState_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"backwardDeltaState_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"p_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"C_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"covSumInv_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,4,"Rinv_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"res_=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"resM_=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::KalmanFitter */
static void G__setup_memvargenfitcLcLKalmanFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter));
   { genfit::KalmanFitter *p; p=(genfit::KalmanFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane),-1,-1,4,"currentState_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"squareRootFormalism_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genfit::DAF */
static void G__setup_memvargenfitcLcLDAF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF));
   { genfit::DAF *p; p=(genfit::DAF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"deltaWeight_=",0,"convergence criterium");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"betas_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"chi2Cuts_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),-1,-1,4,"kalman_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__fittersRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarfittersRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenfitcLcLKalmanFitterInfo(void) {
   /* genfit::KalmanFitterInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo));
   G__memfunc_setup("KalmanFitterInfo",1614,G__fittersRootDict_518_0_1, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KalmanFitterInfo",1614,G__fittersRootDict_518_0_2, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo), -1, 0, 2, 1, 1, 0, 
"U 'genfit::TrackPoint' - 10 - trackPoint U 'genfit::AbsTrackRep' - 10 - rep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getReferenceState",1744,G__fittersRootDict_518_0_4, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardPrediction",2086,G__fittersRootDict_518_0_5, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardPrediction",2160,G__fittersRootDict_518_0_6, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPrediction",1361,G__fittersRootDict_518_0_7, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane), -1, 0, 1, 1, 1, 8, "i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardUpdate",1656,G__fittersRootDict_518_0_8, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardUpdate",1730,G__fittersRootDict_518_0_9, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUpdate",931,G__fittersRootDict_518_0_10, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 1, 1, 1, 8, "i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeasurementsOnPlane",2278,G__fittersRootDict_518_0_11, 117, G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), G__defined_typename("vector<genfit::MeasurementOnPlane*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeasurementOnPlane",2163,G__fittersRootDict_518_0_12, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasurementOnPlane), -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAvgWeightedMeasurementOnPlane",3266,G__fittersRootDict_518_0_13, 117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasurementOnPlane), -1, 0, 1, 1, 1, 8, "g - - 0 'false' ignoreWeights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClosestMeasurementOnPlane",2896,G__fittersRootDict_518_0_14, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasurementOnPlane), -1, 0, 1, 1, 1, 8, "U 'genfit::StateOnPlane' - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumMeasurements",1897,G__fittersRootDict_518_0_15, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeights",1051,G__fittersRootDict_518_0_16, 117, G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("areWeightsFixed",1539,G__fittersRootDict_518_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFittedState",1441,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane), -1, 1, 1, 1, 1, 9, "g - - 0 'true' biased", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getResidual",1145,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLMeasurementOnPlane), -1, 0, 3, 1, 1, 8, 
"h - - 0 '0' iMeasurement g - - 0 'false' biased "
"g - - 0 'true' onlyMeasurementErrors", "calculate residual, track and measurement errors are added if onlyMeasurementErrors is false", (void*) NULL, 1);
   G__memfunc_setup("hasMeasurements",1589,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasReferenceState",1740,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasForwardPrediction",2082,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasBackwardPrediction",2156,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasForwardUpdate",1652,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasBackwardUpdate",1726,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasUpdate",927,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - direction", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("hasPredictionsAndUpdates",2473,G__fittersRootDict_518_0_27, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setReferenceState",1756,G__fittersRootDict_518_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::ReferenceStateOnPlane' - 0 - referenceState", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardPrediction",2098,G__fittersRootDict_518_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::MeasuredStateOnPlane' - 0 - forwardPrediction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardPrediction",2172,G__fittersRootDict_518_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::MeasuredStateOnPlane' - 0 - backwardPrediction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrediction",1373,G__fittersRootDict_518_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'genfit::MeasuredStateOnPlane' - 0 - prediction i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardUpdate",1668,G__fittersRootDict_518_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::KalmanFittedStateOnPlane' - 0 - forwardUpdate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardUpdate",1742,G__fittersRootDict_518_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::KalmanFittedStateOnPlane' - 0 - backwardUpdate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUpdate",943,G__fittersRootDict_518_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'genfit::KalmanFittedStateOnPlane' - 0 - update i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMeasurementsOnPlane",2290,G__fittersRootDict_518_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >' 'vector<genfit::MeasurementOnPlane*>' 11 - measurementsOnPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMeasurementOnPlane",2140,G__fittersRootDict_518_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::MeasurementOnPlane' - 0 - measurementOnPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMeasurementsOnPlane",2255,G__fittersRootDict_518_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >' 'vector<genfit::MeasurementOnPlane*>' 11 - measurementsOnPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeights",1063,G__fittersRootDict_518_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fixWeights",1058,G__fittersRootDict_518_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRep",627,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'genfit::AbsTrackRep' - 10 - rep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("deleteForwardInfo",1748,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("deleteBackwardInfo",1822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("deletePredictions",1783,G__fittersRootDict_518_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteReferenceInfo",1934,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("deleteMeasurementInfo",2181,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("checkConsistency",1680,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__fittersRootDict_518_0_48, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::KalmanFitterInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_518_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_518_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::KalmanFitterInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_518_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::KalmanFitterInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_518_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_518_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_518_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitterInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_518_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_518_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitterInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KalmanFitterInfo", 1740, G__fittersRootDict_518_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLAbsKalmanFitter(void) {
   /* genfit::AbsKalmanFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter));
   G__memfunc_setup("getChiSquNdf",1189,G__fittersRootDict_548_0_2, 121, -1, -1, 0, 6, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 1 - bChi2 d - - 1 - fChi2 "
"d - - 1 - bNdf d - - 1 - fNdf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSqu",909,G__fittersRootDict_548_0_3, 100, -1, -1, 0, 3, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 '-1' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNdf",600,G__fittersRootDict_548_0_4, 100, -1, -1, 0, 3, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 '-1' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRedChiSqu",1192,G__fittersRootDict_548_0_5, 100, -1, -1, 0, 3, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 '-1' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPVal",691,G__fittersRootDict_548_0_6, 100, -1, -1, 0, 3, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 '-1' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMultipleMeasurementHandling",3127,G__fittersRootDict_548_0_7, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLeMultipleMeasurementHandling), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinIterations",1682,G__fittersRootDict_548_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setMaxIterations",1684,G__fittersRootDict_548_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDeltaPval",1225,G__fittersRootDict_548_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - deltaPval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRelChi2Change",1531,G__fittersRootDict_548_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - relChi2Change", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMultipleMeasurementHandling",3139,G__fittersRootDict_548_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i 'genfit::eMultipleMeasurementHandling' - 0 - mmh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxFailedHits",1615,G__fittersRootDict_548_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isTrackPrepared",1540,G__fittersRootDict_548_0_14, 103, -1, -1, 0, 2, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTrackFitted",1329,G__fittersRootDict_548_0_15, 103, -1, -1, 0, 2, 1, 1, 8, 
"U 'genfit::Track' - 10 - tr U 'genfit::AbsTrackRep' - 10 - rep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canIgnoreWeights",1649,G__fittersRootDict_548_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeasurements",1593,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR), -1, 0, 3, 1, 2, 9, 
"U 'genfit::KalmanFitterInfo' - 10 - fi U 'genfit::TrackPoint' - 10 - tp "
"i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__fittersRootDict_548_0_18, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::AbsKalmanFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_548_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::AbsKalmanFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_548_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::AbsKalmanFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_548_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::AbsKalmanFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__fittersRootDict_548_0_22, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__fittersRootDict_548_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__fittersRootDict_548_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_548_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_548_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::AbsKalmanFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_548_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::AbsKalmanFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_548_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::AbsKalmanFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_548_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::AbsKalmanFitter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AbsKalmanFitter", 1622, G__fittersRootDict_548_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__fittersRootDict_548_0_31, (int) ('u'), G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter), -1, 1, 1, 1, 1, 0, "u 'genfit::AbsKalmanFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLKalmanFittedStateOnPlane(void) {
   /* genfit::KalmanFittedStateOnPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane));
   G__memfunc_setup("KalmanFittedStateOnPlane",2402,G__fittersRootDict_549_0_1, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KalmanFittedStateOnPlane",2402,G__fittersRootDict_549_0_2, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 6, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - state u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - cov "
"u 'genfit::SharedPlanePtr' - 11 - plane U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 0 - chiSquareIncrement d - - 0 - ndf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KalmanFittedStateOnPlane",2402,G__fittersRootDict_549_0_3, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 7, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - state u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - cov "
"u 'genfit::SharedPlanePtr' - 11 - plane U 'genfit::AbsTrackRep' - 10 - rep "
"u 'TVectorT<double>' 'TVectorD' 11 - auxInfo d - - 0 - chiSquareIncrement "
"d - - 0 - ndf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KalmanFittedStateOnPlane",2402,G__fittersRootDict_549_0_4, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 3, 1, 1, 0, 
"u 'genfit::MeasuredStateOnPlane' - 11 - state d - - 0 - chiSquareIncrement "
"d - - 0 - ndf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__fittersRootDict_549_0_5, 117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 1, 1, 1, 1, 0, "u 'genfit::KalmanFittedStateOnPlane' - 0 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__fittersRootDict_549_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genfit::KalmanFittedStateOnPlane' - 1 - other", "nothrow", (void*) NULL, 0);
   G__memfunc_setup("getChiSquareIncrement",2154,G__fittersRootDict_549_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNdf",600,G__fittersRootDict_549_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareIncrement",2166,G__fittersRootDict_549_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - chiSquareIncrement", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNdf",612,G__fittersRootDict_549_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - ndf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__fittersRootDict_549_0_11, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::KalmanFittedStateOnPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_549_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFittedStateOnPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_549_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::KalmanFittedStateOnPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_549_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::KalmanFittedStateOnPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_549_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_549_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFittedStateOnPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_549_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFittedStateOnPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_549_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFittedStateOnPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_549_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFittedStateOnPlane::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KalmanFittedStateOnPlane", 2402, G__fittersRootDict_549_0_23, (int) ('i'), 
G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane), -1, 0, 1, 1, 1, 0, "u 'genfit::KalmanFittedStateOnPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KalmanFittedStateOnPlane", 2528, G__fittersRootDict_549_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLKalmanFitStatus(void) {
   /* genfit::KalmanFitStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus));
   G__memfunc_setup("KalmanFitStatus",1531,G__fittersRootDict_552_0_1, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLFitStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getNumIterations",1682,G__fittersRootDict_552_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFittedWithDaf",1507,G__fittersRootDict_552_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFittedWithReferenceTrack",2652,G__fittersRootDict_552_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackLen",1108,G__fittersRootDict_552_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardChi2",1371,G__fittersRootDict_552_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardChi2",1445,G__fittersRootDict_552_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardNdf",1325,G__fittersRootDict_552_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardNdf",1399,G__fittersRootDict_552_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardPVal",1416,G__fittersRootDict_552_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardPVal",1490,G__fittersRootDict_552_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumIterations",1694,G__fittersRootDict_552_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - numIterations", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsFittedWithDaf",1807,G__fittersRootDict_552_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' fittedWithDaf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsFittedWithReferenceTrack",2952,G__fittersRootDict_552_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' fittedWithReferenceTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackLen",1120,G__fittersRootDict_552_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - trackLen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardChi2",1383,G__fittersRootDict_552_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fChi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardChi2",1457,G__fittersRootDict_552_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - bChi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardNdf",1337,G__fittersRootDict_552_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fNdf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardNdf",1411,G__fittersRootDict_552_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - bNdf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__fittersRootDict_552_0_22, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::KalmanFitStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_552_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_552_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::KalmanFitStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_552_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::KalmanFitStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_552_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_552_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_552_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_552_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_552_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KalmanFitStatus", 1531, G__fittersRootDict_552_0_34, (int) ('i'), G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus), -1, 0, 1, 1, 1, 0, "u 'genfit::KalmanFitStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KalmanFitStatus", 1657, G__fittersRootDict_552_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__fittersRootDict_552_0_36, (int) ('u'), G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus), -1, 1, 1, 1, 1, 0, "u 'genfit::KalmanFitStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLReferenceStateOnPlane(void) {
   /* genfit::ReferenceStateOnPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane));
   G__memfunc_setup("ReferenceStateOnPlane",2109,G__fittersRootDict_553_0_1, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReferenceStateOnPlane",2109,G__fittersRootDict_553_0_2, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 3, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - state u 'genfit::SharedPlanePtr' - 11 - plane "
"U 'genfit::AbsTrackRep' - 10 - rep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReferenceStateOnPlane",2109,G__fittersRootDict_553_0_3, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - state u 'genfit::SharedPlanePtr' - 11 - plane "
"U 'genfit::AbsTrackRep' - 10 - rep u 'TVectorT<double>' 'TVectorD' 11 - auxInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReferenceStateOnPlane",2109,G__fittersRootDict_553_0_4, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 1, 1, 1, 0, "u 'genfit::StateOnPlane' - 11 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__fittersRootDict_553_0_5, 117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLStateOnPlane), -1, 1, 1, 1, 1, 0, "u 'genfit::ReferenceStateOnPlane' - 0 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__fittersRootDict_553_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genfit::ReferenceStateOnPlane' - 1 - other", "nothrow", (void*) NULL, 0);
   G__memfunc_setup("setForwardSegmentLength",2390,G__fittersRootDict_553_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardSegmentLength",2464,G__fittersRootDict_553_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardTransportMatrix",2659,G__fittersRootDict_553_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardTransportMatrix",2733,G__fittersRootDict_553_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTransportMatrix",1934,G__fittersRootDict_553_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - mat i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardNoiseMatrix",2196,G__fittersRootDict_553_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardNoiseMatrix",2270,G__fittersRootDict_553_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoiseMatrix",1471,G__fittersRootDict_553_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - mat i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForwardDeltaState",2060,G__fittersRootDict_553_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackwardDeltaState",2134,G__fittersRootDict_553_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 11 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaState",1335,G__fittersRootDict_553_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - mat i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardSegmentLength",2378,G__fittersRootDict_553_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardSegmentLength",2452,G__fittersRootDict_553_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardTransportMatrix",2647,G__fittersRootDict_553_0_20, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardTransportMatrix",2721,G__fittersRootDict_553_0_21, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransportMatrix",1922,G__fittersRootDict_553_0_22, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 1, 1, 1, 9, "i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardNoiseMatrix",2184,G__fittersRootDict_553_0_23, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardNoiseMatrix",2258,G__fittersRootDict_553_0_24, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNoiseMatrix",1459,G__fittersRootDict_553_0_25, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 1, 1, 1, 1, 9, "i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getForwardDeltaState",2048,G__fittersRootDict_553_0_26, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBackwardDeltaState",2122,G__fittersRootDict_553_0_27, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaState",1323,G__fittersRootDict_553_0_28, 117, G__get_linked_tagnum(&G__fittersRootDictLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 1, 1, 1, 9, "i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetForward",1272,G__fittersRootDict_553_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetBackward",1346,G__fittersRootDict_553_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__fittersRootDict_553_0_32, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::ReferenceStateOnPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_553_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ReferenceStateOnPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_553_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::ReferenceStateOnPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_553_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::ReferenceStateOnPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_553_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_553_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ReferenceStateOnPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_553_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::ReferenceStateOnPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_553_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::ReferenceStateOnPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_553_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::ReferenceStateOnPlane::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ReferenceStateOnPlane", 2109, G__fittersRootDict_553_0_44, (int) ('i'), 
G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane), -1, 0, 1, 1, 1, 0, "u 'genfit::ReferenceStateOnPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReferenceStateOnPlane", 2235, G__fittersRootDict_553_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLKalmanFitterRefTrack(void) {
   /* genfit::KalmanFitterRefTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack));
   G__memfunc_setup("KalmanFitterRefTrack",2004,G__fittersRootDict_554_0_1, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack), -1, 0, 3, 1, 1, 0, 
"h - - 0 '4' maxIterations d - - 0 '1e-3' deltaPval "
"d - - 0 '1e3' blowUpFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitTrack",824,G__fittersRootDict_554_0_2, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLTrackPoint), -1, 0, 5, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 1 - chi2 d - - 1 - ndf "
"i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processTrackWithRep",1975,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"g - - 0 'false' resortHits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("prepareTrack",1252,G__fittersRootDict_554_0_4, 103, -1, -1, 0, 4, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"g - - 0 - setSortingParams i - - 1 - nFailedHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefitAll",1119,G__fittersRootDict_554_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' refit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDeltaChi2Ref",1433,G__fittersRootDict_554_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - dChi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processTrackPoint",1790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"U 'genfit::KalmanFitterInfo' - 0 - fi U 'genfit::KalmanFitterInfo' - 10 - prevFi "
"U 'genfit::TrackPoint' - 10 - tp d - - 1 - chi2 "
"d - - 1 - ndf i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeOutdated",1480,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 1 - notChangedUntil i - - 1 - notChangedFrom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeForwardBackwardInfo",2574,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 - notChangedUntil i - - 0 - notChangedFrom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__fittersRootDict_554_0_10, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::KalmanFitterRefTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_554_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterRefTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_554_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::KalmanFitterRefTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_554_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::KalmanFitterRefTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_554_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_554_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterRefTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_554_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitterRefTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_554_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitterRefTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_554_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitterRefTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KalmanFitterRefTrack", 2004, G__fittersRootDict_554_0_22, (int) ('i'), G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack), -1, 0, 1, 1, 1, 0, "u 'genfit::KalmanFitterRefTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KalmanFitterRefTrack", 2130, G__fittersRootDict_554_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__fittersRootDict_554_0_24, (int) ('u'), G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack), -1, 1, 1, 1, 1, 0, "u 'genfit::KalmanFitterRefTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLKalmanFitter(void) {
   /* genfit::KalmanFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter));
   G__memfunc_setup("KalmanFitter",1218,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter), -1, 0, 1, 1, 4, 0, "u 'genfit::KalmanFitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter), -1, 1, 1, 1, 4, 0, "u 'genfit::KalmanFitter' - 41 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KalmanFitter",1218,G__fittersRootDict_555_0_3, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLKalmanFitter), -1, 0, 4, 1, 1, 0, 
"h - - 0 '4' maxIterations d - - 0 '1e-3' deltaPval "
"d - - 0 '1e3' blowUpFactor g - - 0 'false' squareRootFormalism", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processTrackWithRep",1975,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"g - - 0 'false' resortHits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("processTrackPartially",2214,G__fittersRootDict_555_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"i - - 0 '0' startId i - - 0 '-1' endId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useSquareRootFormalism",2316,G__fittersRootDict_555_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' squareRootFormalism", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitTrack",824,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 7, 1, 4, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 1 - chi2 d - - 1 - ndf "
"i - - 0 - startId i - - 0 - endId "
"i - - 1 - nFailedHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processTrackPoint",1790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"U 'genfit::TrackPoint' - 0 - tp U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 1 - chi2 d - - 1 - ndf "
"i - - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__fittersRootDict_555_0_9, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::KalmanFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_555_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_555_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::KalmanFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_555_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::KalmanFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_555_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_555_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_555_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_555_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::KalmanFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_555_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::KalmanFitter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KalmanFitter", 1344, G__fittersRootDict_555_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgenfitcLcLDAF(void) {
   /* genfit::DAF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF));
   G__memfunc_setup("DAF",203,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF), -1, 0, 1, 1, 4, 0, "u 'genfit::DAF' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF), -1, 1, 1, 1, 4, 0, "u 'genfit::DAF' - 41 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DAF",203,G__fittersRootDict_556_0_3, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF), -1, 0, 3, 1, 1, 0, 
"g - - 0 'true' useRefKalman d - - 0 '1e-3' deltaWeight "
"d - - 0 '1e-3' deltaPval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DAF",203,G__fittersRootDict_556_0_4, 105, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLDAF), -1, 0, 3, 1, 1, 0, 
"U 'genfit::AbsKalmanFitter' - 0 - kalman d - - 0 '1e-3' deltaWeight "
"d - - 0 '1e-3' deltaPval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processTrackWithRep",1975,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'genfit::Track' - 0 - tr U 'genfit::AbsTrackRep' - 10 - rep "
"g - - 0 'false' resortHits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setProbCut",1035,G__fittersRootDict_556_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - prob_cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addProbCut",1000,G__fittersRootDict_556_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 10 - prob_cut i - - 10 - measDim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBetas",827,G__fittersRootDict_556_0_8, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - b1 d - - 0 '-1' b2 "
"d - - 0 '-1.' b3 d - - 0 '-1.' b4 "
"d - - 0 '-1.' b5 d - - 0 '-1.' b6 "
"d - - 0 '-1.' b7 d - - 0 '-1.' b8 "
"d - - 0 '-1.' b9 d - - 0 '-1.' b10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAnnealingScheme",1838,G__fittersRootDict_556_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - bStart d - - 0 - bFinal "
"h - - 0 - nSteps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxIterations",1684,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setConvergenceDeltaWeight",2573,G__fittersRootDict_556_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - delta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getKalman",916,G__fittersRootDict_556_0_12, 85, G__get_linked_tagnum(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxFailedHits",1615,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDebugLvl",1121,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '1' lvl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcWeights",1134,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"U 'genfit::Track' - 0 - trk U 'genfit::AbsTrackRep' - 10 - rep "
"d - - 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__fittersRootDict_556_0_16, 85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genfit::DAF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__fittersRootDict_556_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::DAF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__fittersRootDict_556_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genfit::DAF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__fittersRootDict_556_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genfit::DAF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__fittersRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__fittersRootDict_556_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__fittersRootDict_556_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::DAF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__fittersRootDict_556_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::DAF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__fittersRootDict_556_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genfit::DAF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__fittersRootDict_556_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genfit::DAF::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DAF", 329, G__fittersRootDict_556_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncfittersRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalfittersRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcfittersRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__fittersRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfit = { "genfit" , 110 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLTrack = { "genfit::Track" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLAbsTrackRep = { "genfit::AbsTrackRep" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLAbsFitter = { "genfit::AbsFitter" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLSharedPlanePtr = { "genfit::SharedPlanePtr" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLStateOnPlane = { "genfit::StateOnPlane" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane = { "genfit::MeasuredStateOnPlane" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR = { "vector<genfit::MatStep,allocator<genfit::MatStep> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MatStep,allocator<genfit::MatStep> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLMeasurementOnPlane = { "genfit::MeasurementOnPlane" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLTrackPoint = { "genfit::TrackPoint" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR = { "vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::MeasurementOnPlane*,allocator<genfit::MeasurementOnPlane*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLAbsFitterInfo = { "genfit::AbsFitterInfo" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLKalmanFitterInfo = { "genfit::KalmanFitterInfo" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR = { "vector<genfit::AbsMeasurement*,allocator<genfit::AbsMeasurement*> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::AbsMeasurement*,allocator<genfit::AbsMeasurement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsTrackRepmUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsTrackRepmUgRsPgRsPgR = { "map<const genfit::AbsTrackRep*,genfit::AbsTrackRep*,less<const genfit::AbsTrackRep*>,allocator<pair<const genfit::AbsTrackRep* const,genfit::AbsTrackRep*> > >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR = { "vector<const genfit::AbsTrackRep*,allocator<const genfit::AbsTrackRep*> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const genfit::AbsTrackRep*,allocator<const genfit::AbsTrackRep*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR = { "vector<genfit::AbsFitterInfo*,allocator<genfit::AbsFitterInfo*> >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<genfit::AbsFitterInfo*,allocator<genfit::AbsFitterInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR = { "map<const genfit::AbsTrackRep*,genfit::AbsFitterInfo*,less<const genfit::AbsTrackRep*>,allocator<pair<const genfit::AbsTrackRep* const,genfit::AbsFitterInfo*> > >" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLeMultipleMeasurementHandling = { "genfit::eMultipleMeasurementHandling" , 101 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLAbsKalmanFitter = { "genfit::AbsKalmanFitter" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane = { "genfit::KalmanFittedStateOnPlane" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLFitStatus = { "genfit::FitStatus" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLKalmanFitStatus = { "genfit::KalmanFitStatus" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane = { "genfit::ReferenceStateOnPlane" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack = { "genfit::KalmanFitterRefTrack" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLKalmanFitter = { "genfit::KalmanFitter" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_genfitcLcLDAF = { "genfit::DAF" , 99 , -1 };
G__linked_taginfo G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablefittersRootDict() {
  G__fittersRootDictLN_TClass.tagnum = -1 ;
  G__fittersRootDictLN_TBuffer.tagnum = -1 ;
  G__fittersRootDictLN_TMemberInspector.tagnum = -1 ;
  G__fittersRootDictLN_TObject.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_genfit.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLTrack.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLAbsTrackRep.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLAbsFitter.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLSharedPlanePtr.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLStateOnPlane.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLMeasurementOnPlane.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLTrackPoint.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLAbsFitterInfo.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLKalmanFitterInfo.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsTrackRepmUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsTrackRepmUgRsPgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLeMultipleMeasurementHandling.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLAbsKalmanFitter.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLFitStatus.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLKalmanFitStatus.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLKalmanFitter.tagnum = -1 ;
  G__fittersRootDictLN_genfitcLcLDAF.tagnum = -1 ;
  G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablefittersRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfit);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLTrack);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLAbsTrackRep);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLAbsFitter);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLSharedPlanePtr);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLStateOnPlane);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLMeasuredStateOnPlane);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMatStepcOallocatorlEgenfitcLcLMatStepgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLMeasurementOnPlane);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLTrackPoint);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLMeasurementOnPlanemUcOallocatorlEgenfitcLcLMeasurementOnPlanemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLAbsFitterInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLKalmanFitterInfo),sizeof(genfit::KalmanFitterInfo),-1,128256,(char*)NULL,G__setup_memvargenfitcLcLKalmanFitterInfo,G__setup_memfuncgenfitcLcLKalmanFitterInfo);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsMeasurementmUcOallocatorlEgenfitcLcLAbsMeasurementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsTrackRepmUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsTrackRepmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEconstsPgenfitcLcLAbsTrackRepmUcOallocatorlEconstsPgenfitcLcLAbsTrackRepmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_vectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_reverse_iteratorlEvectorlEgenfitcLcLAbsFitterInfomUcOallocatorlEgenfitcLcLAbsFitterInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_maplEconstsPgenfitcLcLAbsTrackRepmUcOgenfitcLcLAbsFitterInfomUcOlesslEconstsPgenfitcLcLAbsTrackRepmUgRcOallocatorlEpairlEconstsPgenfitcLcLAbsTrackRepmUsPconstcOgenfitcLcLAbsFitterInfomUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLeMultipleMeasurementHandling);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLAbsKalmanFitter),sizeof(genfit::AbsKalmanFitter),-1,263425,(char*)NULL,G__setup_memvargenfitcLcLAbsKalmanFitter,G__setup_memfuncgenfitcLcLAbsKalmanFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLKalmanFittedStateOnPlane),sizeof(genfit::KalmanFittedStateOnPlane),-1,326912,(char*)NULL,G__setup_memvargenfitcLcLKalmanFittedStateOnPlane,G__setup_memfuncgenfitcLcLKalmanFittedStateOnPlane);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLFitStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLKalmanFitStatus),sizeof(genfit::KalmanFitStatus),-1,1280,(char*)NULL,G__setup_memvargenfitcLcLKalmanFitStatus,G__setup_memfuncgenfitcLcLKalmanFitStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLReferenceStateOnPlane),sizeof(genfit::ReferenceStateOnPlane),-1,326912,(char*)NULL,G__setup_memvargenfitcLcLReferenceStateOnPlane,G__setup_memfuncgenfitcLcLReferenceStateOnPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLKalmanFitterRefTrack),sizeof(genfit::KalmanFitterRefTrack),-1,263424,(char*)NULL,G__setup_memvargenfitcLcLKalmanFitterRefTrack,G__setup_memfuncgenfitcLcLKalmanFitterRefTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLKalmanFitter),sizeof(genfit::KalmanFitter),-1,69376,(char*)NULL,G__setup_memvargenfitcLcLKalmanFitter,G__setup_memfuncgenfitcLcLKalmanFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__fittersRootDictLN_genfitcLcLDAF),sizeof(genfit::DAF),-1,102144,(char*)NULL,G__setup_memvargenfitcLcLDAF,G__setup_memfuncgenfitcLcLDAF);
   G__get_linked_tagnum_fwd(&G__fittersRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
}
extern "C" void G__cpp_setupfittersRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupfittersRootDict()");
  G__set_cpp_environmentfittersRootDict();
  G__cpp_setup_tagtablefittersRootDict();

  G__cpp_setup_inheritancefittersRootDict();

  G__cpp_setup_typetablefittersRootDict();

  G__cpp_setup_memvarfittersRootDict();

  G__cpp_setup_memfuncfittersRootDict();
  G__cpp_setup_globalfittersRootDict();
  G__cpp_setup_funcfittersRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncfittersRootDict();
  return;
}
class G__cpp_setup_initfittersRootDict {
  public:
    G__cpp_setup_initfittersRootDict() { G__add_setup_func("fittersRootDict",(G__incsetup)(&G__cpp_setupfittersRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initfittersRootDict() { G__remove_setup_func("fittersRootDict"); }
};
G__cpp_setup_initfittersRootDict G__cpp_setup_initializerfittersRootDict;

