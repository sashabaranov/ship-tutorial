//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:26:32 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundIshipgendIG__ShipGenDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__ShipGenDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Info Info;
      #else
      class Info  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::Pythia Pythia;
         #else
         class Pythia  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::ProcessLevel ProcessLevel;
         #else
         class ProcessLevel  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::ProcessContainer ProcessContainer;
         #else
         class ProcessContainer  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::PartonLevel PartonLevel;
         #else
         class PartonLevel  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::MultipartonInteractions MultipartonInteractions;
         #else
         class MultipartonInteractions  {
            public:
            //friend XX;
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Pythia8::Info::LHAup LHAup;
         #else
         class LHAup  {
            public:
            //friend XX;
         };
         #endif

         int idASave; //
         int idBSave; //
         double pzASave; //
         double eASave; //
         double mASave; //
         double pzBSave; //
         double eBSave; //
         double mBSave; //
         double eCMSave; //
         double sSave; //
         bool lowPTmin; //
         long nTry; //
         long nSel; //
         long nAcc; //
         double sigGen; //
         double sigErr; //
         double wtAccSum; //
         map< int, long > nTryM; //
         map< int, long > nSelM; //
         map< int, long > nAccM; //
         map< int, double > sigGenM; //
         map< int, double > sigErrM; //
         int lhaStrategySave; //
         double a0MPISave; //
         bool isRes; //
         bool isDiffA; //
         bool isDiffB; //
         bool isDiffC; //
         bool isND; //
         bool isLH; //
         bool hasSubSave[4]; //
         bool bIsSet; //
         bool evolIsSet; //
         bool atEOF; //
         bool isVal1; //
         bool isVal2; //
         bool hasHistorySave; //
         int codeSave; //
         int codeSubSave[4]; //
         int nFinalSave; //
         int nFinalSubSave[4]; //
         int nTotal; //
         int id1Save[4]; //
         int id2Save[4]; //
         int id1pdfSave[4]; //
         int id2pdfSave[4]; //
         int nMPISave; //
         int nISRSave; //
         int nFSRinProcSave; //
         int nFSRinResSave; //
         double x1Save[4]; //
         double x2Save[4]; //
         double x1pdfSave[4]; //
         double x2pdfSave[4]; //
         double pdf1Save[4]; //
         double pdf2Save[4]; //
         double Q2FacSave[4]; //
         double alphaEMSave[4]; //
         double alphaSSave[4]; //
         double Q2RenSave[4]; //
         double scalupSave[4]; //
         double sH[4]; //
         double tH[4]; //
         double uH[4]; //
         double pTH[4]; //
         double m3H[4]; //
         double m4H[4]; //
         double thetaH[4]; //
         double phiH[4]; //
         double weightSave; //
         double bMPISave; //
         double enhanceMPISave; //
         double pTmaxMPISave; //
         double pTmaxISRSave; //
         double pTmaxFSRSave; //
         double pTnowSave; //
         double zNowISRSave; //
         double pT2NowISRSave; //
         string nameSave; //
         string nameSubSave[4]; //
         vector< int > codeMPISave; //
         vector< int > iAMPISave; //
         vector< int > iBMPISave; //
         vector< double > pTMPISave; //
         vector< double > eMPISave; //
         int counters[50]; //
         map< ::string, int > messages; //
         map< ::string, ::string > headers; //
         double weightCKKWLSave; //
         double weightFIRSTSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Settings Settings;
      #else
      class Settings  {
         public:
         //friend XX;
         ::Pythia8::Info* infoPtr; //
         map< ::string, ::Pythia8::Flag > flags; //
         map< ::string, ::Pythia8::Mode > modes; //
         map< ::string, ::Pythia8::Parm > parms; //
         map< ::string, ::Pythia8::Word > words; //
         map< ::string, ::Pythia8::MVec > mvecs; //
         map< ::string, ::Pythia8::PVec > pvecs; //
         bool isInit; //
         bool readingFailedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ParticleData ParticleData;
      #else
      class ParticleData  {
         public:
         //friend XX;
         int modeBreitWigner; //
         double maxEnhanceBW; //
         double mQRun[7]; //
         double Lambda5Run; //
         ::Pythia8::Info* infoPtr; //
         ::Pythia8::Settings* settingsPtr; //
         ::Pythia8::Rndm* rndmPtr; //
         ::Pythia8::Couplings* couplingsPtr; //
         map< int, ::Pythia8::ParticleDataEntry > pdt; //
         ::Pythia8::ParticleDataEntry* particlePtr; //
         bool isInit; //
         bool readingFailedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::DecayChannel DecayChannel;
      #else
      class DecayChannel  {
         public:
         //friend XX;
         int onModeSave; //
         double bRatioSave; //
         double currentBRSave; //
         double onShellWidthSave; //
         double openSecPos; //
         double openSecNeg; //
         int meModeSave; //
         int nProd; //
         int prod[8]; //
         bool hasChangedSave; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::ParticleDataEntry ParticleDataEntry;
      #else
      class ParticleDataEntry  {
         public:
         //friend XX;
         int idSave; //
         string nameSave; //
         string antiNameSave; //
         int spinTypeSave; //
         int chargeTypeSave; //
         int colTypeSave; //
         double m0Save; //
         double mWidthSave; //
         double mMinSave; //
         double mMaxSave; //
         double tau0Save; //
         double constituentMassSave; //
         bool hasAntiSave; //
         bool isResonanceSave; //
         bool mayDecaySave; //
         bool doExternalDecaySave; //
         bool isVisibleSave; //
         bool doForceWidthSave; //
         bool hasChangedSave; //
         int modeBWnow; //
         double atanLow; //
         double atanDif; //
         double mThr; //
         vector< ::Pythia8::DecayChannel > channels; //
         double currentBRSum; //
         ::Pythia8::ResonanceWidths* resonancePtr; //
         ::Pythia8::ParticleData* particleDataPtr; //
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Event Event;
      #else
      class Event  {
         public:
         //friend XX;
         int startColTag; //
         vector< ::Pythia8::Particle > entry; //
         vector< ::Pythia8::Junction > junction; //
         int maxColTag; //
         int savedSize; //
         int savedJunctionSize; //
         double scaleSave; //
         double scaleSecondSave; //
         string headerList; //
         ::Pythia8::ParticleData* particleDataPtr; //!
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Particle Particle;
      #else
      class Particle  {
         public:
         //friend XX;
         int idSave; //
         int statusSave; //
         int mother1Save; //
         int mother2Save; //
         int daughter1Save; //
         int daughter2Save; //
         int colSave; //
         int acolSave; //
         ::Pythia8::Vec4 pSave; //
         double mSave; //
         double scaleSave; //
         double polSave; //
         bool hasVertexSave; //
         ::Pythia8::Vec4 vProdSave; //
         double tauSave; //
         ::Pythia8::ParticleDataEntry* pdePtr; //!
         ::Pythia8::Event* evtPtr; //!
      };
      #endif
      } 
      namespace Pythia8 {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pythia8::Pythia Pythia;
      #else
      class Pythia  {
         public:
         //friend XX;
         ::Pythia8::Event process; //
         ::Pythia8::Event event; //
         ::Pythia8::Info info; //
         ::Pythia8::Settings settings; //
         ::Pythia8::ParticleData particleData; //
         ::Pythia8::Rndm rndm; //
         ::Pythia8::Couplings couplings; //
         ::Pythia8::Couplings* couplingsPtr; //
         ::Pythia8::SLHAinterface slhaInterface; //
         ::Pythia8::PartonSystems partonSystems; //
         ::Pythia8::Merging merging; //
         ::Pythia8::MergingHooks* mergingHooksPtr; //
         string xmlPath; //
         bool doProcessLevel; //
         bool doPartonLevel; //
         bool doHadronLevel; //
         bool doDiffraction; //
         bool doResDec; //
         bool doFSRinRes; //
         bool decayRHadrons; //
         bool abortIfVeto; //
         bool checkEvent; //
         bool checkHistory; //
         int nErrList; //
         double epTolErr; //
         double epTolWarn; //
         bool isConstructed; //
         bool isInit; //
         bool isUnresolvedA; //
         bool isUnresolvedB; //
         bool showSaV; //
         bool showMaD; //
         int idA; //
         int idB; //
         int frameType; //
         int boostType; //
         int nCount; //
         int nShowLHA; //
         int nShowInfo; //
         int nShowProc; //
         int nShowEvt; //
         double mA; //
         double mB; //
         double pxA; //
         double pxB; //
         double pyA; //
         double pyB; //
         double pzA; //
         double pzB; //
         double eA; //
         double eB; //
         double pzAcm; //
         double pzBcm; //
         double eCM; //
         double betaZ; //
         double gammaZ; //
         ::Pythia8::Vec4 pAinit; //
         ::Pythia8::Vec4 pBinit; //
         ::Pythia8::Vec4 pAnow; //
         ::Pythia8::Vec4 pBnow; //
         ::Pythia8::RotBstMatrix MfromCM; //
         ::Pythia8::RotBstMatrix MtoCM; //
         int nErrEvent; //
         vector< int > iErrId; //
         vector< int > iErrCol; //
         vector< int > iErrEpm; //
         vector< int > iErrNan; //
         vector< int > iErrNanVtx; //
         ::Pythia8::PDF* pdfAPtr; //
         ::Pythia8::PDF* pdfBPtr; //
         ::Pythia8::PDF* pdfHardAPtr; //
         ::Pythia8::PDF* pdfHardBPtr; //
         ::Pythia8::PDF* pdfPomAPtr; //
         ::Pythia8::PDF* pdfPomBPtr; //
         bool useNewPdfA; //
         bool useNewPdfB; //
         bool useNewPdfHard; //
         bool useNewPdfPomA; //
         bool useNewPdfPomB; //
         ::Pythia8::BeamParticle beamA; //
         ::Pythia8::BeamParticle beamB; //
         ::Pythia8::BeamParticle beamPomA; //
         ::Pythia8::BeamParticle beamPomB; //
         bool doLHA; //
         bool useNewLHA; //
         ::Pythia8::LHAup* lhaUpPtr; //
         ::Pythia8::DecayHandler* decayHandlePtr; //
         vector< int > handledParticles; //
         ::Pythia8::UserHooks* userHooksPtr; //
         bool hasUserHooks; //
         bool doVetoProcess; //
         bool doVetoPartons; //
         bool retryPartonLevel; //
         ::Pythia8::BeamShape* beamShapePtr; //
         bool useNewBeamShape; //
         bool doMomentumSpread; //
         bool doVertexSpread; //
         vector< ::Pythia8::SigmaProcess* > sigmaPtrs; //
         vector< ::Pythia8::ResonanceWidths* > resonancePtrs; //
         ::Pythia8::TimeShower* timesDecPtr; //
         ::Pythia8::TimeShower* timesPtr; //
         ::Pythia8::SpaceShower* spacePtr; //
         bool useNewTimes; //
         bool useNewSpace; //
         ::Pythia8::ProcessLevel processLevel; //
         ::Pythia8::PartonLevel partonLevel; //
         ::Pythia8::PartonLevel trialPartonLevel; //
         bool hasMergingHooks; //
         bool hasOwnMergingHooks; //
         bool doMerging; //
         ::Pythia8::HadronLevel hadronLevel; //
         ::Pythia8::SigmaTotal sigmaTot; //
         ::Pythia8::RHadrons rHadrons; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Pythia6Generator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Pythia6Generator(void *p = 0);
   static void *newArray_Pythia6Generator(Long_t size, void *p);
   static void delete_Pythia6Generator(void *p);
   static void deleteArray_Pythia6Generator(void *p);
   static void destruct_Pythia6Generator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia6Generator*)
   {
      ::Pythia6Generator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Pythia6Generator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia6Generator", ::Pythia6Generator::Class_Version(), "/input/FairShip/shipgen/Pythia6Generator.h", 61,
                  typeid(::Pythia6Generator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Pythia6Generator::Dictionary, isa_proxy, 4,
                  sizeof(::Pythia6Generator) );
      instance.SetNew(&new_Pythia6Generator);
      instance.SetNewArray(&newArray_Pythia6Generator);
      instance.SetDelete(&delete_Pythia6Generator);
      instance.SetDeleteArray(&deleteArray_Pythia6Generator);
      instance.SetDestructor(&destruct_Pythia6Generator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia6Generator*)
   {
      return GenerateInitInstanceLocal((::Pythia6Generator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia6Generator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void tPythia6Generator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_tPythia6Generator(void *p = 0);
   static void *newArray_tPythia6Generator(Long_t size, void *p);
   static void delete_tPythia6Generator(void *p);
   static void deleteArray_tPythia6Generator(void *p);
   static void destruct_tPythia6Generator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::tPythia6Generator*)
   {
      ::tPythia6Generator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::tPythia6Generator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("tPythia6Generator", ::tPythia6Generator::Class_Version(), "/input/FairShip/shipgen/tPythia6Generator.h", 13,
                  typeid(::tPythia6Generator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::tPythia6Generator::Dictionary, isa_proxy, 4,
                  sizeof(::tPythia6Generator) );
      instance.SetNew(&new_tPythia6Generator);
      instance.SetNewArray(&newArray_tPythia6Generator);
      instance.SetDelete(&delete_tPythia6Generator);
      instance.SetDeleteArray(&deleteArray_tPythia6Generator);
      instance.SetDestructor(&destruct_tPythia6Generator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::tPythia6Generator*)
   {
      return GenerateInitInstanceLocal((::tPythia6Generator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tPythia6Generator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLInfo_Dictionary();
   static void *new_Pythia8cLcLInfo(void *p = 0);
   static void *newArray_Pythia8cLcLInfo(Long_t size, void *p);
   static void delete_Pythia8cLcLInfo(void *p);
   static void deleteArray_Pythia8cLcLInfo(void *p);
   static void destruct_Pythia8cLcLInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Info*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Info) == sizeof( ::ROOTShadow::Shadow::Pythia8::Info));
      ::Pythia8::Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Info),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Info", "/opt/ocean/FairSoftInst/include/Pythia8/Info.h", 25,
                  typeid(::Pythia8::Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLInfo_ShowMembers, &Pythia8cLcLInfo_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Info) );
      instance.SetNew(&new_Pythia8cLcLInfo);
      instance.SetNewArray(&newArray_Pythia8cLcLInfo);
      instance.SetDelete(&delete_Pythia8cLcLInfo);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLInfo);
      instance.SetDestructor(&destruct_Pythia8cLcLInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Info*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLInfo_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLSettings_Dictionary();
   static void *new_Pythia8cLcLSettings(void *p = 0);
   static void *newArray_Pythia8cLcLSettings(Long_t size, void *p);
   static void delete_Pythia8cLcLSettings(void *p);
   static void deleteArray_Pythia8cLcLSettings(void *p);
   static void destruct_Pythia8cLcLSettings(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Settings*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Settings) == sizeof( ::ROOTShadow::Shadow::Pythia8::Settings));
      ::Pythia8::Settings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Settings),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Settings", "/opt/ocean/FairSoftInst/include/Pythia8/Settings.h", 154,
                  typeid(::Pythia8::Settings), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLSettings_ShowMembers, &Pythia8cLcLSettings_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Settings) );
      instance.SetNew(&new_Pythia8cLcLSettings);
      instance.SetNewArray(&newArray_Pythia8cLcLSettings);
      instance.SetDelete(&delete_Pythia8cLcLSettings);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLSettings);
      instance.SetDestructor(&destruct_Pythia8cLcLSettings);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Settings*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Settings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLSettings_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticleData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticleData_Dictionary();
   static void *new_Pythia8cLcLParticleData(void *p = 0);
   static void *newArray_Pythia8cLcLParticleData(Long_t size, void *p);
   static void delete_Pythia8cLcLParticleData(void *p);
   static void deleteArray_Pythia8cLcLParticleData(void *p);
   static void destruct_Pythia8cLcLParticleData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ParticleData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ParticleData) == sizeof( ::ROOTShadow::Shadow::Pythia8::ParticleData));
      ::Pythia8::ParticleData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ParticleData),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ParticleData", "/opt/ocean/FairSoftInst/include/Pythia8/ParticleData.h", 333,
                  typeid(::Pythia8::ParticleData), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticleData_ShowMembers, &Pythia8cLcLParticleData_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ParticleData) );
      instance.SetNew(&new_Pythia8cLcLParticleData);
      instance.SetNewArray(&newArray_Pythia8cLcLParticleData);
      instance.SetDelete(&delete_Pythia8cLcLParticleData);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticleData);
      instance.SetDestructor(&destruct_Pythia8cLcLParticleData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ParticleData*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ParticleData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticleData_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLDecayChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLDecayChannel_Dictionary();
   static void *new_Pythia8cLcLDecayChannel(void *p = 0);
   static void *newArray_Pythia8cLcLDecayChannel(Long_t size, void *p);
   static void delete_Pythia8cLcLDecayChannel(void *p);
   static void deleteArray_Pythia8cLcLDecayChannel(void *p);
   static void destruct_Pythia8cLcLDecayChannel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::DecayChannel*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::DecayChannel) == sizeof( ::ROOTShadow::Shadow::Pythia8::DecayChannel));
      ::Pythia8::DecayChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::DecayChannel),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::DecayChannel", "/opt/ocean/FairSoftInst/include/Pythia8/ParticleData.h", 35,
                  typeid(::Pythia8::DecayChannel), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLDecayChannel_ShowMembers, &Pythia8cLcLDecayChannel_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::DecayChannel) );
      instance.SetNew(&new_Pythia8cLcLDecayChannel);
      instance.SetNewArray(&newArray_Pythia8cLcLDecayChannel);
      instance.SetDelete(&delete_Pythia8cLcLDecayChannel);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLDecayChannel);
      instance.SetDestructor(&destruct_Pythia8cLcLDecayChannel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::DecayChannel*)
   {
      return GenerateInitInstanceLocal((::Pythia8::DecayChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLDecayChannel_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticleDataEntry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticleDataEntry_Dictionary();
   static void *new_Pythia8cLcLParticleDataEntry(void *p = 0);
   static void *newArray_Pythia8cLcLParticleDataEntry(Long_t size, void *p);
   static void delete_Pythia8cLcLParticleDataEntry(void *p);
   static void deleteArray_Pythia8cLcLParticleDataEntry(void *p);
   static void destruct_Pythia8cLcLParticleDataEntry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::ParticleDataEntry*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::ParticleDataEntry) == sizeof( ::ROOTShadow::Shadow::Pythia8::ParticleDataEntry));
      ::Pythia8::ParticleDataEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::ParticleDataEntry),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::ParticleDataEntry", "/opt/ocean/FairSoftInst/include/Pythia8/ParticleData.h", 106,
                  typeid(::Pythia8::ParticleDataEntry), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticleDataEntry_ShowMembers, &Pythia8cLcLParticleDataEntry_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::ParticleDataEntry) );
      instance.SetNew(&new_Pythia8cLcLParticleDataEntry);
      instance.SetNewArray(&newArray_Pythia8cLcLParticleDataEntry);
      instance.SetDelete(&delete_Pythia8cLcLParticleDataEntry);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticleDataEntry);
      instance.SetDestructor(&destruct_Pythia8cLcLParticleDataEntry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::ParticleDataEntry*)
   {
      return GenerateInitInstanceLocal((::Pythia8::ParticleDataEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticleDataEntry_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLEvent_Dictionary();
   static void *new_Pythia8cLcLEvent(void *p = 0);
   static void *newArray_Pythia8cLcLEvent(Long_t size, void *p);
   static void delete_Pythia8cLcLEvent(void *p);
   static void deleteArray_Pythia8cLcLEvent(void *p);
   static void destruct_Pythia8cLcLEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Event*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Event) == sizeof( ::ROOTShadow::Shadow::Pythia8::Event));
      ::Pythia8::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Event),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Event", "/opt/ocean/FairSoftInst/include/Pythia8/Event.h", 368,
                  typeid(::Pythia8::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLEvent_ShowMembers, &Pythia8cLcLEvent_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Event) );
      instance.SetNew(&new_Pythia8cLcLEvent);
      instance.SetNewArray(&newArray_Pythia8cLcLEvent);
      instance.SetDelete(&delete_Pythia8cLcLEvent);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLEvent);
      instance.SetDestructor(&destruct_Pythia8cLcLEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Event*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLEvent_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLParticle_Dictionary();
   static void *new_Pythia8cLcLParticle(void *p = 0);
   static void *newArray_Pythia8cLcLParticle(Long_t size, void *p);
   static void delete_Pythia8cLcLParticle(void *p);
   static void deleteArray_Pythia8cLcLParticle(void *p);
   static void destruct_Pythia8cLcLParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Particle*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Particle) == sizeof( ::ROOTShadow::Shadow::Pythia8::Particle));
      ::Pythia8::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Particle),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Particle", "/opt/ocean/FairSoftInst/include/Pythia8/Event.h", 32,
                  typeid(::Pythia8::Particle), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLParticle_ShowMembers, &Pythia8cLcLParticle_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Particle) );
      instance.SetNew(&new_Pythia8cLcLParticle);
      instance.SetNewArray(&newArray_Pythia8cLcLParticle);
      instance.SetDelete(&delete_Pythia8cLcLParticle);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLParticle);
      instance.SetDestructor(&destruct_Pythia8cLcLParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Particle*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLParticle_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8cLcLPythia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pythia8cLcLPythia_Dictionary();
   static void *new_Pythia8cLcLPythia(void *p = 0);
   static void *newArray_Pythia8cLcLPythia(Long_t size, void *p);
   static void delete_Pythia8cLcLPythia(void *p);
   static void deleteArray_Pythia8cLcLPythia(void *p);
   static void destruct_Pythia8cLcLPythia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8::Pythia*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pythia8::Pythia) == sizeof( ::ROOTShadow::Shadow::Pythia8::Pythia));
      ::Pythia8::Pythia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pythia8::Pythia),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8::Pythia", "/opt/ocean/FairSoftInst/include/Pythia8/Pythia.h", 46,
                  typeid(::Pythia8::Pythia), ::ROOT::DefineBehavior(ptr, ptr),
                  &Pythia8cLcLPythia_ShowMembers, &Pythia8cLcLPythia_Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8::Pythia) );
      instance.SetNew(&new_Pythia8cLcLPythia);
      instance.SetNewArray(&newArray_Pythia8cLcLPythia);
      instance.SetDelete(&delete_Pythia8cLcLPythia);
      instance.SetDeleteArray(&deleteArray_Pythia8cLcLPythia);
      instance.SetDestructor(&destruct_Pythia8cLcLPythia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8::Pythia*)
   {
      return GenerateInitInstanceLocal((::Pythia8::Pythia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pythia8cLcLPythia_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Pythia8Generator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Pythia8Generator(void *p = 0);
   static void *newArray_Pythia8Generator(Long_t size, void *p);
   static void delete_Pythia8Generator(void *p);
   static void deleteArray_Pythia8Generator(void *p);
   static void destruct_Pythia8Generator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pythia8Generator*)
   {
      ::Pythia8Generator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Pythia8Generator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Pythia8Generator", ::Pythia8Generator::Class_Version(), "/input/FairShip/shipgen/Pythia8Generator.h", 46,
                  typeid(::Pythia8Generator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Pythia8Generator::Dictionary, isa_proxy, 4,
                  sizeof(::Pythia8Generator) );
      instance.SetNew(&new_Pythia8Generator);
      instance.SetNewArray(&newArray_Pythia8Generator);
      instance.SetDelete(&delete_Pythia8Generator);
      instance.SetDeleteArray(&deleteArray_Pythia8Generator);
      instance.SetDestructor(&destruct_Pythia8Generator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pythia8Generator*)
   {
      return GenerateInitInstanceLocal((::Pythia8Generator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pythia8Generator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HNLPythia8Generator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HNLPythia8Generator(void *p = 0);
   static void *newArray_HNLPythia8Generator(Long_t size, void *p);
   static void delete_HNLPythia8Generator(void *p);
   static void deleteArray_HNLPythia8Generator(void *p);
   static void destruct_HNLPythia8Generator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HNLPythia8Generator*)
   {
      ::HNLPythia8Generator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HNLPythia8Generator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HNLPythia8Generator", ::HNLPythia8Generator::Class_Version(), "/input/FairShip/shipgen/HNLPythia8Generator.h", 24,
                  typeid(::HNLPythia8Generator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HNLPythia8Generator::Dictionary, isa_proxy, 4,
                  sizeof(::HNLPythia8Generator) );
      instance.SetNew(&new_HNLPythia8Generator);
      instance.SetNewArray(&newArray_HNLPythia8Generator);
      instance.SetDelete(&delete_HNLPythia8Generator);
      instance.SetDeleteArray(&deleteArray_HNLPythia8Generator);
      instance.SetDestructor(&destruct_HNLPythia8Generator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HNLPythia8Generator*)
   {
      return GenerateInitInstanceLocal((::HNLPythia8Generator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HNLPythia8Generator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GenieGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GenieGenerator(void *p = 0);
   static void *newArray_GenieGenerator(Long_t size, void *p);
   static void delete_GenieGenerator(void *p);
   static void deleteArray_GenieGenerator(void *p);
   static void destruct_GenieGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GenieGenerator*)
   {
      ::GenieGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GenieGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GenieGenerator", ::GenieGenerator::Class_Version(), "/input/FairShip/shipgen/GenieGenerator.h", 15,
                  typeid(::GenieGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GenieGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::GenieGenerator) );
      instance.SetNew(&new_GenieGenerator);
      instance.SetNewArray(&newArray_GenieGenerator);
      instance.SetDelete(&delete_GenieGenerator);
      instance.SetDeleteArray(&deleteArray_GenieGenerator);
      instance.SetDestructor(&destruct_GenieGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GenieGenerator*)
   {
      return GenerateInitInstanceLocal((::GenieGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenieGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NuageGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NuageGenerator(void *p = 0);
   static void *newArray_NuageGenerator(Long_t size, void *p);
   static void delete_NuageGenerator(void *p);
   static void deleteArray_NuageGenerator(void *p);
   static void destruct_NuageGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NuageGenerator*)
   {
      ::NuageGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NuageGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NuageGenerator", ::NuageGenerator::Class_Version(), "/input/FairShip/shipgen/NuageGenerator.h", 15,
                  typeid(::NuageGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::NuageGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::NuageGenerator) );
      instance.SetNew(&new_NuageGenerator);
      instance.SetNewArray(&newArray_NuageGenerator);
      instance.SetDelete(&delete_NuageGenerator);
      instance.SetDeleteArray(&deleteArray_NuageGenerator);
      instance.SetDestructor(&destruct_NuageGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NuageGenerator*)
   {
      return GenerateInitInstanceLocal((::NuageGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NuageGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NtupleGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NtupleGenerator(void *p = 0);
   static void *newArray_NtupleGenerator(Long_t size, void *p);
   static void delete_NtupleGenerator(void *p);
   static void deleteArray_NtupleGenerator(void *p);
   static void destruct_NtupleGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NtupleGenerator*)
   {
      ::NtupleGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NtupleGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NtupleGenerator", ::NtupleGenerator::Class_Version(), "/input/FairShip/shipgen/NtupleGenerator.h", 12,
                  typeid(::NtupleGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::NtupleGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::NtupleGenerator) );
      instance.SetNew(&new_NtupleGenerator);
      instance.SetNewArray(&newArray_NtupleGenerator);
      instance.SetDelete(&delete_NtupleGenerator);
      instance.SetDeleteArray(&deleteArray_NtupleGenerator);
      instance.SetDestructor(&destruct_NtupleGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NtupleGenerator*)
   {
      return GenerateInitInstanceLocal((::NtupleGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NtupleGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MuonBackGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MuonBackGenerator(void *p = 0);
   static void *newArray_MuonBackGenerator(Long_t size, void *p);
   static void delete_MuonBackGenerator(void *p);
   static void deleteArray_MuonBackGenerator(void *p);
   static void destruct_MuonBackGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonBackGenerator*)
   {
      ::MuonBackGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MuonBackGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonBackGenerator", ::MuonBackGenerator::Class_Version(), "/input/FairShip/shipgen/MuonBackGenerator.h", 12,
                  typeid(::MuonBackGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MuonBackGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MuonBackGenerator) );
      instance.SetNew(&new_MuonBackGenerator);
      instance.SetNewArray(&newArray_MuonBackGenerator);
      instance.SetDelete(&delete_MuonBackGenerator);
      instance.SetDeleteArray(&deleteArray_MuonBackGenerator);
      instance.SetDestructor(&destruct_MuonBackGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MuonBackGenerator*)
   {
      return GenerateInitInstanceLocal((::MuonBackGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonBackGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CosmicsGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CosmicsGenerator(void *p = 0);
   static void *newArray_CosmicsGenerator(Long_t size, void *p);
   static void delete_CosmicsGenerator(void *p);
   static void deleteArray_CosmicsGenerator(void *p);
   static void destruct_CosmicsGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CosmicsGenerator*)
   {
      ::CosmicsGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CosmicsGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CosmicsGenerator", ::CosmicsGenerator::Class_Version(), "/input/FairShip/shipgen/CosmicsGenerator.h", 37,
                  typeid(::CosmicsGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CosmicsGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::CosmicsGenerator) );
      instance.SetNew(&new_CosmicsGenerator);
      instance.SetNewArray(&newArray_CosmicsGenerator);
      instance.SetDelete(&delete_CosmicsGenerator);
      instance.SetDeleteArray(&deleteArray_CosmicsGenerator);
      instance.SetDestructor(&destruct_CosmicsGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CosmicsGenerator*)
   {
      return GenerateInitInstanceLocal((::CosmicsGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CosmicsGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MuDISGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MuDISGenerator(void *p = 0);
   static void *newArray_MuDISGenerator(Long_t size, void *p);
   static void delete_MuDISGenerator(void *p);
   static void deleteArray_MuDISGenerator(void *p);
   static void destruct_MuDISGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MuDISGenerator*)
   {
      ::MuDISGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MuDISGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MuDISGenerator", ::MuDISGenerator::Class_Version(), "/input/FairShip/shipgen/MuDISGenerator.h", 16,
                  typeid(::MuDISGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MuDISGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::MuDISGenerator) );
      instance.SetNew(&new_MuDISGenerator);
      instance.SetNewArray(&newArray_MuDISGenerator);
      instance.SetDelete(&delete_MuDISGenerator);
      instance.SetDeleteArray(&deleteArray_MuDISGenerator);
      instance.SetDestructor(&destruct_MuDISGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MuDISGenerator*)
   {
      return GenerateInitInstanceLocal((::MuDISGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuDISGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Pythia6Generator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Pythia6Generator::Class_Name()
{
   return "Pythia6Generator";
}

//______________________________________________________________________________
const char *Pythia6Generator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia6Generator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pythia6Generator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia6Generator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pythia6Generator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia6Generator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pythia6Generator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia6Generator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr tPythia6Generator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *tPythia6Generator::Class_Name()
{
   return "tPythia6Generator";
}

//______________________________________________________________________________
const char *tPythia6Generator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tPythia6Generator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int tPythia6Generator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tPythia6Generator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void tPythia6Generator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tPythia6Generator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *tPythia6Generator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tPythia6Generator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Pythia8Generator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Pythia8Generator::Class_Name()
{
   return "Pythia8Generator";
}

//______________________________________________________________________________
const char *Pythia8Generator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8Generator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pythia8Generator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8Generator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pythia8Generator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8Generator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pythia8Generator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8Generator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HNLPythia8Generator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HNLPythia8Generator::Class_Name()
{
   return "HNLPythia8Generator";
}

//______________________________________________________________________________
const char *HNLPythia8Generator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HNLPythia8Generator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HNLPythia8Generator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HNLPythia8Generator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HNLPythia8Generator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HNLPythia8Generator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HNLPythia8Generator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HNLPythia8Generator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GenieGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenieGenerator::Class_Name()
{
   return "GenieGenerator";
}

//______________________________________________________________________________
const char *GenieGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenieGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenieGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenieGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenieGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenieGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenieGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenieGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr NuageGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *NuageGenerator::Class_Name()
{
   return "NuageGenerator";
}

//______________________________________________________________________________
const char *NuageGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NuageGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NuageGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NuageGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NuageGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NuageGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NuageGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NuageGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr NtupleGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *NtupleGenerator::Class_Name()
{
   return "NtupleGenerator";
}

//______________________________________________________________________________
const char *NtupleGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NtupleGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NtupleGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NtupleGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NtupleGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NtupleGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NtupleGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NtupleGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MuonBackGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MuonBackGenerator::Class_Name()
{
   return "MuonBackGenerator";
}

//______________________________________________________________________________
const char *MuonBackGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MuonBackGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MuonBackGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MuonBackGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MuonBackGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MuonBackGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MuonBackGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MuonBackGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CosmicsGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CosmicsGenerator::Class_Name()
{
   return "CosmicsGenerator";
}

//______________________________________________________________________________
const char *CosmicsGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CosmicsGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CosmicsGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CosmicsGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CosmicsGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CosmicsGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CosmicsGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CosmicsGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MuDISGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MuDISGenerator::Class_Name()
{
   return "MuDISGenerator";
}

//______________________________________________________________________________
const char *MuDISGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MuDISGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MuDISGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MuDISGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MuDISGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MuDISGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MuDISGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MuDISGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void tPythia6Generator::Streamer(TBuffer &R__b)
{
   // Stream an object of class tPythia6Generator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(tPythia6Generator::Class(),this);
   } else {
      R__b.WriteClassBuffer(tPythia6Generator::Class(),this);
   }
}

//______________________________________________________________________________
void tPythia6Generator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class tPythia6Generator.
      TClass *R__cl = ::tPythia6Generator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPythia", &fPythia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &fMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeepCopy", &fDeepCopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPionKaonDecay", &fPionKaonDecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.InspectMember(fType, "fType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTarget", &fTarget);
      R__insp.InspectMember(fTarget, "fTarget.");
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_tPythia6Generator(void *p) {
      return  p ? new(p) ::tPythia6Generator : new ::tPythia6Generator;
   }
   static void *newArray_tPythia6Generator(Long_t nElements, void *p) {
      return p ? new(p) ::tPythia6Generator[nElements] : new ::tPythia6Generator[nElements];
   }
   // Wrapper around operator delete
   static void delete_tPythia6Generator(void *p) {
      delete ((::tPythia6Generator*)p);
   }
   static void deleteArray_tPythia6Generator(void *p) {
      delete [] ((::tPythia6Generator*)p);
   }
   static void destruct_tPythia6Generator(void *p) {
      typedef ::tPythia6Generator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::tPythia6Generator

//______________________________________________________________________________
void Pythia6Generator::Streamer(TBuffer &R__b)
{
   // Stream an object of class Pythia6Generator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Pythia6Generator::Class(),this);
   } else {
      R__b.WriteClassBuffer(Pythia6Generator::Class(),this);
   }
}

//______________________________________________________________________________
void Pythia6Generator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Pythia6Generator.
      TClass *R__cl = ::Pythia6Generator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVerbose", &fVerbose);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia6Generator(void *p) {
      return  p ? new(p) ::Pythia6Generator : new ::Pythia6Generator;
   }
   static void *newArray_Pythia6Generator(Long_t nElements, void *p) {
      return p ? new(p) ::Pythia6Generator[nElements] : new ::Pythia6Generator[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia6Generator(void *p) {
      delete ((::Pythia6Generator*)p);
   }
   static void deleteArray_Pythia6Generator(void *p) {
      delete [] ((::Pythia6Generator*)p);
   }
   static void destruct_Pythia6Generator(void *p) {
      typedef ::Pythia6Generator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia6Generator

//______________________________________________________________________________
void Pythia8Generator::Streamer(TBuffer &R__b)
{
   // Stream an object of class Pythia8Generator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Pythia8Generator::Class(),this);
   } else {
      R__b.WriteClassBuffer(Pythia8Generator::Class(),this);
   }
}

//______________________________________________________________________________
void Pythia8Generator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Pythia8Generator.
      TClass *R__cl = ::Pythia8Generator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPythia", (void*)&fPythia);
      R__insp.InspectMember("Pythia8::Pythia", (void*)&fPythia, "fPythia.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandomEngine", &fRandomEngine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &fMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHNL", &fHNL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseRandom1", &fUseRandom1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseRandom3", &fUseRandom3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeepCopy", &fDeepCopy);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8Generator(void *p) {
      return  p ? new(p) ::Pythia8Generator : new ::Pythia8Generator;
   }
   static void *newArray_Pythia8Generator(Long_t nElements, void *p) {
      return p ? new(p) ::Pythia8Generator[nElements] : new ::Pythia8Generator[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8Generator(void *p) {
      delete ((::Pythia8Generator*)p);
   }
   static void deleteArray_Pythia8Generator(void *p) {
      delete [] ((::Pythia8Generator*)p);
   }
   static void destruct_Pythia8Generator(void *p) {
      typedef ::Pythia8Generator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8Generator

//______________________________________________________________________________
void HNLPythia8Generator::Streamer(TBuffer &R__b)
{
   // Stream an object of class HNLPythia8Generator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HNLPythia8Generator::Class(),this);
   } else {
      R__b.WriteClassBuffer(HNLPythia8Generator::Class(),this);
   }
}

//______________________________________________________________________________
void HNLPythia8Generator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HNLPythia8Generator.
      TClass *R__cl = ::HNLPythia8Generator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPythia", &fPythia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandomEngine", &fRandomEngine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &fMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHNL", &fHNL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseRandom1", &fUseRandom1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseRandom3", &fUseRandom3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLmin", &fLmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLmax", &fLmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fctau", &fctau);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fextFile", &fextFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstEvent", &firstEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hpx[1]", hpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hpy[1]", hpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hpz[1]", hpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hE[1]", hE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hM[1]", hM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mpx[1]", mpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mpy[1]", mpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mpz[1]", mpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE[1]", mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hid[1]", hid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mid[1]", mid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeepCopy", &fDeepCopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HNLPythia8Generator(void *p) {
      return  p ? new(p) ::HNLPythia8Generator : new ::HNLPythia8Generator;
   }
   static void *newArray_HNLPythia8Generator(Long_t nElements, void *p) {
      return p ? new(p) ::HNLPythia8Generator[nElements] : new ::HNLPythia8Generator[nElements];
   }
   // Wrapper around operator delete
   static void delete_HNLPythia8Generator(void *p) {
      delete ((::HNLPythia8Generator*)p);
   }
   static void deleteArray_HNLPythia8Generator(void *p) {
      delete [] ((::HNLPythia8Generator*)p);
   }
   static void destruct_HNLPythia8Generator(void *p) {
      typedef ::HNLPythia8Generator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HNLPythia8Generator

//______________________________________________________________________________
void GenieGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class GenieGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GenieGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(GenieGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void GenieGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GenieGenerator.
      TClass *R__cl = ::GenieGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yvessel", &Yvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xvessel", &Xvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lvessel", &Lvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ztarget", &ztarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startZ", &startZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endZ", &endZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ev", &Ev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxv", &pxv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyv", &pyv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzv", &pzv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "El", &El);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxl", &pxl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyl", &pyl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzl", &pzl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxx", &vtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxy", &vtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxz", &vtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxt", &vtxt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxf[500]", pxf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyf[500]", pyf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzf[500]", pzf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgf[500]", pdgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dVecs", (void*)&dVecs);
      R__insp.InspectMember("vector<TVector3>", (void*)&dVecs, "dVecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boxs", (void*)&boxs);
      R__insp.InspectMember("vector<TVector3>", (void*)&boxs, "boxs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc", &cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nf", &nf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neu", &neu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNuOnly", &fNuOnly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fznu0", &fznu0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fznu11", &fznu11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXnu11", &fXnu11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYnu11", &fYnu11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrDz_inner", &fEntrDz_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrDz_outer", &fEntrDz_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrZ_inner", &fEntrZ_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrZ_outer", &fEntrZ_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrA", &fEntrA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrB", &fEntrB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1z", &fL1z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScintDz", &fScintDz);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GenieGenerator(void *p) {
      return  p ? new(p) ::GenieGenerator : new ::GenieGenerator;
   }
   static void *newArray_GenieGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::GenieGenerator[nElements] : new ::GenieGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenieGenerator(void *p) {
      delete ((::GenieGenerator*)p);
   }
   static void deleteArray_GenieGenerator(void *p) {
      delete [] ((::GenieGenerator*)p);
   }
   static void destruct_GenieGenerator(void *p) {
      typedef ::GenieGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GenieGenerator

//______________________________________________________________________________
void NtupleGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class NtupleGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NtupleGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(NtupleGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void NtupleGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NtupleGenerator.
      TClass *R__cl = ::NtupleGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nmeas", &Nmeas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volid[500]", volid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "procid[500]", procid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentid", &parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ezero", &Ezero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof", &tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "w", &w);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px[500]", px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py[500]", py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz[500]", pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx[500]", vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy[500]", vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz[500]", vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NtupleGenerator(void *p) {
      return  p ? new(p) ::NtupleGenerator : new ::NtupleGenerator;
   }
   static void *newArray_NtupleGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::NtupleGenerator[nElements] : new ::NtupleGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_NtupleGenerator(void *p) {
      delete ((::NtupleGenerator*)p);
   }
   static void deleteArray_NtupleGenerator(void *p) {
      delete [] ((::NtupleGenerator*)p);
   }
   static void destruct_NtupleGenerator(void *p) {
      typedef ::NtupleGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NtupleGenerator

//______________________________________________________________________________
void MuonBackGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MuonBackGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MuonBackGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MuonBackGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MuonBackGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MuonBackGenerator.
      TClass *R__cl = ::MuonBackGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentid", &parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pythiaid", &pythiaid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "w", &w);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecut", &ecut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiRandomize", &fPhiRandomize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsmearBeam", &fsmearBeam);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MuonBackGenerator(void *p) {
      return  p ? new(p) ::MuonBackGenerator : new ::MuonBackGenerator;
   }
   static void *newArray_MuonBackGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MuonBackGenerator[nElements] : new ::MuonBackGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuonBackGenerator(void *p) {
      delete ((::MuonBackGenerator*)p);
   }
   static void deleteArray_MuonBackGenerator(void *p) {
      delete [] ((::MuonBackGenerator*)p);
   }
   static void destruct_MuonBackGenerator(void *p) {
      typedef ::MuonBackGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MuonBackGenerator

//______________________________________________________________________________
void CosmicsGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class CosmicsGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CosmicsGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(CosmicsGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void CosmicsGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CosmicsGenerator.
      TClass *R__cl = ::CosmicsGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0", &z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yBox", &yBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xBox", &xBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zBox", &zBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xdist", &xdist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zdist", &zdist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minE", &minE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_EVENTS", &n_EVENTS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandomEngine", &fRandomEngine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P", &P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weighttest", &weighttest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weight", &weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FluxIntegral", &FluxIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nInside", &nInside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTest", &nTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "high", &high);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CosmicsGenerator(void *p) {
      return  p ? new(p) ::CosmicsGenerator : new ::CosmicsGenerator;
   }
   static void *newArray_CosmicsGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::CosmicsGenerator[nElements] : new ::CosmicsGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_CosmicsGenerator(void *p) {
      delete ((::CosmicsGenerator*)p);
   }
   static void deleteArray_CosmicsGenerator(void *p) {
      delete [] ((::CosmicsGenerator*)p);
   }
   static void destruct_CosmicsGenerator(void *p) {
      typedef ::CosmicsGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CosmicsGenerator

//______________________________________________________________________________
void MuDISGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class MuDISGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MuDISGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(MuDISGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void MuDISGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MuDISGenerator.
      TClass *R__cl = ::MuDISGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startZ", &startZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endZ", &endZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iMuon", &iMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dPart", &dPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirst", &fFirst);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MuDISGenerator(void *p) {
      return  p ? new(p) ::MuDISGenerator : new ::MuDISGenerator;
   }
   static void *newArray_MuDISGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::MuDISGenerator[nElements] : new ::MuDISGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuDISGenerator(void *p) {
      delete ((::MuDISGenerator*)p);
   }
   static void deleteArray_MuDISGenerator(void *p) {
      delete [] ((::MuDISGenerator*)p);
   }
   static void destruct_MuDISGenerator(void *p) {
      typedef ::MuDISGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MuDISGenerator

//______________________________________________________________________________
void NuageGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class NuageGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NuageGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(NuageGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void NuageGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NuageGenerator.
      TClass *R__cl = ::NuageGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yvessel", &Yvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xvessel", &Xvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lvessel", &Lvessel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ztarget", &ztarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startZ", &startZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endZ", &endZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startX", &startX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endX", &endX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startY", &startY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endY", &endY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ev", &Ev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxv", &pxv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyv", &pyv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzv", &pzv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "El", &El);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxl", &pxl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyl", &pyl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzl", &pzl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxx", &vtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxy", &vtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxz", &vtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxt", &vtxt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxf[500]", pxf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyf[500]", pyf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzf[500]", pzf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgf[500]", pdgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dVecs", (void*)&dVecs);
      R__insp.InspectMember("vector<TVector3>", (void*)&dVecs, "dVecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boxs", (void*)&boxs);
      R__insp.InspectMember("vector<TVector3>", (void*)&boxs, "boxs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc", &cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nf", &nf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neu", &neu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevents", &fNevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fn", &fn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNuOnly", &fNuOnly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fznu", &fznu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXnu", &fXnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYnu", &fYnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrDz_inner", &fEntrDz_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrDz_outer", &fEntrDz_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrZ_inner", &fEntrZ_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrZ_outer", &fEntrZ_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrA", &fEntrA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrB", &fEntrB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1z", &fL1z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScintDz", &fScintDz);
      FairGenerator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_NuageGenerator(void *p) {
      return  p ? new(p) ::NuageGenerator : new ::NuageGenerator;
   }
   static void *newArray_NuageGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::NuageGenerator[nElements] : new ::NuageGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_NuageGenerator(void *p) {
      delete ((::NuageGenerator*)p);
   }
   static void deleteArray_NuageGenerator(void *p) {
      delete [] ((::NuageGenerator*)p);
   }
   static void destruct_NuageGenerator(void *p) {
      typedef ::NuageGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NuageGenerator

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLPythia_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Pythia.
      typedef ::ROOTShadow::Shadow::Pythia8::Pythia ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Pythia*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", (void*)&sobj->process);
      R__insp.InspectMember("Pythia8::Event", (void*)&sobj->process, "process.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", (void*)&sobj->event);
      R__insp.InspectMember("Pythia8::Event", (void*)&sobj->event, "event.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", (void*)&sobj->info);
      R__insp.InspectMember("Pythia8::Info", (void*)&sobj->info, "info.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "settings", (void*)&sobj->settings);
      R__insp.InspectMember("Pythia8::Settings", (void*)&sobj->settings, "settings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleData", (void*)&sobj->particleData);
      R__insp.InspectMember("Pythia8::ParticleData", (void*)&sobj->particleData, "particleData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm", (void*)&sobj->rndm);
      R__insp.InspectMember("Pythia8::Rndm", (void*)&sobj->rndm, "rndm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "couplings", (void*)&sobj->couplings);
      R__insp.InspectMember("Pythia8::Couplings", (void*)&sobj->couplings, "couplings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slhaInterface", (void*)&sobj->slhaInterface);
      R__insp.InspectMember("Pythia8::SLHAinterface", (void*)&sobj->slhaInterface, "slhaInterface.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonSystems", (void*)&sobj->partonSystems);
      R__insp.InspectMember("Pythia8::PartonSystems", (void*)&sobj->partonSystems, "partonSystems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "merging", (void*)&sobj->merging);
      R__insp.InspectMember("Pythia8::Merging", (void*)&sobj->merging, "merging.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mergingHooksPtr", &sobj->mergingHooksPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmlPath", (void*)&sobj->xmlPath);
      R__insp.InspectMember("string", (void*)&sobj->xmlPath, "xmlPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doProcessLevel", &sobj->doProcessLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doPartonLevel", &sobj->doPartonLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doHadronLevel", &sobj->doHadronLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doDiffraction", &sobj->doDiffraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doResDec", &sobj->doResDec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doFSRinRes", &sobj->doFSRinRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decayRHadrons", &sobj->decayRHadrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "abortIfVeto", &sobj->abortIfVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkEvent", &sobj->checkEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkHistory", &sobj->checkHistory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nErrList", &sobj->nErrList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "epTolErr", &sobj->epTolErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "epTolWarn", &sobj->epTolWarn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isConstructed", &sobj->isConstructed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isUnresolvedA", &sobj->isUnresolvedA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isUnresolvedB", &sobj->isUnresolvedB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showSaV", &sobj->showSaV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showMaD", &sobj->showMaD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idA", &sobj->idA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idB", &sobj->idB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frameType", &sobj->frameType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boostType", &sobj->boostType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCount", &sobj->nCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowLHA", &sobj->nShowLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowInfo", &sobj->nShowInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowProc", &sobj->nShowProc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nShowEvt", &sobj->nShowEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mA", &sobj->mA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mB", &sobj->mB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxA", &sobj->pxA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxB", &sobj->pxB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyA", &sobj->pyA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyB", &sobj->pyB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzA", &sobj->pzA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzB", &sobj->pzB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eA", &sobj->eA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eB", &sobj->eB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzAcm", &sobj->pzAcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzBcm", &sobj->pzBcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCM", &sobj->eCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaZ", &sobj->betaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gammaZ", &sobj->gammaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pAinit", (void*)&sobj->pAinit);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pAinit, "pAinit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pBinit", (void*)&sobj->pBinit);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pBinit, "pBinit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pAnow", (void*)&sobj->pAnow);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pAnow, "pAnow.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pBnow", (void*)&sobj->pBnow);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pBnow, "pBnow.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MfromCM", (void*)&sobj->MfromCM);
      R__insp.InspectMember("Pythia8::RotBstMatrix", (void*)&sobj->MfromCM, "MfromCM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MtoCM", (void*)&sobj->MtoCM);
      R__insp.InspectMember("Pythia8::RotBstMatrix", (void*)&sobj->MtoCM, "MtoCM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nErrEvent", &sobj->nErrEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrId", (void*)&sobj->iErrId);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrId, "iErrId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrCol", (void*)&sobj->iErrCol);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrCol, "iErrCol.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrEpm", (void*)&sobj->iErrEpm);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrEpm, "iErrEpm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrNan", (void*)&sobj->iErrNan);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrNan, "iErrNan.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iErrNanVtx", (void*)&sobj->iErrNanVtx);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iErrNanVtx, "iErrNanVtx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfAPtr", &sobj->pdfAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfBPtr", &sobj->pdfBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfHardAPtr", &sobj->pdfHardAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfHardBPtr", &sobj->pdfHardBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfPomAPtr", &sobj->pdfPomAPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdfPomBPtr", &sobj->pdfPomBPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfA", &sobj->useNewPdfA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfB", &sobj->useNewPdfB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfHard", &sobj->useNewPdfHard);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfPomA", &sobj->useNewPdfPomA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewPdfPomB", &sobj->useNewPdfPomB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamA", (void*)&sobj->beamA);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamA, "beamA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamB", (void*)&sobj->beamB);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamB, "beamB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamPomA", (void*)&sobj->beamPomA);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamPomA, "beamPomA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamPomB", (void*)&sobj->beamPomB);
      R__insp.InspectMember("Pythia8::BeamParticle", (void*)&sobj->beamPomB, "beamPomB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doLHA", &sobj->doLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewLHA", &sobj->useNewLHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhaUpPtr", &sobj->lhaUpPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*decayHandlePtr", &sobj->decayHandlePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "handledParticles", (void*)&sobj->handledParticles);
      R__insp.InspectMember("vector<int>", (void*)&sobj->handledParticles, "handledParticles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*userHooksPtr", &sobj->userHooksPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasUserHooks", &sobj->hasUserHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVetoProcess", &sobj->doVetoProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVetoPartons", &sobj->doVetoPartons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "retryPartonLevel", &sobj->retryPartonLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*beamShapePtr", &sobj->beamShapePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewBeamShape", &sobj->useNewBeamShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doMomentumSpread", &sobj->doMomentumSpread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVertexSpread", &sobj->doVertexSpread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaPtrs", (void*)&sobj->sigmaPtrs);
      R__insp.InspectMember("vector<SigmaProcess*>", (void*)&sobj->sigmaPtrs, "sigmaPtrs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resonancePtrs", (void*)&sobj->resonancePtrs);
      R__insp.InspectMember("vector<ResonanceWidths*>", (void*)&sobj->resonancePtrs, "resonancePtrs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timesDecPtr", &sobj->timesDecPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timesPtr", &sobj->timesPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*spacePtr", &sobj->spacePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewTimes", &sobj->useNewTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNewSpace", &sobj->useNewSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "processLevel", (void*)&sobj->processLevel);
      R__insp.InspectMember("Pythia8::ProcessLevel", (void*)&sobj->processLevel, "processLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonLevel", (void*)&sobj->partonLevel);
      R__insp.InspectMember("Pythia8::PartonLevel", (void*)&sobj->partonLevel, "partonLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trialPartonLevel", (void*)&sobj->trialPartonLevel);
      R__insp.InspectMember("Pythia8::PartonLevel", (void*)&sobj->trialPartonLevel, "trialPartonLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasMergingHooks", &sobj->hasMergingHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasOwnMergingHooks", &sobj->hasOwnMergingHooks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doMerging", &sobj->doMerging);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadronLevel", (void*)&sobj->hadronLevel);
      R__insp.InspectMember("Pythia8::HadronLevel", (void*)&sobj->hadronLevel, "hadronLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaTot", (void*)&sobj->sigmaTot);
      R__insp.InspectMember("Pythia8::SigmaTotal", (void*)&sobj->sigmaTot, "sigmaTot.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rHadrons", (void*)&sobj->rHadrons);
      R__insp.InspectMember("Pythia8::RHadrons", (void*)&sobj->rHadrons, "rHadrons.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLPythia(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Pythia : new ::Pythia8::Pythia;
   }
   static void *newArray_Pythia8cLcLPythia(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Pythia[nElements] : new ::Pythia8::Pythia[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLPythia(void *p) {
      delete ((::Pythia8::Pythia*)p);
   }
   static void deleteArray_Pythia8cLcLPythia(void *p) {
      delete [] ((::Pythia8::Pythia*)p);
   }
   static void destruct_Pythia8cLcLPythia(void *p) {
      typedef ::Pythia8::Pythia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Pythia

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Event.
      typedef ::ROOTShadow::Shadow::Pythia8::Event ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Event*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startColTag", &sobj->startColTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "entry", (void*)&sobj->entry);
      R__insp.InspectMember("vector<Pythia8::Particle>", (void*)&sobj->entry, "entry.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "junction", (void*)&sobj->junction);
      R__insp.InspectMember("vector<Pythia8::Junction>", (void*)&sobj->junction, "junction.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxColTag", &sobj->maxColTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "savedSize", &sobj->savedSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "savedJunctionSize", &sobj->savedJunctionSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSave", &sobj->scaleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSecondSave", &sobj->scaleSecondSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "headerList", (void*)&sobj->headerList);
      R__insp.InspectMember("string", (void*)&sobj->headerList, "headerList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Event : new ::Pythia8::Event;
   }
   static void *newArray_Pythia8cLcLEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Event[nElements] : new ::Pythia8::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLEvent(void *p) {
      delete ((::Pythia8::Event*)p);
   }
   static void deleteArray_Pythia8cLcLEvent(void *p) {
      delete [] ((::Pythia8::Event*)p);
   }
   static void destruct_Pythia8cLcLEvent(void *p) {
      typedef ::Pythia8::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Event

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Info.
      typedef ::ROOTShadow::Shadow::Pythia8::Info ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Info*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idASave", &sobj->idASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idBSave", &sobj->idBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzASave", &sobj->pzASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eASave", &sobj->eASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mASave", &sobj->mASave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzBSave", &sobj->pzBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBSave", &sobj->eBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBSave", &sobj->mBSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCMSave", &sobj->eCMSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sSave", &sobj->sSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowPTmin", &sobj->lowPTmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTry", &sobj->nTry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSel", &sobj->nSel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAcc", &sobj->nAcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigGen", &sobj->sigGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigErr", &sobj->sigErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wtAccSum", &sobj->wtAccSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTryM", (void*)&sobj->nTryM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nTryM, "nTryM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSelM", (void*)&sobj->nSelM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nSelM, "nSelM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAccM", (void*)&sobj->nAccM);
      R__insp.InspectMember("map<int,long>", (void*)&sobj->nAccM, "nAccM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigGenM", (void*)&sobj->sigGenM);
      R__insp.InspectMember("map<int,double>", (void*)&sobj->sigGenM, "sigGenM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigErrM", (void*)&sobj->sigErrM);
      R__insp.InspectMember("map<int,double>", (void*)&sobj->sigErrM, "sigErrM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lhaStrategySave", &sobj->lhaStrategySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a0MPISave", &sobj->a0MPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRes", &sobj->isRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffA", &sobj->isDiffA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffB", &sobj->isDiffB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiffC", &sobj->isDiffC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isND", &sobj->isND);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLH", &sobj->isLH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasSubSave[4]", sobj->hasSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bIsSet", &sobj->bIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evolIsSet", &sobj->evolIsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atEOF", &sobj->atEOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVal1", &sobj->isVal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVal2", &sobj->isVal2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasHistorySave", &sobj->hasHistorySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeSave", &sobj->codeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeSubSave[4]", sobj->codeSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFinalSave", &sobj->nFinalSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFinalSubSave[4]", sobj->nFinalSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTotal", &sobj->nTotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1Save[4]", sobj->id1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2Save[4]", sobj->id2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id1pdfSave[4]", sobj->id1pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id2pdfSave[4]", sobj->id2pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMPISave", &sobj->nMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nISRSave", &sobj->nISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFSRinProcSave", &sobj->nFSRinProcSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFSRinResSave", &sobj->nFSRinResSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1Save[4]", sobj->x1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2Save[4]", sobj->x2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1pdfSave[4]", sobj->x1pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2pdfSave[4]", sobj->x2pdfSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf1Save[4]", sobj->pdf1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdf2Save[4]", sobj->pdf2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2FacSave[4]", sobj->Q2FacSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaEMSave[4]", sobj->alphaEMSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alphaSSave[4]", sobj->alphaSSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2RenSave[4]", sobj->Q2RenSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalupSave[4]", sobj->scalupSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sH[4]", sobj->sH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tH[4]", sobj->tH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uH[4]", sobj->uH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTH[4]", sobj->pTH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3H[4]", sobj->m3H);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m4H[4]", sobj->m4H);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaH[4]", sobj->thetaH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiH[4]", sobj->phiH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightSave", &sobj->weightSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bMPISave", &sobj->bMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enhanceMPISave", &sobj->enhanceMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxMPISave", &sobj->pTmaxMPISave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxISRSave", &sobj->pTmaxISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTmaxFSRSave", &sobj->pTmaxFSRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTnowSave", &sobj->pTnowSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zNowISRSave", &sobj->zNowISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT2NowISRSave", &sobj->pT2NowISRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSave", (void*)&sobj->nameSave);
      R__insp.InspectMember("string", (void*)&sobj->nameSave, "nameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSubSave[4]", sobj->nameSubSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codeMPISave", (void*)&sobj->codeMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->codeMPISave, "codeMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iAMPISave", (void*)&sobj->iAMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iAMPISave, "iAMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBMPISave", (void*)&sobj->iBMPISave);
      R__insp.InspectMember("vector<int>", (void*)&sobj->iBMPISave, "iBMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTMPISave", (void*)&sobj->pTMPISave);
      R__insp.InspectMember("vector<double>", (void*)&sobj->pTMPISave, "pTMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eMPISave", (void*)&sobj->eMPISave);
      R__insp.InspectMember("vector<double>", (void*)&sobj->eMPISave, "eMPISave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counters[50]", sobj->counters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "messages", (void*)&sobj->messages);
      R__insp.InspectMember("map<string,int>", (void*)&sobj->messages, "messages.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "headers", (void*)&sobj->headers);
      R__insp.InspectMember("map<string,string>", (void*)&sobj->headers, "headers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightCKKWLSave", &sobj->weightCKKWLSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weightFIRSTSave", &sobj->weightFIRSTSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Info : new ::Pythia8::Info;
   }
   static void *newArray_Pythia8cLcLInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Info[nElements] : new ::Pythia8::Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLInfo(void *p) {
      delete ((::Pythia8::Info*)p);
   }
   static void deleteArray_Pythia8cLcLInfo(void *p) {
      delete [] ((::Pythia8::Info*)p);
   }
   static void destruct_Pythia8cLcLInfo(void *p) {
      typedef ::Pythia8::Info current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Info

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLSettings_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Settings.
      typedef ::ROOTShadow::Shadow::Pythia8::Settings ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Settings*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flags", (void*)&sobj->flags);
      R__insp.InspectMember("map<string,Flag>", (void*)&sobj->flags, "flags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modes", (void*)&sobj->modes);
      R__insp.InspectMember("map<string,Mode>", (void*)&sobj->modes, "modes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parms", (void*)&sobj->parms);
      R__insp.InspectMember("map<string,Parm>", (void*)&sobj->parms, "parms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "words", (void*)&sobj->words);
      R__insp.InspectMember("map<string,Word>", (void*)&sobj->words, "words.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvecs", (void*)&sobj->mvecs);
      R__insp.InspectMember("map<string,MVec>", (void*)&sobj->mvecs, "mvecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pvecs", (void*)&sobj->pvecs);
      R__insp.InspectMember("map<string,PVec>", (void*)&sobj->pvecs, "pvecs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readingFailedSave", &sobj->readingFailedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLSettings(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Settings : new ::Pythia8::Settings;
   }
   static void *newArray_Pythia8cLcLSettings(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Settings[nElements] : new ::Pythia8::Settings[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLSettings(void *p) {
      delete ((::Pythia8::Settings*)p);
   }
   static void deleteArray_Pythia8cLcLSettings(void *p) {
      delete [] ((::Pythia8::Settings*)p);
   }
   static void destruct_Pythia8cLcLSettings(void *p) {
      typedef ::Pythia8::Settings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Settings

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticleData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ParticleData.
      typedef ::ROOTShadow::Shadow::Pythia8::ParticleData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeBreitWigner", &sobj->modeBreitWigner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEnhanceBW", &sobj->maxEnhanceBW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQRun[7]", sobj->mQRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Lambda5Run", &sobj->Lambda5Run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*infoPtr", &sobj->infoPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*settingsPtr", &sobj->settingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rndmPtr", &sobj->rndmPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*couplingsPtr", &sobj->couplingsPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdt", (void*)&sobj->pdt);
      R__insp.InspectMember("map<int,ParticleDataEntry>", (void*)&sobj->pdt, "pdt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particlePtr", &sobj->particlePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInit", &sobj->isInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readingFailedSave", &sobj->readingFailedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticleData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleData : new ::Pythia8::ParticleData;
   }
   static void *newArray_Pythia8cLcLParticleData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleData[nElements] : new ::Pythia8::ParticleData[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticleData(void *p) {
      delete ((::Pythia8::ParticleData*)p);
   }
   static void deleteArray_Pythia8cLcLParticleData(void *p) {
      delete [] ((::Pythia8::ParticleData*)p);
   }
   static void destruct_Pythia8cLcLParticleData(void *p) {
      typedef ::Pythia8::ParticleData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ParticleData

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticleDataEntry_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::ParticleDataEntry.
      typedef ::ROOTShadow::Shadow::Pythia8::ParticleDataEntry ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::ParticleDataEntry*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idSave", &sobj->idSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nameSave", (void*)&sobj->nameSave);
      R__insp.InspectMember("string", (void*)&sobj->nameSave, "nameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antiNameSave", (void*)&sobj->antiNameSave);
      R__insp.InspectMember("string", (void*)&sobj->antiNameSave, "antiNameSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spinTypeSave", &sobj->spinTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeTypeSave", &sobj->chargeTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colTypeSave", &sobj->colTypeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m0Save", &sobj->m0Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWidthSave", &sobj->mWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinSave", &sobj->mMinSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxSave", &sobj->mMaxSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tau0Save", &sobj->tau0Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "constituentMassSave", &sobj->constituentMassSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasAntiSave", &sobj->hasAntiSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isResonanceSave", &sobj->isResonanceSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mayDecaySave", &sobj->mayDecaySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doExternalDecaySave", &sobj->doExternalDecaySave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isVisibleSave", &sobj->isVisibleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doForceWidthSave", &sobj->doForceWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasChangedSave", &sobj->hasChangedSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeBWnow", &sobj->modeBWnow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atanLow", &sobj->atanLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atanDif", &sobj->atanDif);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThr", &sobj->mThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channels", (void*)&sobj->channels);
      R__insp.InspectMember("vector<DecayChannel>", (void*)&sobj->channels, "channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentBRSum", &sobj->currentBRSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*resonancePtr", &sobj->resonancePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleDataPtr", &sobj->particleDataPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticleDataEntry(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleDataEntry : new ::Pythia8::ParticleDataEntry;
   }
   static void *newArray_Pythia8cLcLParticleDataEntry(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::ParticleDataEntry[nElements] : new ::Pythia8::ParticleDataEntry[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticleDataEntry(void *p) {
      delete ((::Pythia8::ParticleDataEntry*)p);
   }
   static void deleteArray_Pythia8cLcLParticleDataEntry(void *p) {
      delete [] ((::Pythia8::ParticleDataEntry*)p);
   }
   static void destruct_Pythia8cLcLParticleDataEntry(void *p) {
      typedef ::Pythia8::ParticleDataEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::ParticleDataEntry

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLDecayChannel_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::DecayChannel.
      typedef ::ROOTShadow::Shadow::Pythia8::DecayChannel ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::DecayChannel*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onModeSave", &sobj->onModeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bRatioSave", &sobj->bRatioSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentBRSave", &sobj->currentBRSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onShellWidthSave", &sobj->onShellWidthSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openSecPos", &sobj->openSecPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "openSecNeg", &sobj->openSecNeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meModeSave", &sobj->meModeSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProd", &sobj->nProd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prod[8]", sobj->prod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasChangedSave", &sobj->hasChangedSave);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLDecayChannel(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::DecayChannel : new ::Pythia8::DecayChannel;
   }
   static void *newArray_Pythia8cLcLDecayChannel(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::DecayChannel[nElements] : new ::Pythia8::DecayChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLDecayChannel(void *p) {
      delete ((::Pythia8::DecayChannel*)p);
   }
   static void deleteArray_Pythia8cLcLDecayChannel(void *p) {
      delete [] ((::Pythia8::DecayChannel*)p);
   }
   static void destruct_Pythia8cLcLDecayChannel(void *p) {
      typedef ::Pythia8::DecayChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::DecayChannel

//______________________________________________________________________________
namespace ROOTDict {
   void Pythia8cLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pythia8::Particle.
      typedef ::ROOTShadow::Shadow::Pythia8::Particle ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Pythia8::Particle*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idSave", &sobj->idSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statusSave", &sobj->statusSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mother1Save", &sobj->mother1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mother2Save", &sobj->mother2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughter1Save", &sobj->daughter1Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughter2Save", &sobj->daughter2Save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colSave", &sobj->colSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "acolSave", &sobj->acolSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pSave", (void*)&sobj->pSave);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->pSave, "pSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSave", &sobj->mSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleSave", &sobj->scaleSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polSave", &sobj->polSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasVertexSave", &sobj->hasVertexSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vProdSave", (void*)&sobj->vProdSave);
      R__insp.InspectMember("Pythia8::Vec4", (void*)&sobj->vProdSave, "vProdSave.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tauSave", &sobj->tauSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdePtr", &sobj->pdePtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtPtr", &sobj->evtPtr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pythia8cLcLParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Particle : new ::Pythia8::Particle;
   }
   static void *newArray_Pythia8cLcLParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pythia8::Particle[nElements] : new ::Pythia8::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pythia8cLcLParticle(void *p) {
      delete ((::Pythia8::Particle*)p);
   }
   static void deleteArray_Pythia8cLcLParticle(void *p) {
      delete [] ((::Pythia8::Particle*)p);
   }
   static void destruct_Pythia8cLcLParticle(void *p) {
      typedef ::Pythia8::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Pythia8::Particle

namespace ROOTDict {
   void maplEintcOPythia8cLcLParticleDataEntrygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary();
   static void *new_maplEintcOPythia8cLcLParticleDataEntrygR(void *p = 0);
   static void *newArray_maplEintcOPythia8cLcLParticleDataEntrygR(Long_t size, void *p);
   static void delete_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);
   static void destruct_maplEintcOPythia8cLcLParticleDataEntrygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,Pythia8::ParticleDataEntry>*)
   {
      map<int,Pythia8::ParticleDataEntry> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,Pythia8::ParticleDataEntry>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,Pythia8::ParticleDataEntry>", -2, "prec_stl/map", 63,
                  typeid(map<int,Pythia8::ParticleDataEntry>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,Pythia8::ParticleDataEntry>) );
      instance.SetNew(&new_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetNewArray(&newArray_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDelete(&delete_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDeleteArray(&deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.SetDestructor(&destruct_maplEintcOPythia8cLcLParticleDataEntrygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,Pythia8::ParticleDataEntry> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,Pythia8::ParticleDataEntry>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOPythia8cLcLParticleDataEntrygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,Pythia8::ParticleDataEntry>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Pythia8::ParticleDataEntry> : new map<int,Pythia8::ParticleDataEntry>;
   }
   static void *newArray_maplEintcOPythia8cLcLParticleDataEntrygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Pythia8::ParticleDataEntry>[nElements] : new map<int,Pythia8::ParticleDataEntry>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete ((map<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void deleteArray_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      delete [] ((map<int,Pythia8::ParticleDataEntry>*)p);
   }
   static void destruct_maplEintcOPythia8cLcLParticleDataEntrygR(void *p) {
      typedef map<int,Pythia8::ParticleDataEntry> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,Pythia8::ParticleDataEntry>

namespace ROOTDict {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,double>

namespace ROOTDict {
   void maplEintcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOlonggR_Dictionary();
   static void *new_maplEintcOlonggR(void *p = 0);
   static void *newArray_maplEintcOlonggR(Long_t size, void *p);
   static void delete_maplEintcOlonggR(void *p);
   static void deleteArray_maplEintcOlonggR(void *p);
   static void destruct_maplEintcOlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,long>*)
   {
      map<int,long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,long>", -2, "prec_stl/map", 63,
                  typeid(map<int,long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOlonggR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,long>) );
      instance.SetNew(&new_maplEintcOlonggR);
      instance.SetNewArray(&newArray_maplEintcOlonggR);
      instance.SetDelete(&delete_maplEintcOlonggR);
      instance.SetDeleteArray(&deleteArray_maplEintcOlonggR);
      instance.SetDestructor(&destruct_maplEintcOlonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,long> : new map<int,long>;
   }
   static void *newArray_maplEintcOlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,long>[nElements] : new map<int,long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOlonggR(void *p) {
      delete ((map<int,long>*)p);
   }
   static void deleteArray_maplEintcOlonggR(void *p) {
      delete [] ((map<int,long>*)p);
   }
   static void destruct_maplEintcOlonggR(void *p) {
      typedef map<int,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,long>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLFlaggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLFlaggR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLFlaggR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLFlaggR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLFlaggR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLFlaggR(void *p);
   static void destruct_maplEstringcOPythia8cLcLFlaggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Flag>*)
   {
      map<string,Pythia8::Flag> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Flag>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Flag>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Flag>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLFlaggR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Flag>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLFlaggR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLFlaggR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLFlaggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Flag> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Flag>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLFlaggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Flag>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLFlaggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Flag> : new map<string,Pythia8::Flag>;
   }
   static void *newArray_maplEstringcOPythia8cLcLFlaggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Flag>[nElements] : new map<string,Pythia8::Flag>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLFlaggR(void *p) {
      delete ((map<string,Pythia8::Flag>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLFlaggR(void *p) {
      delete [] ((map<string,Pythia8::Flag>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLFlaggR(void *p) {
      typedef map<string,Pythia8::Flag> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Flag>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLMVecgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLMVecgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLMVecgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLMVecgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLMVecgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLMVecgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLMVecgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::MVec>*)
   {
      map<string,Pythia8::MVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::MVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::MVec>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::MVec>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLMVecgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::MVec>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLMVecgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLMVecgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLMVecgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::MVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::MVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLMVecgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::MVec>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLMVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::MVec> : new map<string,Pythia8::MVec>;
   }
   static void *newArray_maplEstringcOPythia8cLcLMVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::MVec>[nElements] : new map<string,Pythia8::MVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLMVecgR(void *p) {
      delete ((map<string,Pythia8::MVec>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLMVecgR(void *p) {
      delete [] ((map<string,Pythia8::MVec>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLMVecgR(void *p) {
      typedef map<string,Pythia8::MVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::MVec>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLModegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLModegR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLModegR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLModegR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLModegR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLModegR(void *p);
   static void destruct_maplEstringcOPythia8cLcLModegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Mode>*)
   {
      map<string,Pythia8::Mode> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Mode>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Mode>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Mode>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLModegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Mode>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLModegR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLModegR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLModegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLModegR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLModegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Mode> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Mode>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLModegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Mode>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLModegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Mode> : new map<string,Pythia8::Mode>;
   }
   static void *newArray_maplEstringcOPythia8cLcLModegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Mode>[nElements] : new map<string,Pythia8::Mode>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLModegR(void *p) {
      delete ((map<string,Pythia8::Mode>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLModegR(void *p) {
      delete [] ((map<string,Pythia8::Mode>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLModegR(void *p) {
      typedef map<string,Pythia8::Mode> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Mode>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLPVecgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLPVecgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLPVecgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLPVecgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLPVecgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLPVecgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLPVecgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::PVec>*)
   {
      map<string,Pythia8::PVec> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::PVec>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::PVec>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::PVec>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLPVecgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::PVec>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLPVecgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLPVecgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLPVecgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::PVec> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::PVec>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLPVecgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::PVec>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLPVecgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::PVec> : new map<string,Pythia8::PVec>;
   }
   static void *newArray_maplEstringcOPythia8cLcLPVecgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::PVec>[nElements] : new map<string,Pythia8::PVec>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLPVecgR(void *p) {
      delete ((map<string,Pythia8::PVec>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLPVecgR(void *p) {
      delete [] ((map<string,Pythia8::PVec>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLPVecgR(void *p) {
      typedef map<string,Pythia8::PVec> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::PVec>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLParmgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLParmgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLParmgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLParmgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLParmgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLParmgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLParmgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Parm>*)
   {
      map<string,Pythia8::Parm> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Parm>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Parm>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Parm>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLParmgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Parm>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLParmgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLParmgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLParmgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLParmgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLParmgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Parm> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Parm>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLParmgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Parm>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLParmgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Parm> : new map<string,Pythia8::Parm>;
   }
   static void *newArray_maplEstringcOPythia8cLcLParmgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Parm>[nElements] : new map<string,Pythia8::Parm>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLParmgR(void *p) {
      delete ((map<string,Pythia8::Parm>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLParmgR(void *p) {
      delete [] ((map<string,Pythia8::Parm>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLParmgR(void *p) {
      typedef map<string,Pythia8::Parm> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Parm>

namespace ROOTDict {
   void maplEstringcOPythia8cLcLWordgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOPythia8cLcLWordgR_Dictionary();
   static void *new_maplEstringcOPythia8cLcLWordgR(void *p = 0);
   static void *newArray_maplEstringcOPythia8cLcLWordgR(Long_t size, void *p);
   static void delete_maplEstringcOPythia8cLcLWordgR(void *p);
   static void deleteArray_maplEstringcOPythia8cLcLWordgR(void *p);
   static void destruct_maplEstringcOPythia8cLcLWordgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,Pythia8::Word>*)
   {
      map<string,Pythia8::Word> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,Pythia8::Word>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,Pythia8::Word>", -2, "prec_stl/map", 63,
                  typeid(map<string,Pythia8::Word>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOPythia8cLcLWordgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,Pythia8::Word>) );
      instance.SetNew(&new_maplEstringcOPythia8cLcLWordgR);
      instance.SetNewArray(&newArray_maplEstringcOPythia8cLcLWordgR);
      instance.SetDelete(&delete_maplEstringcOPythia8cLcLWordgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOPythia8cLcLWordgR);
      instance.SetDestructor(&destruct_maplEstringcOPythia8cLcLWordgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,Pythia8::Word> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,Pythia8::Word>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOPythia8cLcLWordgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,Pythia8::Word>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOPythia8cLcLWordgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Word> : new map<string,Pythia8::Word>;
   }
   static void *newArray_maplEstringcOPythia8cLcLWordgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,Pythia8::Word>[nElements] : new map<string,Pythia8::Word>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOPythia8cLcLWordgR(void *p) {
      delete ((map<string,Pythia8::Word>*)p);
   }
   static void deleteArray_maplEstringcOPythia8cLcLWordgR(void *p) {
      delete [] ((map<string,Pythia8::Word>*)p);
   }
   static void destruct_maplEstringcOPythia8cLcLWordgR(void *p) {
      typedef map<string,Pythia8::Word> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,Pythia8::Word>

namespace ROOTDict {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,int>

namespace ROOTDict {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,string>

namespace ROOTDict {
   void vectorlEPythia8cLcLDecayChannelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLDecayChannelgR_Dictionary();
   static void *new_vectorlEPythia8cLcLDecayChannelgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLDecayChannelgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLDecayChannelgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLDecayChannelgR(void *p);
   static void destruct_vectorlEPythia8cLcLDecayChannelgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::DecayChannel>*)
   {
      vector<Pythia8::DecayChannel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::DecayChannel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::DecayChannel>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::DecayChannel>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLDecayChannelgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::DecayChannel>) );
      instance.SetNew(&new_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLDecayChannelgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLDecayChannelgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::DecayChannel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::DecayChannel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLDecayChannelgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::DecayChannel>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::DecayChannel> : new vector<Pythia8::DecayChannel>;
   }
   static void *newArray_vectorlEPythia8cLcLDecayChannelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::DecayChannel>[nElements] : new vector<Pythia8::DecayChannel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      delete ((vector<Pythia8::DecayChannel>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      delete [] ((vector<Pythia8::DecayChannel>*)p);
   }
   static void destruct_vectorlEPythia8cLcLDecayChannelgR(void *p) {
      typedef vector<Pythia8::DecayChannel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::DecayChannel>

namespace ROOTDict {
   void vectorlEPythia8cLcLJunctiongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLJunctiongR_Dictionary();
   static void *new_vectorlEPythia8cLcLJunctiongR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLJunctiongR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLJunctiongR(void *p);
   static void deleteArray_vectorlEPythia8cLcLJunctiongR(void *p);
   static void destruct_vectorlEPythia8cLcLJunctiongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::Junction>*)
   {
      vector<Pythia8::Junction> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::Junction>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::Junction>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::Junction>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLJunctiongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::Junction>) );
      instance.SetNew(&new_vectorlEPythia8cLcLJunctiongR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLJunctiongR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLJunctiongR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLJunctiongR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLJunctiongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::Junction> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::Junction>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLJunctiongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::Junction>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLJunctiongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Junction> : new vector<Pythia8::Junction>;
   }
   static void *newArray_vectorlEPythia8cLcLJunctiongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Junction>[nElements] : new vector<Pythia8::Junction>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLJunctiongR(void *p) {
      delete ((vector<Pythia8::Junction>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLJunctiongR(void *p) {
      delete [] ((vector<Pythia8::Junction>*)p);
   }
   static void destruct_vectorlEPythia8cLcLJunctiongR(void *p) {
      typedef vector<Pythia8::Junction> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::Junction>

namespace ROOTDict {
   void vectorlEPythia8cLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLParticlegR_Dictionary();
   static void *new_vectorlEPythia8cLcLParticlegR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLParticlegR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLParticlegR(void *p);
   static void deleteArray_vectorlEPythia8cLcLParticlegR(void *p);
   static void destruct_vectorlEPythia8cLcLParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::Particle>*)
   {
      vector<Pythia8::Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::Particle>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::Particle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::Particle>) );
      instance.SetNew(&new_vectorlEPythia8cLcLParticlegR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLParticlegR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLParticlegR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::Particle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Particle> : new vector<Pythia8::Particle>;
   }
   static void *newArray_vectorlEPythia8cLcLParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::Particle>[nElements] : new vector<Pythia8::Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLParticlegR(void *p) {
      delete ((vector<Pythia8::Particle>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLParticlegR(void *p) {
      delete [] ((vector<Pythia8::Particle>*)p);
   }
   static void destruct_vectorlEPythia8cLcLParticlegR(void *p) {
      typedef vector<Pythia8::Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::Particle>

namespace ROOTDict {
   void vectorlEPythia8cLcLResonanceWidthsmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary();
   static void *new_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsmUgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);
   static void destruct_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::ResonanceWidths*>*)
   {
      vector<Pythia8::ResonanceWidths*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::ResonanceWidths*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::ResonanceWidths*>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::ResonanceWidths*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::ResonanceWidths*>) );
      instance.SetNew(&new_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLResonanceWidthsmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::ResonanceWidths*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLResonanceWidthsmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::ResonanceWidths*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths*> : new vector<Pythia8::ResonanceWidths*>;
   }
   static void *newArray_vectorlEPythia8cLcLResonanceWidthsmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::ResonanceWidths*>[nElements] : new vector<Pythia8::ResonanceWidths*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      delete ((vector<Pythia8::ResonanceWidths*>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      delete [] ((vector<Pythia8::ResonanceWidths*>*)p);
   }
   static void destruct_vectorlEPythia8cLcLResonanceWidthsmUgR(void *p) {
      typedef vector<Pythia8::ResonanceWidths*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::ResonanceWidths*>

namespace ROOTDict {
   void vectorlEPythia8cLcLSigmaProcessmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary();
   static void *new_vectorlEPythia8cLcLSigmaProcessmUgR(void *p = 0);
   static void *newArray_vectorlEPythia8cLcLSigmaProcessmUgR(Long_t size, void *p);
   static void delete_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);
   static void deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);
   static void destruct_vectorlEPythia8cLcLSigmaProcessmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Pythia8::SigmaProcess*>*)
   {
      vector<Pythia8::SigmaProcess*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Pythia8::SigmaProcess*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Pythia8::SigmaProcess*>", -2, "prec_stl/vector", 49,
                  typeid(vector<Pythia8::SigmaProcess*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Pythia8::SigmaProcess*>) );
      instance.SetNew(&new_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetNewArray(&newArray_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDelete(&delete_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.SetDestructor(&destruct_vectorlEPythia8cLcLSigmaProcessmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Pythia8::SigmaProcess*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Pythia8::SigmaProcess*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPythia8cLcLSigmaProcessmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Pythia8::SigmaProcess*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::SigmaProcess*> : new vector<Pythia8::SigmaProcess*>;
   }
   static void *newArray_vectorlEPythia8cLcLSigmaProcessmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Pythia8::SigmaProcess*>[nElements] : new vector<Pythia8::SigmaProcess*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      delete ((vector<Pythia8::SigmaProcess*>*)p);
   }
   static void deleteArray_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      delete [] ((vector<Pythia8::SigmaProcess*>*)p);
   }
   static void destruct_vectorlEPythia8cLcLSigmaProcessmUgR(void *p) {
      typedef vector<Pythia8::SigmaProcess*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Pythia8::SigmaProcess*>

namespace ROOTDict {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TVector3>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* /input/FairShipRun/shipgen/G__ShipGenDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__ShipGenDict();

extern "C" void G__set_cpp_environmentG__ShipGenDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Pythia6Generator.h");
  G__add_compiledheader("tPythia6Generator.h");
  G__add_compiledheader("Pythia8Generator.h");
  G__add_compiledheader("HNLPythia8Generator.h");
  G__add_compiledheader("GenieGenerator.h");
  G__add_compiledheader("NuageGenerator.h");
  G__add_compiledheader("NtupleGenerator.h");
  G__add_compiledheader("MuonBackGenerator.h");
  G__add_compiledheader("CosmicsGenerator.h");
  G__add_compiledheader("MuDISGenerator.h");
  G__cpp_reset_tagtableG__ShipGenDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__ShipGenDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Pythia6Generator */
static int G__G__ShipGenDict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia6Generator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia6Generator[n];
     } else {
       p = new((void*) gvp) Pythia6Generator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia6Generator;
     } else {
       p = new((void*) gvp) Pythia6Generator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia6Generator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia6Generator((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Pythia6Generator((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia6Generator*) G__getstructoffset())->SetVerbose((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Pythia6Generator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia6Generator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Pythia6Generator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Pythia6Generator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia6Generator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia6Generator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pythia6Generator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia6Generator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pythia6Generator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia6Generator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia6Generator(*(Pythia6Generator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia6Generator G__TPythia6Generator;
static int G__G__ShipGenDict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia6Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia6Generator*) (soff+(sizeof(Pythia6Generator)*i)))->~G__TPythia6Generator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia6Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia6Generator*) (soff))->~G__TPythia6Generator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tPythia6Generator */
static int G__G__ShipGenDict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tPythia6Generator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tPythia6Generator[n];
     } else {
       p = new((void*) gvp) tPythia6Generator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tPythia6Generator;
     } else {
       p = new((void*) gvp) tPythia6Generator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tPythia6Generator*) G__getstructoffset())->SetMom((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tPythia6Generator*) G__getstructoffset())->SetTarget(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tPythia6Generator*) G__getstructoffset())->UseDeepCopy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((tPythia6Generator*) G__getstructoffset())->getPyint5_XSEC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((tPythia6Generator*) G__getstructoffset())->getPyint5_NGEN((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((tPythia6Generator*) G__getstructoffset())->getPyint5_NGENPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) tPythia6Generator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tPythia6Generator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) tPythia6Generator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tPythia6Generator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tPythia6Generator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tPythia6Generator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tPythia6Generator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tPythia6Generator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tPythia6Generator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   tPythia6Generator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new tPythia6Generator(*(tPythia6Generator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tPythia6Generator G__TtPythia6Generator;
static int G__G__ShipGenDict_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tPythia6Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tPythia6Generator*) (soff+(sizeof(tPythia6Generator)*i)))->~G__TtPythia6Generator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tPythia6Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tPythia6Generator*) (soff))->~G__TtPythia6Generator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Info */
static int G__G__ShipGenDict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Info[n];
     } else {
       p = new((void*) gvp) Pythia8::Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Info;
     } else {
       p = new((void*) gvp) Pythia8::Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Pythia8::Info*) G__getstructoffset())->list(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const Pythia8::Info*) G__getstructoffset())->list();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->idA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->idB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pzA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pzB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eCM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->s());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->tooLowPTmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isResolved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isDiffractiveC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isNonDiffractive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isMinBias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isLHA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->atEndOfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->hasSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->hasSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->nameSub((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Info*) G__getstructoffset())->nameSub();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinalSub((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFinalSub());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->y((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->y());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tau((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tau());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id1pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->id2pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x1pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2pdf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->x2pdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf2((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pdf2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QFac((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QFac());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Fac((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Fac());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isValence1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Info*) G__getstructoffset())->isValence2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaS((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaEM((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->alphaEM());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QRen((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->QRen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Ren((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->Q2Ren());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->scalup((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->scalup());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->sHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->sHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->tHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->uHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->uHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pT2Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pT2Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m3Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m3Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m4Hat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->m4Hat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->thetaHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->thetaHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->phiHat((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->phiHat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->weight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->weightSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->lhaStrategy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFSRinProc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nFSRinRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTmaxFSR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTnow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->a0MPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->bMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->enhanceMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->eMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->nMPI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->codeMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->pTMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->iAMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->iBMPI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Info*) G__getstructoffset())->codesHard();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nTried((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nTried());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nSelected((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nSelected());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nAccepted((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((Pythia8::Info*) G__getstructoffset())->nAccepted());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaGen((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaGen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaErr((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->sigmaErr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Info*) G__getstructoffset())->getCounter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->setCounter((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->setCounter((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->addCounter((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->addCounter((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->errorReset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), *(ostream*) libp->para[3].ref);
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->errorMsg(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Info*) G__getstructoffset())->errorTotalNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Info*) G__getstructoffset())->errorStatistics(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Info*) G__getstructoffset())->errorStatistics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setTooLowPTmin((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setValence((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->hasHistory((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Info*) G__getstructoffset())->hasHistory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->zNowISR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->zNowISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->pT2NowISR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Info*) G__getstructoffset())->pT2NowISR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->getWeightCKKWL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setWeightCKKWL((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mergingWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->mergingWeightNLO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Info*) G__getstructoffset())->getWeightFIRST());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Info*) G__getstructoffset())->setWeightFIRST((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Info*) G__getstructoffset())->header(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_560_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((Pythia8::Info*) G__getstructoffset())->headerKeys();
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_560_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Info(*(Pythia8::Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Info G__TPythia8cLcLInfo;
static int G__G__ShipGenDict_560_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Info*) (soff+(sizeof(Pythia8::Info)*i)))->~G__TPythia8cLcLInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Info*) (soff))->~G__TPythia8cLcLInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ShipGenDict_560_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Info* dest = (Pythia8::Info*) G__getstructoffset();
   *dest = *(Pythia8::Info*) libp->para[0].ref;
   const Pythia8::Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Settings */
static int G__G__ShipGenDict_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Settings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Settings[n];
     } else {
       p = new((void*) gvp) Pythia8::Settings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Settings;
     } else {
       p = new((void*) gvp) Pythia8::Settings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->initPtr((Pythia8::Info*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->reInit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->readingFailed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*(ostream*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile(*(ostream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->writeFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->listAll(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Settings*) G__getstructoffset())->listAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->listChanged(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Settings*) G__getstructoffset())->listChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Settings*) G__getstructoffset())->list(*((string*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Settings*) G__getstructoffset())->list(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isFlag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isMode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isParm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isWord(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isMVec(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->isPVec(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addFlag(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addMode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addParm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addWord(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addMVec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->addPVec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Settings*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Settings*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Settings*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Settings*) G__getstructoffset())->mvec(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Pythia8::Settings*) G__getstructoffset())->pvec(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Settings*) G__getstructoffset())->flagDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Settings*) G__getstructoffset())->modeDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Settings*) G__getstructoffset())->parmDefault(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Settings*) G__getstructoffset())->wordDefault(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Pythia8::Settings*) G__getstructoffset())->mvecDefault(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Pythia8::Settings*) G__getstructoffset())->pvecDefault(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Flag>* pobj;
         map<string,Flag> xobj = ((Pythia8::Settings*) G__getstructoffset())->getFlagMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Flag>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Mode>* pobj;
         map<string,Mode> xobj = ((Pythia8::Settings*) G__getstructoffset())->getModeMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Mode>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Parm>* pobj;
         map<string,Parm> xobj = ((Pythia8::Settings*) G__getstructoffset())->getParmMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Parm>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,Word>* pobj;
         map<string,Word> xobj = ((Pythia8::Settings*) G__getstructoffset())->getWordMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,Word>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,MVec>* pobj;
         map<string,MVec> xobj = ((Pythia8::Settings*) G__getstructoffset())->getMVecMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,MVec>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,PVec>* pobj;
         map<string,PVec> xobj = ((Pythia8::Settings*) G__getstructoffset())->getPVecMap(*((string*) G__int(libp->para[0])));
         pobj = new map<string,PVec>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->mvec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->pvec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceMode(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceParm(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forceMVec(*((string*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->forcePVec(*((string*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetFlag(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetMode(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetParm(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetWord(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetMVec(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_600_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Settings*) G__getstructoffset())->resetPVec(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_600_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::Settings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::Settings(*(Pythia8::Settings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Settings G__TPythia8cLcLSettings;
static int G__G__ShipGenDict_600_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Settings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Settings*) (soff+(sizeof(Pythia8::Settings)*i)))->~G__TPythia8cLcLSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Settings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Settings*) (soff))->~G__TPythia8cLcLSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ShipGenDict_600_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Settings* dest = (Pythia8::Settings*) G__getstructoffset();
   *dest = *(Pythia8::Settings*) libp->para[0].ref;
   const Pythia8::Settings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ParticleData */
static int G__G__ShipGenDict_647_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleData[n];
     } else {
       p = new((void*) gvp) Pythia8::ParticleData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleData;
     } else {
       p = new((void*) gvp) Pythia8::ParticleData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->initPtr((Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::Rndm*) G__int(libp->para[2]), (Pythia8::Couplings*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->init(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->reInit(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->initWidths(*((vector<ResonanceWidths*>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readXML(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readXML(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->listXML(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readFF(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readFF(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->listFF(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->readingFailed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listAll(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->listAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged((bool) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->listChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref);
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->list();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->list(*((vector<int>*) G__int(libp->para[0])), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->list(*((vector<int>*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable((int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->checkTable((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->addParticle((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleData*) G__getstructoffset())->setAll((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->nextId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->name((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->antiName((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->names((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->spinType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->chargeType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->colType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->m0((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mMin((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mMax((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->tau0((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->isResonance((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->mayDecay((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->doExternalDecay((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->isVisible((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->doForceWidth((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->hasChanged((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->hasAnti((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::ParticleData*) G__getstructoffset())->name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->spinType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->chargeType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->charge((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->colType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mWidth((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mMin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0Min((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->m0Max((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->tau0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isResonance((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->mayDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->doExternalDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isVisible((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->doForceWidth((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->hasChanged((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->useBreitWigner((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->constituentMass((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mSel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->mRun((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->canDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isGluon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isDiquark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isParton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isMeson((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isBaryon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::ParticleData*) G__getstructoffset())->isOctetHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->heaviestQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::ParticleData*) G__getstructoffset())->baryonNumberType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleData*) G__getstructoffset())->rescaleBR((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleData*) G__getstructoffset())->rescaleBR((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->setResonancePtr((int) G__int(libp->para[0]), (Pythia8::ResonanceWidths*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleData*) G__getstructoffset())->resInit((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthRescaleFactor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleData*) G__getstructoffset())->resWidthChan((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_647_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Pythia8::ParticleData*) G__getstructoffset())->particleDataEntryPtr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_647_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ParticleData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ParticleData(*(Pythia8::ParticleData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ParticleData G__TPythia8cLcLParticleData;
static int G__G__ShipGenDict_647_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ParticleData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ParticleData*) (soff+(sizeof(Pythia8::ParticleData)*i)))->~G__TPythia8cLcLParticleData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ParticleData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ParticleData*) (soff))->~G__TPythia8cLcLParticleData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ShipGenDict_647_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleData* dest = (Pythia8::ParticleData*) G__getstructoffset();
   *dest = *(Pythia8::ParticleData*) libp->para[0].ref;
   const Pythia8::ParticleData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::DecayChannel */
static int G__G__ShipGenDict_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::DecayChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::DecayChannel((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::DecayChannel((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::DecayChannel[n];
       } else {
         p = new((void*) gvp) Pythia8::DecayChannel[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::DecayChannel;
       } else {
         p = new((void*) gvp) Pythia8::DecayChannel;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::DecayChannel*) G__getstructoffset())->bRatio((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::DecayChannel*) G__getstructoffset())->bRatio((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->rescaleBR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->meMode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->multiplicity((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->product((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->setHasChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->onMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->bRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->meMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->multiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->product((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::DecayChannel*) G__getstructoffset())->contains((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->currentBR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->currentBR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onShellWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->onShellWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->onShellWidthFactor((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::DecayChannel*) G__getstructoffset())->openSec((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_651_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::DecayChannel*) G__getstructoffset())->openSec((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_651_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::DecayChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::DecayChannel(*(Pythia8::DecayChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::DecayChannel G__TPythia8cLcLDecayChannel;
static int G__G__ShipGenDict_651_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::DecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::DecayChannel*) (soff+(sizeof(Pythia8::DecayChannel)*i)))->~G__TPythia8cLcLDecayChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::DecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::DecayChannel*) (soff))->~G__TPythia8cLcLDecayChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ShipGenDict_651_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::DecayChannel* dest = (Pythia8::DecayChannel*) G__getstructoffset();
   *dest = *(Pythia8::DecayChannel*) libp->para[0].ref;
   const Pythia8::DecayChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::ParticleDataEntry */
static int G__G__ShipGenDict_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::ParticleDataEntry[n];
       } else {
         p = new((void*) gvp) Pythia8::ParticleDataEntry[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::ParticleDataEntry;
       } else {
         p = new((void*) gvp) Pythia8::ParticleDataEntry;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) Pythia8::ParticleDataEntry(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDefaults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->initPtr((Pythia8::ParticleData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setAntiName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setNames(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setSpinType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setChargeType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setColType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setM0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMWidth((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMinNoChange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMMaxNoChange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setTau0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setIsResonance((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMayDecay((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setMayDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDoExternalDecay((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setIsVisible((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setDoForceWidth((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setHasChanged((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->hasAnti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->spinType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->chargeType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->chargeType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->charge((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->charge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->colType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->colType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->m0Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->tau0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->mayDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->doExternalDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->doForceWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->initBWmass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->constituentMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->mSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->mRun((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->useBreitWigner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->canDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isGluon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isDiquark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isMeson());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isBaryon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->isOctetHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->heaviestQuark((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->heaviestQuark());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->baryonNumberType((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->baryonNumberType());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->clearChannels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (int) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->addChannel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->sizeChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((Pythia8::ParticleDataEntry*) G__getstructoffset())->channel((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((const Pythia8::ParticleDataEntry*) G__getstructoffset())->channel((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->rescaleBR((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->rescaleBR();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->preparePick((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::DecayChannel& obj = ((Pythia8::ParticleDataEntry*) G__getstructoffset())->pickChannel();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->setResonancePtr((Pythia8::ResonanceWidths*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->getResonancePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resInit((Pythia8::Info*) G__int(libp->para[0]), (Pythia8::Settings*) G__int(libp->para[1])
, (Pythia8::ParticleData*) G__int(libp->para[2]), (Pythia8::Couplings*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidth((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthOpen((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthStore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resOpenFrac((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthRescaleFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_652_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Pythia8::ParticleDataEntry*) G__getstructoffset())->resWidthChan((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_652_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pythia8::ParticleDataEntry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pythia8::ParticleDataEntry(*(Pythia8::ParticleDataEntry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::ParticleDataEntry G__TPythia8cLcLParticleDataEntry;
static int G__G__ShipGenDict_652_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::ParticleDataEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::ParticleDataEntry*) (soff+(sizeof(Pythia8::ParticleDataEntry)*i)))->~G__TPythia8cLcLParticleDataEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::ParticleDataEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::ParticleDataEntry*) (soff))->~G__TPythia8cLcLParticleDataEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ShipGenDict_652_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::ParticleDataEntry* dest = (Pythia8::ParticleDataEntry*) G__getstructoffset();
   *dest = *(Pythia8::ParticleDataEntry*) libp->para[0].ref;
   const Pythia8::ParticleDataEntry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Event */
static int G__G__ShipGenDict_668_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Event((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::Event((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Event[n];
       } else {
         p = new((void*) gvp) Pythia8::Event[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Event;
       } else {
         p = new((void*) gvp) Pythia8::Event;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Event& obj = ((Pythia8::Event*) G__getstructoffset())->operator=(*(Pythia8::Event*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Event(*(Pythia8::Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Event(*(Pythia8::Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (Pythia8::ParticleData*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (Pythia8::ParticleData*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((const Pythia8::Event*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Event*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(*((Pythia8::Particle*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 15:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14])));
      break;
   case 14:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])));
      break;
   case 13:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12])));
      break;
   case 12:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4])), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->append((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((Pythia8::Vec4*) G__int(libp->para[4]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->setEvtPtr((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->setEvtPtr();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->copy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->copy((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Pythia8::Event*) G__getstructoffset())->list((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *(ostream*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->popBack((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->popBack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->remove((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Event*) G__getstructoffset())->undoDecay((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restorePtrs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->saveSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restoreSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->savedSizeValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Event*) G__getstructoffset())->initColTag((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Event*) G__getstructoffset())->initColTag();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->lastColTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Event*) G__getstructoffset())->nextColTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Event*) G__getstructoffset())->scale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->scaleSecond((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Event*) G__getstructoffset())->scaleSecond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->motherList((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->daughterList((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->statusHepMC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->iTopCopy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->iBotCopy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->iTopCopyId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->iBotCopyId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->sisterList((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->sisterListTopBot((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Event*) G__getstructoffset())->sisterListTopBot((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Event*) G__getstructoffset())->isAncestor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->rot((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->rotbst(*(Pythia8::RotBstMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->clearJunctions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->appendJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->appendJunction(*((Pythia8::Junction*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->sizeJunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Event*) G__getstructoffset())->remainsJunction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->remainsJunction((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->kindJunction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->colJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->colJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->endColJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->endColJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Event*) G__getstructoffset())->statusJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->statusJunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Junction& obj = ((Pythia8::Event*) G__getstructoffset())->getJunction((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Junction& obj = ((const Pythia8::Event*) G__getstructoffset())->getJunction((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->eraseJunction((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->saveJunctionSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Event*) G__getstructoffset())->restoreJunctionSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Pythia8::Event*) G__getstructoffset())->listJunctions(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const Pythia8::Event*) G__getstructoffset())->listJunctions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_668_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Event& obj = ((Pythia8::Event*) G__getstructoffset())->operator+=(*(Pythia8::Event*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Event G__TPythia8cLcLEvent;
static int G__G__ShipGenDict_668_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Event*) (soff+(sizeof(Pythia8::Event)*i)))->~G__TPythia8cLcLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Event*) (soff))->~G__TPythia8cLcLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Particle */
static int G__G__ShipGenDict_669_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle[n];
     } else {
       p = new((void*) gvp) Pythia8::Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle;
     } else {
       p = new((void*) gvp) Pythia8::Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::Particle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Pythia8::Particle((int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])), (double) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])));
     } else {
       p = new((void*) gvp) Pythia8::Particle(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, *((Pythia8::Vec4*) G__int(libp->para[8])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Pythia8::Particle(*(Pythia8::Particle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Pythia8::Particle(*(Pythia8::Particle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Particle& obj = ((Pythia8::Particle*) G__getstructoffset())->operator=(*(Pythia8::Particle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->setEvtPtr((Pythia8::Event*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->setPDEPtr((Pythia8::ParticleDataEntry*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->setPDEPtr();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->id((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->status((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusPos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusNeg();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->statusCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->mother1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->mother2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->mothers((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->mothers((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->mothers();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->daughter1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->daughter2((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->daughters((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->daughters((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->daughters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->col((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->acol((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Particle*) G__getstructoffset())->cols((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Particle*) G__getstructoffset())->cols((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Particle*) G__getstructoffset())->cols();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->p(*((Pythia8::Vec4*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->p((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->px((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->py((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->pz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->e((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->m((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->pol((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->vProd(*((Pythia8::Vec4*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->vProd((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->xProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->yProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->zProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->tProd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->tau((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->mother1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->mother2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->daughter1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->daughter2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->col());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->acol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->p();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->scale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->hasVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->vProd();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->xProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->yProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->zProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tProd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tau());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->idAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->statusAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isRescatteredIncoming());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m2Calc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pAbs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->thetaXZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->pNeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::Vec4* pobj;
         const Pythia8::Vec4 xobj = ((const Pythia8::Particle*) G__getstructoffset())->vDec();
         pobj = new Pythia8::Vec4(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->xDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->yDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->zDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tDec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->statusHepMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iTopCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iBotCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iTopCopyId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->iBotCopyId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->motherList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->daughterList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->sisterList((bool) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Pythia8::Particle*) G__getstructoffset())->sisterList();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isAncestor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Particle*) G__getstructoffset())->undoDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->nameWithStatus((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const Pythia8::Particle*) G__getstructoffset())->nameWithStatus();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->spinType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->chargeType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isCharged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isNeutral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Pythia8::Particle*) G__getstructoffset())->colType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->m0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->mSel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->constituentMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pythia8::Particle*) G__getstructoffset())->tau0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->mayDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->canDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->doExternalDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isQuark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isGluon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isDiquark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Pythia8::Particle*) G__getstructoffset())->isHadron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Pythia8::ParticleDataEntry& obj = ((const Pythia8::Particle*) G__getstructoffset())->particleDataEntry();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale3((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale4((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rescale5((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rot((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bst(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->bstback(*(Pythia8::Vec4*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->rotbst(*(Pythia8::RotBstMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->offsetHistory((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_669_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Particle*) G__getstructoffset())->offsetCol((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Particle G__TPythia8cLcLParticle;
static int G__G__ShipGenDict_669_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Particle*) (soff+(sizeof(Pythia8::Particle)*i)))->~G__TPythia8cLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Particle*) (soff))->~G__TPythia8cLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8::Pythia */
static int G__G__ShipGenDict_1065_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8::Pythia* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Pythia(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Pythia8::Pythia(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8::Pythia(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) Pythia8::Pythia(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Pythia[n];
       } else {
         p = new((void*) gvp) Pythia8::Pythia[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Pythia8::Pythia;
       } else {
         p = new((void*) gvp) Pythia8::Pythia;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readString(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->readFile(*(istream*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])
, (Pythia8::PDF*) G__int(libp->para[4]), (Pythia8::PDF*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])
, (Pythia8::PDF*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2]), (Pythia8::PDF*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])
, (Pythia8::PDF*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setPDFPtr((Pythia8::PDF*) G__int(libp->para[0]), (Pythia8::PDF*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setLHAupPtr((Pythia8::LHAup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setDecayPtr((Pythia8::DecayHandler*) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setRndmEnginePtr((Pythia8::RndmEngine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setUserHooksPtr((Pythia8::UserHooks*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setMergingHooksPtr((Pythia8::MergingHooks*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setBeamShapePtr((Pythia8::BeamShape*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setSigmaPtr((Pythia8::SigmaProcess*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setResonancePtr((Pythia8::ResonanceWidths*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0]), (Pythia8::TimeShower*) G__int(libp->para[1])
, (Pythia8::SpaceShower*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0]), (Pythia8::TimeShower*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->setShowerPtr((Pythia8::TimeShower*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->init((Pythia8::LHAup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceTimeShower((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceTimeShower((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceHadronLevel((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceHadronLevel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->moreDecays());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->forceRHadronDecays());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Pythia8::Pythia*) G__getstructoffset())->LHAeventList(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Pythia*) G__getstructoffset())->LHAeventList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->LHAeventSkip((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8::Pythia*) G__getstructoffset())->stat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Pythia8::Pythia*) G__getstructoffset())->statistics((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Pythia8::Pythia*) G__getstructoffset())->statistics((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Pythia8::Pythia*) G__getstructoffset())->statistics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Pythia8::Pythia*) G__getstructoffset())->flag(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Pythia8::Pythia*) G__getstructoffset())->mode(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Pythia8::Pythia*) G__getstructoffset())->parm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Pythia8::Pythia*) G__getstructoffset())->word(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1065_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((Pythia8::Pythia*) G__getstructoffset())->getPDFPtr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((Pythia8::Pythia*) G__getstructoffset())->getPDFPtr((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8::Pythia G__TPythia8cLcLPythia;
static int G__G__ShipGenDict_1065_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8::Pythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8::Pythia*) (soff+(sizeof(Pythia8::Pythia)*i)))->~G__TPythia8cLcLPythia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8::Pythia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8::Pythia*) (soff))->~G__TPythia8cLcLPythia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pythia8Generator */
static int G__G__ShipGenDict_1071_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pythia8Generator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8Generator[n];
     } else {
       p = new((void*) gvp) Pythia8Generator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pythia8Generator;
     } else {
       p = new((void*) gvp) Pythia8Generator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->SetParameters((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->SetMom((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->SetId((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->SetHNLId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->UseDeepCopy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->UseRandom1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->UseRandom3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->GetPythiaInstance((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Pythia8Generator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia8Generator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Pythia8Generator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Pythia8Generator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pythia8Generator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia8Generator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pythia8Generator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pythia8Generator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1071_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pythia8Generator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pythia8Generator G__TPythia8Generator;
static int G__G__ShipGenDict_1071_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pythia8Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pythia8Generator*) (soff+(sizeof(Pythia8Generator)*i)))->~G__TPythia8Generator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pythia8Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pythia8Generator*) (soff))->~G__TPythia8Generator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HNLPythia8Generator */
static int G__G__ShipGenDict_1170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HNLPythia8Generator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNLPythia8Generator[n];
     } else {
       p = new((void*) gvp) HNLPythia8Generator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNLPythia8Generator;
     } else {
       p = new((void*) gvp) HNLPythia8Generator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetParameters((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->List((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetMom((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetId((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetHNLId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetLmin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->SetLmax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->UseRandom1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->UseRandom3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->UseExternalFile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->UseDeepCopy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HNLPythia8Generator*) G__getstructoffset())->getPythiaInstance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HNLPythia8Generator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNLPythia8Generator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HNLPythia8Generator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HNLPythia8Generator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNLPythia8Generator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNLPythia8Generator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HNLPythia8Generator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNLPythia8Generator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HNLPythia8Generator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HNLPythia8Generator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HNLPythia8Generator(*(HNLPythia8Generator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HNLPythia8Generator G__THNLPythia8Generator;
static int G__G__ShipGenDict_1170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HNLPythia8Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HNLPythia8Generator*) (soff+(sizeof(HNLPythia8Generator)*i)))->~G__THNLPythia8Generator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HNLPythia8Generator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HNLPythia8Generator*) (soff))->~G__THNLPythia8Generator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenieGenerator */
static int G__G__ShipGenDict_1223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenieGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenieGenerator[n];
     } else {
       p = new((void*) gvp) GenieGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenieGenerator;
     } else {
       p = new((void*) gvp) GenieGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GenieGenerator*) G__getstructoffset())->OldReadEvent((FairPrimaryGenerator*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GenieGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GenieGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GenieGenerator*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenieGenerator*) G__getstructoffset())->NuOnly();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((GenieGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((GenieGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((GenieGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenieGenerator*) G__getstructoffset())->AddBox(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenieGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenieGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GenieGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GenieGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenieGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenieGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenieGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenieGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenieGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenieGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenieGenerator(*(GenieGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenieGenerator G__TGenieGenerator;
static int G__G__ShipGenDict_1223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenieGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenieGenerator*) (soff+(sizeof(GenieGenerator)*i)))->~G__TGenieGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenieGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenieGenerator*) (soff))->~G__TGenieGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NuageGenerator */
static int G__G__ShipGenDict_1228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NuageGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NuageGenerator[n];
     } else {
       p = new((void*) gvp) NuageGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NuageGenerator;
     } else {
       p = new((void*) gvp) NuageGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NuageGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NuageGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((NuageGenerator*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NuageGenerator*) G__getstructoffset())->NuOnly();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((NuageGenerator*) G__getstructoffset())->SetPositions(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((NuageGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NuageGenerator*) G__getstructoffset())->AddBox(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NuageGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NuageGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NuageGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NuageGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NuageGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NuageGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NuageGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NuageGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NuageGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1228_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NuageGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NuageGenerator(*(NuageGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NuageGenerator G__TNuageGenerator;
static int G__G__ShipGenDict_1228_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NuageGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NuageGenerator*) (soff+(sizeof(NuageGenerator)*i)))->~G__TNuageGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NuageGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NuageGenerator*) (soff))->~G__TNuageGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NtupleGenerator */
static int G__G__ShipGenDict_1229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NtupleGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NtupleGenerator[n];
     } else {
       p = new((void*) gvp) NtupleGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NtupleGenerator;
     } else {
       p = new((void*) gvp) NtupleGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NtupleGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NtupleGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((NtupleGenerator*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NtupleGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NtupleGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NtupleGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NtupleGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NtupleGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NtupleGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1229_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NtupleGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1229_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NtupleGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NtupleGenerator(*(NtupleGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NtupleGenerator G__TNtupleGenerator;
static int G__G__ShipGenDict_1229_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NtupleGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NtupleGenerator*) (soff+(sizeof(NtupleGenerator)*i)))->~G__TNtupleGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NtupleGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NtupleGenerator*) (soff))->~G__TNtupleGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonBackGenerator */
static int G__G__ShipGenDict_1230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonBackGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonBackGenerator[n];
     } else {
       p = new((void*) gvp) MuonBackGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonBackGenerator;
     } else {
       p = new((void*) gvp) MuonBackGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonBackGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonBackGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonBackGenerator*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBackGenerator*) G__getstructoffset())->CloseFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBackGenerator*) G__getstructoffset())->SetPhiRandom((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBackGenerator*) G__getstructoffset())->SetSmearBeam((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MuonBackGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonBackGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MuonBackGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuonBackGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBackGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonBackGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonBackGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonBackGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1230_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonBackGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1230_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonBackGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonBackGenerator(*(MuonBackGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonBackGenerator G__TMuonBackGenerator;
static int G__G__ShipGenDict_1230_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonBackGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonBackGenerator*) (soff+(sizeof(MuonBackGenerator)*i)))->~G__TMuonBackGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonBackGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonBackGenerator*) (soff))->~G__TMuonBackGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CosmicsGenerator */
static int G__G__ShipGenDict_1248_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CosmicsGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CosmicsGenerator[n];
     } else {
       p = new((void*) gvp) CosmicsGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CosmicsGenerator;
     } else {
       p = new((void*) gvp) CosmicsGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CosmicsGenerator*) G__getstructoffset())->Init((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CosmicsGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CosmicsGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CosmicsGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CosmicsGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CosmicsGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CosmicsGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CosmicsGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CosmicsGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1248_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CosmicsGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1248_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CosmicsGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CosmicsGenerator(*(CosmicsGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CosmicsGenerator G__TCosmicsGenerator;
static int G__G__ShipGenDict_1248_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CosmicsGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CosmicsGenerator*) (soff+(sizeof(CosmicsGenerator)*i)))->~G__TCosmicsGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CosmicsGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CosmicsGenerator*) (soff))->~G__TCosmicsGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuDISGenerator */
static int G__G__ShipGenDict_1250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuDISGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuDISGenerator[n];
     } else {
       p = new((void*) gvp) MuDISGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuDISGenerator;
     } else {
       p = new((void*) gvp) MuDISGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuDISGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuDISGenerator*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuDISGenerator*) G__getstructoffset())->GetNevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MuDISGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MuDISGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuDISGenerator*) G__getstructoffset())->SetPositions((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MuDISGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuDISGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MuDISGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuDISGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuDISGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuDISGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuDISGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuDISGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ShipGenDict_1250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuDISGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ShipGenDict_1250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuDISGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuDISGenerator(*(MuDISGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuDISGenerator G__TMuDISGenerator;
static int G__G__ShipGenDict_1250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuDISGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuDISGenerator*) (soff+(sizeof(MuDISGenerator)*i)))->~G__TMuDISGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuDISGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuDISGenerator*) (soff))->~G__TMuDISGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Pythia6Generator */

/* tPythia6Generator */

/* Pythia8::Info */

/* Pythia8::Settings */

/* Pythia8::ParticleData */

/* Pythia8::DecayChannel */

/* Pythia8::ParticleDataEntry */

/* Pythia8::Event */

/* Pythia8::Particle */

/* Pythia8::Pythia */

/* Pythia8Generator */

/* HNLPythia8Generator */

/* GenieGenerator */

/* NuageGenerator */

/* NtupleGenerator */

/* MuonBackGenerator */

/* CosmicsGenerator */

/* MuDISGenerator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__ShipGenDict {
 public:
  G__Sizep2memfuncG__ShipGenDict(): p(&G__Sizep2memfuncG__ShipGenDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__ShipGenDict::*p)();
};

size_t G__get_sizep2memfuncG__ShipGenDict()
{
  G__Sizep2memfuncG__ShipGenDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__ShipGenDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator))) {
     Pythia6Generator *G__Lderived;
     G__Lderived=(Pythia6Generator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator))) {
     tPythia6Generator *G__Lderived;
     G__Lderived=(tPythia6Generator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator))) {
     Pythia8Generator *G__Lderived;
     G__Lderived=(Pythia8Generator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator))) {
     HNLPythia8Generator *G__Lderived;
     G__Lderived=(HNLPythia8Generator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator))) {
     GenieGenerator *G__Lderived;
     G__Lderived=(GenieGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator))) {
     NuageGenerator *G__Lderived;
     G__Lderived=(NuageGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator))) {
     NtupleGenerator *G__Lderived;
     G__Lderived=(NtupleGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator))) {
     MuonBackGenerator *G__Lderived;
     G__Lderived=(MuonBackGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator))) {
     CosmicsGenerator *G__Lderived;
     G__Lderived=(CosmicsGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator))) {
     MuDISGenerator *G__Lderived;
     G__Lderived=(MuDISGenerator*)0x1000;
     {
       FairGenerator *G__Lpbase=(FairGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_FairGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator),G__get_linked_tagnum(&G__G__ShipGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__ShipGenDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,long>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,long,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Flag>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Flag>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Flag,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Mode>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Mode>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Mode,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Parm>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Parm>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Parm,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Word>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Word>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::Word,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,MVec>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::MVec>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::MVec,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,PVec>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::PVec>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::PVec,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DecayChannel>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::DecayChannel>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ResonanceWidths*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ResonanceWidths*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,ParticleDataEntry>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Pythia8::ParticleDataEntry>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Pythia8::ParticleDataEntry,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Particle>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Junction>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleClusterJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleClusterJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleCellJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleCellJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleSlowJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SingleSlowJet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<string,int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOpairlEstringcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEstringcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<string,int>,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOpairlEstringcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEstringcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ResolvedParton>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ResolvedParton>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BoseEinsteinHadron>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::BoseEinsteinHadron>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ColSinglet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ColSinglet>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StringRegion>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::StringRegion>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,int>,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex<double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,complex<double>,less<double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<HSIndex>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<int,int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<int,int>,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<set<HSIndex> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<set<HSIndex> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HadronScatterPair>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::HadronScatterPair>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PartonSystem>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::PartonSystem>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHAParticle>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHAParticle>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHAProcess>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHAProcess>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHdecayChannel>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHdecayChannel>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHdecayTable>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHdecayTable>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHblock<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::LHblock<int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,LHgenericBlock>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHgenericBlock>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Pythia8::LHgenericBlock,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<InBeam>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::InBeam>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<InPair>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::InPair>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TimeDipoleEnd>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::TimeDipoleEnd>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<complex>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<complex<double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<complex> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<complex<double>,allocator<complex<double> > > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HelicityParticle>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::HelicityParticle>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GammaMatrix>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::GammaMatrix>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Wave4>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Wave4>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Wave4> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Vec4>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Vec4>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FlavContainer>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::FlavContainer>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SigmaProcess*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SigmaProcess*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SpaceDipoleEnd>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::SpaceDipoleEnd>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Clustering>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::Clustering>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<History*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::History*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,History*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,Pythia8::History*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,Pythia8::History*,less<double> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ProcessContainer*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pythia8::ProcessContainer*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Pythia6Generator */
static void G__setup_memvarPythia6Generator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator));
   { Pythia6Generator *p; p=(Pythia6Generator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,4,"fFileName=",0,"! Input file Name");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fInputFile=",0,"! File");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVerbose=",0,"! Verbose Level");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tPythia6Generator */
static void G__setup_memvartPythia6Generator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator));
   { tPythia6Generator *p; p=(tPythia6Generator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TPythia6),-1,-1,4,"fPythia=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMom=",0,"proton momentum");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDeepCopy=",0,"copy complete pythia event ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPionKaonDecay=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TString),-1,-1,2,"fType=",0,"muon proton scattering ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TString),-1,-1,2,"fTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Info */
static void G__setup_memvarPythia8cLcLInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo));
   { Pythia8::Info *p; p=(Pythia8::Info*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"TIMESTOPRINT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"CONVERTMB2PB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mASave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mBSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eCMSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"lowPTmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nTry=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nSel=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"nAcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sigGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sigErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"wtAccSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nTryM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nSelM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR),G__defined_typename("map<int,long>"),-1,4,"nAccM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"sigGenM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"sigErrM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"lhaStrategySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"a0MPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isDiffC=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isND=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isLH=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bIsSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"evolIsSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"atEOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVal1=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVal2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasHistorySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codeSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFinalSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFinalSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id1pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id2pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFSRinProcSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nFSRinResSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x1pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x2pdfSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdf1Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdf2Save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Q2FacSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alphaEMSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alphaSSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Q2RenSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scalupSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"uH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m3H[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m4H[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"thetaH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phiH[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"bMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"enhanceMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTmaxFSRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTnowSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"zNowISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pT2NowISRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"nameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"nameSubSave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"codeMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iAMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iBMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"pTMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"eMPISave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"counters[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,int>"),-1,4,"messages=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,4,"headers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightCKKWLSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"weightFIRSTSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Settings */
static void G__setup_memvarPythia8cLcLSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings));
   { Pythia8::Settings *p; p=(Pythia8::Settings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo),-1,-1,4,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR),G__defined_typename("map<string,Flag>"),-1,4,"flags=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR),G__defined_typename("map<string,Mode>"),-1,4,"modes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR),G__defined_typename("map<string,Parm>"),-1,4,"parms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR),G__defined_typename("map<string,Word>"),-1,4,"words=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR),G__defined_typename("map<string,MVec>"),-1,4,"mvecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR),G__defined_typename("map<string,PVec>"),-1,4,"pvecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"readingFailedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ParticleData */
static void G__setup_memvarPythia8cLcLParticleData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData));
   { Pythia8::ParticleData *p; p=(Pythia8::ParticleData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"modeBreitWigner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"maxEnhanceBW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mQRun[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Lambda5Run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo),-1,-1,4,"infoPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings),-1,-1,4,"settingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRndm),-1,-1,4,"rndmPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLCouplings),-1,-1,4,"couplingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR),G__defined_typename("map<int,ParticleDataEntry>"),-1,4,"pdt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry),-1,-1,4,"particlePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"readingFailedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::DecayChannel */
static void G__setup_memvarPythia8cLcLDecayChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel));
   { Pythia8::DecayChannel *p; p=(Pythia8::DecayChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"onModeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"bRatioSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"currentBRSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onShellWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"openSecPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"openSecNeg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"meModeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nProd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"prod[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasChangedSave=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::ParticleDataEntry */
static void G__setup_memvarPythia8cLcLParticleDataEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry));
   { Pythia8::ParticleDataEntry *p; p=(Pythia8::ParticleDataEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"INVISIBLENUMBER=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"INVISIBLETABLE[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"KNOWNNOWIDTH[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MAXTAU0FORDECAY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"MINMASSRESONANCE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"NARROWMASS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"CONSTITUENTMASSTABLE[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"nameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"antiNameSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"spinTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chargeTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"colTypeSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m0Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMinSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMaxSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tau0Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"constituentMassSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasAntiSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isResonanceSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mayDecaySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doExternalDecaySave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isVisibleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doForceWidthSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasChangedSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"modeBWnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"atanLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"atanDif=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mThr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR),G__defined_typename("vector<DecayChannel>"),-1,4,"channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"currentBRSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLResonanceWidths),-1,-1,4,"resonancePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData),-1,-1,4,"particleDataPtr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Event */
static void G__setup_memvarPythia8cLcLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent));
   { Pythia8::Event *p; p=(Pythia8::Event*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"IPERLINE=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"startColTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR),G__defined_typename("vector<Pythia8::Particle>"),-1,4,"entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR),G__defined_typename("vector<Pythia8::Junction>"),-1,4,"junction=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"maxColTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"savedSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"savedJunctionSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scaleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scaleSecondSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"headerList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData),-1,-1,4,"particleDataPtr=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Particle */
static void G__setup_memvarPythia8cLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   { Pythia8::Particle *p; p=(Pythia8::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"TINY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"statusSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mother1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mother2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"daughter1Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"daughter2Save=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"colSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"acolSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"pSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scaleSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"polSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasVertexSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"vProdSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tauSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry),-1,-1,4,"pdePtr=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent),-1,-1,4,"evtPtr=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* Pythia8::Pythia */
static void G__setup_memvarPythia8cLcLPythia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia));
   { Pythia8::Pythia *p; p=(Pythia8::Pythia*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->process)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent),-1,-1,1,"process=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent),-1,-1,1,"event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo),-1,-1,1,"info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->settings)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings),-1,-1,1,"settings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particleData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData),-1,-1,1,"particleData=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRndm),-1,-1,1,"rndm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->couplings)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLCouplings),-1,-1,1,"couplings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->couplingsPtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLCouplings),-1,-1,1,"couplingsPtr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->slhaInterface)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSLHAinterface),-1,-1,1,"slhaInterface=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partonSystems)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPartonSystems),-1,-1,1,"partonSystems=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->merging)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLMerging),-1,-1,1,"merging=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mergingHooksPtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLMergingHooks),-1,-1,1,"mergingHooksPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"VERSIONNUMBERCODE=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NTRY=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SUBRUNDEFAULT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_string),-1,-1,4,"xmlPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doProcessLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doHadronLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doDiffraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doResDec=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doFSRinRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"decayRHadrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"abortIfVeto=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"checkEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"checkHistory=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nErrList=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"epTolErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"epTolWarn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isConstructed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isUnresolvedA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isUnresolvedB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"showSaV=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"showMaD=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"frameType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"boostType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowProc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nShowEvt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pxA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pxB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pyA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pyB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzAcm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pzBcm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"betaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gammaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"pAinit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"pBinit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"pAnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4),-1,-1,4,"pBnow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRotBstMatrix),-1,-1,4,"MfromCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRotBstMatrix),-1,-1,4,"MtoCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nErrEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrEpm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrNan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"iErrNanVtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfHardAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfHardBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfPomAPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF),-1,-1,4,"pdfPomBPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfHard=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfPomA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewPdfPomB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamPomA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLBeamParticle),-1,-1,4,"beamPomB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewLHA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLLHAup),-1,-1,4,"lhaUpPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayHandler),-1,-1,4,"decayHandlePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"handledParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLUserHooks),-1,-1,4,"userHooksPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasUserHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVetoProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVetoPartons=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"retryPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLBeamShape),-1,-1,4,"beamShapePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewBeamShape=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doMomentumSpread=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doVertexSpread=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR),G__defined_typename("vector<SigmaProcess*>"),-1,4,"sigmaPtrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR),G__defined_typename("vector<ResonanceWidths*>"),-1,4,"resonancePtrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLTimeShower),-1,-1,4,"timesDecPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLTimeShower),-1,-1,4,"timesPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSpaceShower),-1,-1,4,"spacePtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useNewSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLProcessLevel),-1,-1,4,"processLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPartonLevel),-1,-1,4,"partonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPartonLevel),-1,-1,4,"trialPartonLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasMergingHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasOwnMergingHooks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doMerging=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLHadronLevel),-1,-1,4,"hadronLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSigmaTotal),-1,-1,4,"sigmaTot=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRHadrons),-1,-1,4,"rHadrons=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pythia8Generator */
static void G__setup_memvarPythia8Generator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator));
   { Pythia8Generator *p; p=(Pythia8Generator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia),-1,-1,4,"fPythia=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRndmEngine),-1,-1,4,"fRandomEngine=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMom=",0,"proton momentum");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHNL=",0,"HNL ID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fId=",0,"target type");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseRandom1=",0,"flag to use TRandom1");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseRandom3=",0,"flag to use TRandom3 (default)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDeepCopy=",0,"copy complete pythia event ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HNLPythia8Generator */
static void G__setup_memvarHNLPythia8Generator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator));
   { HNLPythia8Generator *p; p=(HNLPythia8Generator*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPythia)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia),-1,-1,1,"fPythia=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLRndmEngine),-1,-1,4,"fRandomEngine=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMom=",0,"proton momentum");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHNL=",0,"HNL ID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fId=",0,"target type");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseRandom1=",0,"flag to use TRandom1");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseRandom3=",0,"flag to use TRandom3 (default)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLmin=",0,"m minimum  decay position z");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLmax=",0,"m maximum decay position z");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fctau=",0,"hnl lifetime ");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"fextFile=",0,"read charm and beauty hadrons from external file, decay with Pythia");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,"! pointer to a file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,"! ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"firstEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hpx[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hpy[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hpz[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hE[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hM[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mpx[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mpy[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mpz[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mE[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hid[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mid[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDeepCopy=",0,"not used");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenieGenerator */
static void G__setup_memvarGenieGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator));
   { GenieGenerator *p; p=(GenieGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Yvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Xvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Lvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ztarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"startZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"endZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Ev=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pxv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pyv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pzv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"El=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pxl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pyl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pzl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vtxt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pxf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pyf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pzf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"pdgf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"dVecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"boxs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"cc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nf=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"neu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fNuOnly=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fznu0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fznu11=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXnu11=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYnu11=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrDz_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrDz_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrZ_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrZ_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fL1z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScintDz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NuageGenerator */
static void G__setup_memvarNuageGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator));
   { NuageGenerator *p; p=(NuageGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Yvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Xvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Lvessel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ztarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"startZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"endZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"startX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"endX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"startY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"endY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Ev=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pxv=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pyv=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pzv=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"El=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pxl=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pyl=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pzl=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vtxt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pxf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pyf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pzf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pdgf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"dVecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"boxs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nf=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"neu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fNuOnly=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fznu=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXnu=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYnu=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrDz_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrDz_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrZ_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrZ_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEntrB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fL1z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScintDz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NtupleGenerator */
static void G__setup_memvarNtupleGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator));
   { NtupleGenerator *p; p=(NtupleGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"Nmeas=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"volid[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"procid[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Ezero=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"tof=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"w=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"px[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"py[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pz[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vx[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vy[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vz[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonBackGenerator */
static void G__setup_memvarMuonBackGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator));
   { MuonBackGenerator *p; p=(MuonBackGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pythiaid=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"w=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"ecut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,"! ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,"! ");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhiRandomize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fsmearBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CosmicsGenerator */
static void G__setup_memvarCosmicsGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator));
   { CosmicsGenerator *p; p=(CosmicsGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->z0)-(long)(p)),100,0,0,-1,-1,-1,1,"z0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yBox)-(long)(p)),100,0,0,-1,-1,-1,1,"yBox=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xBox)-(long)(p)),100,0,0,-1,-1,-1,1,"xBox=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zBox)-(long)(p)),100,0,0,-1,-1,-1,1,"zBox=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xdist)-(long)(p)),100,0,0,-1,-1,-1,1,"xdist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zdist)-(long)(p)),100,0,0,-1,-1,-1,1,"zdist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->minE)-(long)(p)),100,0,0,-1,-1,-1,1,"minE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n_EVENTS)-(long)(p)),105,0,0,-1,-1,-1,1,"n_EVENTS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_Co3Rng),-1,-1,4,"fRandomEngine=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"P=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"weighttest=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"weight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"FluxIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"PID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nInside=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nTest=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"high=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuDISGenerator */
static void G__setup_memvarMuDISGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator));
   { MuDISGenerator *p; p=(MuDISGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"startZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"endZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClonesArray),-1,-1,2,"iMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClonesArray),-1,-1,2,"dPart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!   don't make it persistent, magic ROOT command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TFile),-1,-1,2,"fInputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TTree),-1,-1,2,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__ShipGenDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPythia6Generator(void) {
   /* Pythia6Generator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator));
   G__memfunc_setup("Pythia6Generator",1612,G__G__ShipGenDict_186_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pythia6Generator",1612,G__G__ShipGenDict_186_0_2, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator), -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - primGen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVerbose",1026,G__G__ShipGenDict_186_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - verb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseInput",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_186_0_6, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Pythia6Generator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_186_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia6Generator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_186_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Pythia6Generator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_186_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Pythia6Generator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_186_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_186_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia6Generator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_186_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pythia6Generator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_186_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia6Generator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_186_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pythia6Generator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Pythia6Generator", 1612, G__G__ShipGenDict_186_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia6Generator), -1, 0, 1, 1, 1, 0, "u 'Pythia6Generator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pythia6Generator", 1738, G__G__ShipGenDict_186_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctPythia6Generator(void) {
   /* tPythia6Generator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator));
   G__memfunc_setup("tPythia6Generator",1728,G__G__ShipGenDict_245_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "!", (void*) NULL, 1);
   G__memfunc_setup("SetMom",597,G__G__ShipGenDict_245_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__G__ShipGenDict_245_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - Type u 'TString' - 0 - Target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseDeepCopy",1094,G__G__ShipGenDict_245_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPyint5_XSEC",1307,G__G__ShipGenDict_245_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPyint5_NGEN",1296,G__G__ShipGenDict_245_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPyint5_NGENPD",1444,G__G__ShipGenDict_245_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_245_0_10, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&tPythia6Generator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_245_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tPythia6Generator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_245_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&tPythia6Generator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_245_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&tPythia6Generator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_245_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_245_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tPythia6Generator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_245_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tPythia6Generator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_245_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tPythia6Generator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_245_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tPythia6Generator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("tPythia6Generator", 1728, G__G__ShipGenDict_245_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_tPythia6Generator), -1, 0, 1, 1, 1, 0, "u 'tPythia6Generator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~tPythia6Generator", 1854, G__G__ShipGenDict_245_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLInfo(void) {
   /* Pythia8::Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo));
   G__memfunc_setup("Info",396,G__G__ShipGenDict_560_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_560_0_2, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idA",270,G__G__ShipGenDict_560_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idB",271,G__G__ShipGenDict_560_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzA",299,G__G__ShipGenDict_560_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzB",300,G__G__ShipGenDict_560_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eA",166,G__G__ShipGenDict_560_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eB",167,G__G__ShipGenDict_560_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mA",174,G__G__ShipGenDict_560_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mB",175,G__G__ShipGenDict_560_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eCM",245,G__G__ShipGenDict_560_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("s",115,G__G__ShipGenDict_560_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tooLowPTmin",1132,G__G__ShipGenDict_560_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__G__ShipGenDict_560_0_14, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("code",411,G__G__ShipGenDict_560_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFinal",600,G__G__ShipGenDict_560_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResolved",1056,G__G__ShipGenDict_560_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveA",1412,G__G__ShipGenDict_560_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveB",1413,G__G__ShipGenDict_560_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiffractiveC",1414,G__G__ShipGenDict_560_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNonDiffractive",1646,G__G__ShipGenDict_560_0_21, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMinBias",895,G__G__ShipGenDict_560_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLHA",433,G__G__ShipGenDict_560_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("atEndOfFile",1057,G__G__ShipGenDict_560_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasSub",614,G__G__ShipGenDict_560_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nameSub",715,G__G__ShipGenDict_560_0_26, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codeSub",709,G__G__ShipGenDict_560_0_27, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFinalSub",898,G__G__ShipGenDict_560_0_28, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id1",254,G__G__ShipGenDict_560_0_29, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id2",255,G__G__ShipGenDict_560_0_30, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x1",169,G__G__ShipGenDict_560_0_31, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x2",170,G__G__ShipGenDict_560_0_32, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__ShipGenDict_560_0_33, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__G__ShipGenDict_560_0_34, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id1pdf",568,G__G__ShipGenDict_560_0_35, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id2pdf",569,G__G__ShipGenDict_560_0_36, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x1pdf",483,G__G__ShipGenDict_560_0_37, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x2pdf",484,G__G__ShipGenDict_560_0_38, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf1",363,G__G__ShipGenDict_560_0_39, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdf2",364,G__G__ShipGenDict_560_0_40, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QFac",347,G__G__ShipGenDict_560_0_41, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Fac",397,G__G__ShipGenDict_560_0_42, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValence1",971,G__G__ShipGenDict_560_0_43, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValence2",972,G__G__ShipGenDict_560_0_44, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaS",601,G__G__ShipGenDict_560_0_45, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaEM",664,G__G__ShipGenDict_560_0_46, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QRen",374,G__G__ShipGenDict_560_0_47, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Q2Ren",424,G__G__ShipGenDict_560_0_48, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scalup",648,G__G__ShipGenDict_560_0_49, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mHat",394,G__G__ShipGenDict_560_0_50, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sHat",400,G__G__ShipGenDict_560_0_51, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tHat",401,G__G__ShipGenDict_560_0_52, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("uHat",402,G__G__ShipGenDict_560_0_53, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTHat",481,G__G__ShipGenDict_560_0_54, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2Hat",531,G__G__ShipGenDict_560_0_55, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m3Hat",445,G__G__ShipGenDict_560_0_56, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m4Hat",446,G__G__ShipGenDict_560_0_57, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaHat",819,G__G__ShipGenDict_560_0_58, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiHat",606,G__G__ShipGenDict_560_0_59, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weight",648,G__G__ShipGenDict_560_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightSum",957,G__G__ShipGenDict_560_0_61, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lhaStrategy",1160,G__G__ShipGenDict_560_0_62, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nISR",348,G__G__ShipGenDict_560_0_63, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFSRinProc",964,G__G__ShipGenDict_560_0_64, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nFSRinRes",858,G__G__ShipGenDict_560_0_65, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxMPI",752,G__G__ShipGenDict_560_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxISR",760,G__G__ShipGenDict_560_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTmaxFSR",757,G__G__ShipGenDict_560_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTnow",536,G__G__ShipGenDict_560_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("a0MPI",375,G__G__ShipGenDict_560_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bMPI",328,G__G__ShipGenDict_560_0_71, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("enhanceMPI",952,G__G__ShipGenDict_560_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eMPI",331,G__G__ShipGenDict_560_0_73, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMPI",340,G__G__ShipGenDict_560_0_74, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codeMPI",641,G__G__ShipGenDict_560_0_75, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMPI",426,G__G__ShipGenDict_560_0_76, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iAMPI",400,G__G__ShipGenDict_560_0_77, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBMPI",401,G__G__ShipGenDict_560_0_78, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("codesHard",909,G__G__ShipGenDict_560_0_79, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTried",614,G__G__ShipGenDict_560_0_80, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSelected",919,G__G__ShipGenDict_560_0_81, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAccepted",903,G__G__ShipGenDict_560_0_82, 108, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaGen",811,G__G__ShipGenDict_560_0_83, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaErr",826,G__G__ShipGenDict_560_0_84, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCounter",1056,G__G__ShipGenDict_560_0_85, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCounter",1068,G__G__ShipGenDict_560_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 '0' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCounter",1033,G__G__ShipGenDict_560_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 '1' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorReset",1069,G__G__ShipGenDict_560_0_88, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorMsg",849,G__G__ShipGenDict_560_0_89, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - messageIn u 'string' - 0 '\" \"' extraIn "
"g - - 0 'false' showAlways u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorTotalNumber",1687,G__G__ShipGenDict_560_0_90, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorStatistics",1621,G__G__ShipGenDict_560_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTooLowPTmin",1432,G__G__ShipGenDict_560_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - lowPTminIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValence",1034,G__G__ShipGenDict_560_0_93, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - isVal1In g - - 0 - isVal2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasHistory",1070,G__G__ShipGenDict_560_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasHistoryIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasHistory",1070,G__G__ShipGenDict_560_0_95, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zNowISR",668,G__G__ShipGenDict_560_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - zNowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zNowISR",668,G__G__ShipGenDict_560_0_97, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2NowISR",792,G__G__ShipGenDict_560_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pT2NowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2NowISR",792,G__G__ShipGenDict_560_0_99, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightCKKWL",1316,G__G__ShipGenDict_560_0_100, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeightCKKWL",1328,G__G__ShipGenDict_560_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - weightIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergingWeight",1361,G__G__ShipGenDict_560_0_102, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergingWeightNLO",1594,G__G__ShipGenDict_560_0_103, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightFIRST",1328,G__G__ShipGenDict_560_0_104, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeightFIRST",1340,G__G__ShipGenDict_560_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - weightIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("header",617,G__G__ShipGenDict_560_0_106, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("headerKeys",1029,G__G__ShipGenDict_560_0_107, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamA",770,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - idAin d - - 0 - pzAin "
"d - - 0 - eAin d - - 0 - mAin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamB",771,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - idBin d - - 0 - pzBin "
"d - - 0 - eBin d - - 0 - mBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setECM",545,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - eCMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeMPIarrays",1331,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resizeMPIarrays",1546,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - newSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 9, 1, 4, 0, 
"u 'string' - 0 - nameIn i - - 0 - codeIn "
"i - - 0 - nFinalIn g - - 0 'false' isNonDiffIn "
"g - - 0 'true' isResolvedIn g - - 0 'false' isDiffractiveAin "
"g - - 0 'false' isDiffractiveBin g - - 0 'false' isDiffractiveCin "
"g - - 0 'false' isLHAin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSubType",1048,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - iDS u 'string' - 0 - nameSubIn "
"i - - 0 - codeSubIn i - - 0 - nFinalSubIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDFalpha",1068,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 12, 1, 4, 0, 
"i - - 0 - iDS i - - 0 - id1pdfIn "
"i - - 0 - id2pdfIn d - - 0 - x1pdfIn "
"d - - 0 - x2pdfIn d - - 0 - pdf1In "
"d - - 0 - pdf2In d - - 0 - Q2FacIn "
"d - - 0 - alphaEMIn d - - 0 - alphaSIn "
"d - - 0 - Q2RenIn d - - 0 - scalupIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScalup",948,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - iDS d - - 0 - scalupIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKin",622,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 13, 1, 4, 0, 
"i - - 0 - iDS i - - 0 - id1In "
"i - - 0 - id2In d - - 0 - x1In "
"d - - 0 - x2In d - - 0 - sHatIn "
"d - - 0 - tHatIn d - - 0 - uHatIn "
"d - - 0 - pTHatIn d - - 0 - m3HatIn "
"d - - 0 - m4HatIn d - - 0 - thetaHatIn "
"d - - 0 - phiHatIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTypeMPI",980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"i - - 0 - codeMPIIn d - - 0 - pTMPIIn "
"i - - 0 '0' iAMPIIn i - - 0 '0' iBMPIIn "
"d - - 0 '1.' eMPIIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaReset",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"i - - 0 - i l - - 0 - nTryIn "
"l - - 0 - nSelIn l - - 0 - nAccIn "
"d - - 0 - sigGenIn d - - 0 - sigErrIn "
"d - - 0 - wtAccSumIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImpact",938,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - - 0 - bMPIIn d - - 0 - enhanceMPIIn "
"g - - 0 'true' bIsSetIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPartEvolved",1464,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - nMPIIn i - - 0 - nISRIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvolution",1297,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"d - - 0 - pTmaxMPIIn d - - 0 - pTmaxISRIn "
"d - - 0 - pTmaxFSRIn i - - 0 - nMPIIn "
"i - - 0 - nISRIn i - - 0 - nFSRinProcIn "
"i - - 0 - nFSRinResIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPTnow",836,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - pTnowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seta0MPI",707,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - a0MPIin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndOfFile",1176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 - atEOFin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeight",948,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - weightIn i - - 0 - lhaStrategyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHeader",917,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 11 - key u 'string' - 11 - val", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Info", 396, G__G__ShipGenDict_560_0_130, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Info", 522, G__G__ShipGenDict_560_0_131, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ShipGenDict_560_0_132, (int) ('u'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLInfo), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLSettings(void) {
   /* Pythia8::Settings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings));
   G__memfunc_setup("Settings",849,G__G__ShipGenDict_600_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__G__ShipGenDict_600_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::Info' - 0 - infoPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_600_0_3, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc/Index.xml\"' startFile g - - 0 'false' append "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reInit",619,G__G__ShipGenDict_600_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc/Index.xml\"' startFile u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__G__ShipGenDict_600_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - line g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readingFailed",1311,G__G__ShipGenDict_600_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__G__ShipGenDict_600_0_7, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - toFile g - - 0 'false' writeAll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__G__ShipGenDict_600_0_8, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os g - - 0 'false' writeAll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listAll",725,G__G__ShipGenDict_600_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__G__ShipGenDict_600_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_600_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - match u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAll",828,G__G__ShipGenDict_600_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFlag",598,G__G__ShipGenDict_600_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMode",609,G__G__ShipGenDict_600_0_14, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParm",620,G__G__ShipGenDict_600_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isWord",632,G__G__ShipGenDict_600_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMVec",583,G__G__ShipGenDict_600_0_17, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPVec",586,G__G__ShipGenDict_600_0_18, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFlag",675,G__G__ShipGenDict_600_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn g - - 0 - defaultIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMode",686,G__G__ShipGenDict_600_0_20, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"i - - 0 - minIn i - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParm",697,G__G__ShipGenDict_600_0_21, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"d - - 0 - minIn d - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWord",709,G__G__ShipGenDict_600_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'string' - 0 - defaultIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMVec",660,G__G__ShipGenDict_600_0_23, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"i - - 0 - minIn i - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPVec",663,G__G__ShipGenDict_600_0_24, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - defaultIn "
"g - - 0 - hasMinIn g - - 0 - hasMaxIn "
"d - - 0 - minIn d - - 0 - maxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__G__ShipGenDict_600_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__G__ShipGenDict_600_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__G__ShipGenDict_600_0_27, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__G__ShipGenDict_600_0_28, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvec",427,G__G__ShipGenDict_600_0_29, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvec",430,G__G__ShipGenDict_600_0_30, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flagDefault",1119,G__G__ShipGenDict_600_0_31, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("modeDefault",1130,G__G__ShipGenDict_600_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parmDefault",1141,G__G__ShipGenDict_600_0_33, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wordDefault",1153,G__G__ShipGenDict_600_0_34, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvecDefault",1136,G__G__ShipGenDict_600_0_35, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvecDefault",1139,G__G__ShipGenDict_600_0_36, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlagMap",984,G__G__ShipGenDict_600_0_37, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR), G__defined_typename("map<string,Flag>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModeMap",995,G__G__ShipGenDict_600_0_38, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR), G__defined_typename("map<string,Mode>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParmMap",1006,G__G__ShipGenDict_600_0_39, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR), G__defined_typename("map<string,Parm>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWordMap",1018,G__G__ShipGenDict_600_0_40, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR), G__defined_typename("map<string,Word>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMVecMap",969,G__G__ShipGenDict_600_0_41, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR), G__defined_typename("map<string,MVec>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPVecMap",972,G__G__ShipGenDict_600_0_42, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR), G__defined_typename("map<string,PVec>"), 0, 1, 1, 1, 0, "u 'string' - 0 - match", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__G__ShipGenDict_600_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn g - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__G__ShipGenDict_600_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__G__ShipGenDict_600_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__G__ShipGenDict_600_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'string' - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mvec",427,G__G__ShipGenDict_600_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pvec",430,G__G__ShipGenDict_600_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceMode",916,G__G__ShipGenDict_600_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn i - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceParm",927,G__G__ShipGenDict_600_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn d - - 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceMVec",890,G__G__ShipGenDict_600_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forcePVec",893,G__G__ShipGenDict_600_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - keyIn u 'vector<double,allocator<double> >' 'vector<double>' 0 - nowIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetFlag",925,G__G__ShipGenDict_600_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetMode",936,G__G__ShipGenDict_600_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetParm",947,G__G__ShipGenDict_600_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetWord",959,G__G__ShipGenDict_600_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetMVec",910,G__G__ShipGenDict_600_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPVec",913,G__G__ShipGenDict_600_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - keyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"g - - 0 - doListAll g - - 0 - doListString "
"u 'string' - 0 - match u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printQuiet",1077,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 - quiet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetTuneEE",1097,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetTunePP",1119,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTuneEE",986,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - eeTune", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTunePP",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - ppTune", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolString",1059,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributeValue",1489,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolAttributeValue",1885,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intAttributeValue",1788,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleAttributeValue",2092,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intVectorAttributeValue",2415,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleVectorAttributeValue",2719,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Settings", 849, G__G__ShipGenDict_600_0_73, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Settings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Settings", 975, G__G__ShipGenDict_600_0_74, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ShipGenDict_600_0_75, (int) ('u'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLSettings), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Settings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticleData(void) {
   /* Pythia8::ParticleData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData));
   G__memfunc_setup("ParticleData",1198,G__G__ShipGenDict_647_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__G__ShipGenDict_647_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::Rndm' - 0 - rndmPtrIn U 'Pythia8::Couplings' - 0 - couplingsPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_647_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"../xmldoc/ParticleData.xml\"' startFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reInit",619,G__G__ShipGenDict_647_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - startFile g - - 0 'true' xmlFormat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initWidths",1063,G__G__ShipGenDict_647_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >' 'vector<ResonanceWidths*>' 0 - resonancePtrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readXML",653,G__G__ShipGenDict_647_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inFile g - - 0 'true' reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listXML",685,G__G__ShipGenDict_647_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFF",552,G__G__ShipGenDict_647_0_8, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inFile g - - 0 'true' reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listFF",584,G__G__ShipGenDict_647_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__G__ShipGenDict_647_0_10, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - lineIn g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readingFailed",1311,G__G__ShipGenDict_647_0_11, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listAll",725,G__G__ShipGenDict_647_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__G__ShipGenDict_647_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listChanged",1126,G__G__ShipGenDict_647_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - changedRes u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_647_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 'false' changedOnly g - - 0 'true' changedRes "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_647_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idList u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_647_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - idList u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkTable",998,G__G__ShipGenDict_647_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkTable",998,G__G__ShipGenDict_647_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - verbosity u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticle",1117,G__G__ShipGenDict_647_0_20, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 '\" \"' nameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParticle",1117,G__G__ShipGenDict_647_0_21, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__G__ShipGenDict_647_0_22, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParticle",1040,G__G__ShipGenDict_647_0_23, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextId",620,G__G__ShipGenDict_647_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__G__ShipGenDict_647_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiName",813,G__G__ShipGenDict_647_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("names",532,G__G__ShipGenDict_647_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__G__ShipGenDict_647_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - spinTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__G__ShipGenDict_647_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - chargeTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__G__ShipGenDict_647_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - colTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__G__ShipGenDict_647_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - m0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__G__ShipGenDict_647_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__G__ShipGenDict_647_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__G__ShipGenDict_647_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__G__ShipGenDict_647_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__G__ShipGenDict_647_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - isResonanceIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__G__ShipGenDict_647_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - mayDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__G__ShipGenDict_647_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - doExternalDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__G__ShipGenDict_647_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - isVisibleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__G__ShipGenDict_647_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - doForceWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__G__ShipGenDict_647_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasAnti",712,G__G__ShipGenDict_647_0_42, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__G__ShipGenDict_647_0_43, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__G__ShipGenDict_647_0_44, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__G__ShipGenDict_647_0_45, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__G__ShipGenDict_647_0_46, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__G__ShipGenDict_647_0_47, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__G__ShipGenDict_647_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__G__ShipGenDict_647_0_49, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__G__ShipGenDict_647_0_50, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Min",449,G__G__ShipGenDict_647_0_51, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__G__ShipGenDict_647_0_52, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Max",451,G__G__ShipGenDict_647_0_53, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__G__ShipGenDict_647_0_54, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__G__ShipGenDict_647_0_55, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__G__ShipGenDict_647_0_56, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__G__ShipGenDict_647_0_57, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__G__ShipGenDict_647_0_58, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__G__ShipGenDict_647_0_59, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__G__ShipGenDict_647_0_60, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useBreitWigner",1455,G__G__ShipGenDict_647_0_61, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__G__ShipGenDict_647_0_62, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__G__ShipGenDict_647_0_63, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mRun",418,G__G__ShipGenDict_647_0_64, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mH", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__G__ShipGenDict_647_0_65, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__G__ShipGenDict_647_0_66, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__G__ShipGenDict_647_0_67, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__G__ShipGenDict_647_0_68, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__G__ShipGenDict_647_0_69, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__G__ShipGenDict_647_0_70, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__G__ShipGenDict_647_0_71, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMeson",734,G__G__ShipGenDict_647_0_72, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBaryon",839,G__G__ShipGenDict_647_0_73, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOctetHadron",1335,G__G__ShipGenDict_647_0_74, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("heaviestQuark",1373,G__G__ShipGenDict_647_0_75, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("baryonNumberType",1686,G__G__ShipGenDict_647_0_76, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__G__ShipGenDict_647_0_77, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn d - - 0 '1.' newSumBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__G__ShipGenDict_647_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resInit",734,G__G__ShipGenDict_647_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidth",842,G__G__ShipGenDict_647_0_80, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav g - - 0 'false' openOnly "
"g - - 0 'false' setBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthOpen",1244,G__G__ShipGenDict_647_0_81, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthStore",1367,G__G__ShipGenDict_647_0_82, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resOpenFrac",1112,G__G__ShipGenDict_647_0_83, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id1In i - - 0 '0' id2In "
"i - - 0 '0' id3In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthRescaleFactor",2152,G__G__ShipGenDict_647_0_84, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthChan",1220,G__G__ShipGenDict_647_0_85, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - idIn d - - 0 - mHat "
"i - - 0 '0' idAbs1 i - - 0 '0' idAbs2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particleDataEntryPtr",2070,G__G__ShipGenDict_647_0_86, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initCommon",1053,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - nameConv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolString",1059,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributeValue",1489,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boolAttributeValue",1885,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intAttributeValue",1788,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doubleAttributeValue",2092,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - line u 'string' - 0 - attribute", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleData", 1198, G__G__ShipGenDict_647_0_94, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ParticleData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleData", 1324, G__G__ShipGenDict_647_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ShipGenDict_647_0_96, (int) ('u'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleData), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ParticleData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLDecayChannel(void) {
   /* Pythia8::DecayChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel));
   G__memfunc_setup("DecayChannel",1183,G__G__ShipGenDict_651_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 0, 11, 1, 1, 0, 
"i - - 0 '0' onModeIn d - - 0 '0.' bRatioIn "
"i - - 0 '0' meModeIn i - - 0 '0' prod0 "
"i - - 0 '0' prod1 i - - 0 '0' prod2 "
"i - - 0 '0' prod3 i - - 0 '0' prod4 "
"i - - 0 '0' prod5 i - - 0 '0' prod6 "
"i - - 0 '0' prod7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onMode",610,G__G__ShipGenDict_651_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - onModeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bRatio",609,G__G__ShipGenDict_651_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - bRatioIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__G__ShipGenDict_651_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meMode",599,G__G__ShipGenDict_651_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - meModeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiplicity",1321,G__G__ShipGenDict_651_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - multIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("product",769,G__G__ShipGenDict_651_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - prodIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHasChanged",1298,G__G__ShipGenDict_651_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onMode",610,G__G__ShipGenDict_651_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bRatio",609,G__G__ShipGenDict_651_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meMode",599,G__G__ShipGenDict_651_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiplicity",1321,G__G__ShipGenDict_651_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("product",769,G__G__ShipGenDict_651_0_13, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__G__ShipGenDict_651_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__G__ShipGenDict_651_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__G__ShipGenDict_651_0_16, 103, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - id1 i - - 0 - id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__G__ShipGenDict_651_0_17, 103, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - id1 i - - 0 - id2 "
"i - - 0 - id3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("currentBR",919,G__G__ShipGenDict_651_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - currentBRIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("currentBR",919,G__G__ShipGenDict_651_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidth",1237,G__G__ShipGenDict_651_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - onShellWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidth",1237,G__G__ShipGenDict_651_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onShellWidthFactor",1844,G__G__ShipGenDict_651_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openSec",717,G__G__ShipGenDict_651_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - openSecIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openSec",717,G__G__ShipGenDict_651_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - idSgn", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DecayChannel", 1183, G__G__ShipGenDict_651_0_25, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 0, 1, 1, 1, 0, "u 'Pythia8::DecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DecayChannel", 1309, G__G__ShipGenDict_651_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ShipGenDict_651_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 0, "u 'Pythia8::DecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticleDataEntry(void) {
   /* Pythia8::ParticleDataEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry));
   G__memfunc_setup("ParticleDataEntry",1728,G__G__ShipGenDict_652_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 0, 10, 1, 1, 0, 
"i - - 0 '0' idIn u 'string' - 0 '\" \"' nameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleDataEntry",1728,G__G__ShipGenDict_652_0_2, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 0, 11, 1, 1, 0, 
"i - - 0 - idIn u 'string' - 0 - nameIn "
"u 'string' - 0 - antiNameIn i - - 0 '0' spinTypeIn "
"i - - 0 '0' chargeTypeIn i - - 0 '0' colTypeIn "
"d - - 0 '0.' m0In d - - 0 '0.' mWidthIn "
"d - - 0 '0.' mMinIn d - - 0 '0.' mMaxIn "
"d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDefaults",1156,G__G__ShipGenDict_652_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPtr",746,G__G__ShipGenDict_652_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ParticleData' - 0 - particleDataPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAll",613,G__G__ShipGenDict_652_0_5, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'string' - 0 - nameIn u 'string' - 0 - antiNameIn "
"i - - 0 '0' spinTypeIn i - - 0 '0' chargeTypeIn "
"i - - 0 '0' colTypeIn d - - 0 '0.' m0In "
"d - - 0 '0.' mWidthIn d - - 0 '0.' mMinIn "
"d - - 0 '0.' mMaxIn d - - 0 '0.' tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setName",717,G__G__ShipGenDict_652_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAntiName",1113,G__G__ShipGenDict_652_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNames",832,G__G__ShipGenDict_652_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nameIn u 'string' - 0 - antiNameIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpinType",1160,G__G__ShipGenDict_652_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - spinTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChargeType",1336,G__G__ShipGenDict_652_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - chargeTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setColType",1036,G__G__ShipGenDict_652_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - colTypeIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setM0",457,G__G__ShipGenDict_652_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMWidth",921,G__G__ShipGenDict_652_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - mWidthIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMin",701,G__G__ShipGenDict_652_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMax",703,G__G__ShipGenDict_652_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMinNoChange",1472,G__G__ShipGenDict_652_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMinIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMMaxNoChange",1474,G__G__ShipGenDict_652_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mMaxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTau0",678,G__G__ShipGenDict_652_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tau0In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsResonance",1446,G__G__ShipGenDict_652_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isResonanceIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMayDecay",1113,G__G__ShipGenDict_652_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 - mayDecayIn g - - 0 'true' countAsChanged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoExternalDecay",1832,G__G__ShipGenDict_652_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - doExternalDecayIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsVisible",1238,G__G__ShipGenDict_652_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - isVisibleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoForceWidth",1518,G__G__ShipGenDict_652_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - doForceWidthIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHasChanged",1298,G__G__ShipGenDict_652_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - hasChangedIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__G__ShipGenDict_652_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasAnti",712,G__G__ShipGenDict_652_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__G__ShipGenDict_652_0_27, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__G__ShipGenDict_652_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__G__ShipGenDict_652_0_29, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__G__ShipGenDict_652_0_30, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__G__ShipGenDict_652_0_31, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__G__ShipGenDict_652_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__G__ShipGenDict_652_0_33, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__G__ShipGenDict_652_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__G__ShipGenDict_652_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Min",449,G__G__ShipGenDict_652_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0Max",451,G__G__ShipGenDict_652_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__G__ShipGenDict_652_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__G__ShipGenDict_652_0_39, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__G__ShipGenDict_652_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__G__ShipGenDict_652_0_41, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__G__ShipGenDict_652_0_42, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doForceWidth",1218,G__G__ShipGenDict_652_0_43, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__G__ShipGenDict_652_0_44, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initBWmass",1025,G__G__ShipGenDict_652_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__G__ShipGenDict_652_0_46, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__G__ShipGenDict_652_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mRun",418,G__G__ShipGenDict_652_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mH", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useBreitWigner",1455,G__G__ShipGenDict_652_0_49, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__G__ShipGenDict_652_0_50, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__G__ShipGenDict_652_0_51, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__G__ShipGenDict_652_0_52, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__G__ShipGenDict_652_0_53, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__G__ShipGenDict_652_0_54, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__G__ShipGenDict_652_0_55, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__G__ShipGenDict_652_0_56, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMeson",734,G__G__ShipGenDict_652_0_57, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBaryon",839,G__G__ShipGenDict_652_0_58, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOctetHadron",1335,G__G__ShipGenDict_652_0_59, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("heaviestQuark",1373,G__G__ShipGenDict_652_0_60, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("baryonNumberType",1686,G__G__ShipGenDict_652_0_61, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '1' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearChannels",1331,G__G__ShipGenDict_652_0_62, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addChannel",994,G__G__ShipGenDict_652_0_63, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 '0' onMode d - - 0 '0.' bRatio "
"i - - 0 '0' meMode i - - 0 '0' prod0 "
"i - - 0 '0' prod1 i - - 0 '0' prod2 "
"i - - 0 '0' prod3 i - - 0 '0' prod4 "
"i - - 0 '0' prod5 i - - 0 '0' prod6 "
"i - - 0 '0' prod7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeChannels",1255,G__G__ShipGenDict_652_0_64, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel",729,G__G__ShipGenDict_652_0_65, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel",729,G__G__ShipGenDict_652_0_66, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescaleBR",883,G__G__ShipGenDict_652_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1.' newSumBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preparePick",1142,G__G__ShipGenDict_652_0_68, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 '0.' mHat "
"i - - 0 '0' idInFlav", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pickChannel",1120,G__G__ShipGenDict_652_0_69, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__G__ShipGenDict_652_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResonancePtr",1556,G__G__ShipGenDict_652_0_71, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLResonanceWidths), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resInit",734,G__G__ShipGenDict_652_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'Pythia8::Info' - 0 - infoPtrIn U 'Pythia8::Settings' - 0 - settingsPtrIn "
"U 'Pythia8::ParticleData' - 0 - particleDataPtrIn U 'Pythia8::Couplings' - 0 - couplingsPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidth",842,G__G__ShipGenDict_652_0_73, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn g - - 0 'false' openOnly "
"g - - 0 'false' setBR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthOpen",1244,G__G__ShipGenDict_652_0_74, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthStore",1367,G__G__ShipGenDict_652_0_75, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idSgn d - - 0 - mHat "
"i - - 0 '0' idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resOpenFrac",1112,G__G__ShipGenDict_652_0_76, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idSgn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthRescaleFactor",2152,G__G__ShipGenDict_652_0_77, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resWidthChan",1220,G__G__ShipGenDict_652_0_78, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - mHat i - - 0 '0' idAbs1 "
"i - - 0 '0' idAbs2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setConstituentMass",1920,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toLower",748,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - nameConv", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleDataEntry", 1728, G__G__ShipGenDict_652_0_81, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 0, 1, 1, 1, 0, "u 'Pythia8::ParticleDataEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleDataEntry", 1854, G__G__ShipGenDict_652_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ShipGenDict_652_0_83, (int) ('u'), G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 1, 1, 1, 1, 0, "u 'Pythia8::ParticleDataEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLEvent(void) {
   /* Pythia8::Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent));
   G__memfunc_setup("Event",514,G__G__ShipGenDict_668_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent), -1, 0, 1, 1, 1, 0, "i - - 0 '100' capacity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__ShipGenDict_668_0_2, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - oldEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__G__ShipGenDict_668_0_3, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - oldEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_668_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"\"' headerIn U 'Pythia8::ParticleData' - 0 '0' particleDataPtrIn "
"i - - 0 '100' startColTagIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__G__ShipGenDict_668_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__G__ShipGenDict_668_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__ShipGenDict_668_0_7, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__ShipGenDict_668_0_8, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__G__ShipGenDict_668_0_9, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__G__ShipGenDict_668_0_10, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__G__ShipGenDict_668_0_11, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__G__ShipGenDict_668_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__G__ShipGenDict_668_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Particle' - 0 - entryIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__G__ShipGenDict_668_0_14, 105, -1, -1, 0, 15, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - mother1 i - - 0 - mother2 "
"i - - 0 - daughter1 i - - 0 - daughter2 "
"i - - 0 - col i - - 0 - acol "
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - e "
"d - - 0 '0.' m d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__G__ShipGenDict_668_0_15, 105, -1, -1, 0, 12, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - mother1 i - - 0 - mother2 "
"i - - 0 - daughter1 i - - 0 - daughter2 "
"i - - 0 - col i - - 0 - acol "
"u 'Pythia8::Vec4' - 0 - p d - - 0 '0.' m "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__G__ShipGenDict_668_0_16, 105, -1, -1, 0, 11, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - col i - - 0 - acol "
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - e "
"d - - 0 '0.' m d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__G__ShipGenDict_668_0_17, 105, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - id i - - 0 - status "
"i - - 0 - col i - - 0 - acol "
"u 'Pythia8::Vec4' - 0 - p d - - 0 '0.' m "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvtPtr",945,G__G__ShipGenDict_668_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '-1' iSet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__G__ShipGenDict_668_0_19, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iCopy i - - 0 '0' newStatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_668_0_20, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_668_0_21, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_668_0_22, 121, -1, -1, 0, 2, 1, 1, 8, 
"g - - 0 - showScaleAndVertex g - - 0 'false' showMothersAndDaughters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__G__ShipGenDict_668_0_23, 121, -1, -1, 0, 3, 1, 1, 8, 
"g - - 0 - showScaleAndVertex g - - 0 - showMothersAndDaughters "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("popBack",704,G__G__ShipGenDict_668_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' nRemove", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove",654,G__G__ShipGenDict_668_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iFirst i - - 0 - iLast", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("undoDecay",924,G__G__ShipGenDict_668_0_26, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restorePtrs",1197,G__G__ShipGenDict_668_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveSize",842,G__G__ShipGenDict_668_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restoreSize",1183,G__G__ShipGenDict_668_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("savedSizeValue",1451,G__G__ShipGenDict_668_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initColTag",1006,G__G__ShipGenDict_668_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' colTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastColTag",1006,G__G__ShipGenDict_668_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextColTag",1017,G__G__ShipGenDict_668_0_33, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__G__ShipGenDict_668_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__G__ShipGenDict_668_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleSecond",1124,G__G__ShipGenDict_668_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleSecondIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleSecond",1124,G__G__ShipGenDict_668_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("motherList",1067,G__G__ShipGenDict_668_0_38, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughterList",1264,G__G__ShipGenDict_668_0_39, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusHepMC",1105,G__G__ShipGenDict_668_0_40, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iTopCopy",823,G__G__ShipGenDict_668_0_41, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopy",809,G__G__ShipGenDict_668_0_42, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iTopCopyId",996,G__G__ShipGenDict_668_0_43, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopyId",982,G__G__ShipGenDict_668_0_44, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sisterList",1078,G__G__ShipGenDict_668_0_45, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sisterListTopBot",1678,G__G__ShipGenDict_668_0_46, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 8, 
"i - - 0 - i g - - 0 'true' widenSearch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAncestor",1051,G__G__ShipGenDict_668_0_47, 103, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - iAncestor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rot",341,G__G__ShipGenDict_668_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - theta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_668_0_49, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_668_0_50, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ d - - 0 - gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_668_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotbst",670,G__G__ShipGenDict_668_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::RotBstMatrix' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearJunctions",1476,G__G__ShipGenDict_668_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("appendJunction",1474,G__G__ShipGenDict_668_0_54, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - kind i - - 0 - col0 "
"i - - 0 - col1 i - - 0 - col2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("appendJunction",1474,G__G__ShipGenDict_668_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Junction' - 0 - junctionIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sizeJunction",1285,G__G__ShipGenDict_668_0_56, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainsJunction",1593,G__G__ShipGenDict_668_0_57, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainsJunction",1593,G__G__ShipGenDict_668_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i g - - 0 - remainsIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kindJunction",1264,G__G__ShipGenDict_668_0_59, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colJunction",1160,G__G__ShipGenDict_668_0_60, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colJunction",1160,G__G__ShipGenDict_668_0_61, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - colIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endColJunction",1439,G__G__ShipGenDict_668_0_62, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endColJunction",1439,G__G__ShipGenDict_668_0_63, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - endColIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusJunction",1518,G__G__ShipGenDict_668_0_64, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusJunction",1518,G__G__ShipGenDict_668_0_65, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i i - - 0 - j "
"i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJunction",1162,G__G__ShipGenDict_668_0_66, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLJunction), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJunction",1162,G__G__ShipGenDict_668_0_67, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLJunction), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eraseJunction",1370,G__G__ShipGenDict_668_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveJunctionSize",1684,G__G__ShipGenDict_668_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("restoreJunctionSize",2025,G__G__ShipGenDict_668_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("listJunctions",1401,G__G__ShipGenDict_668_0_71, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__ShipGenDict_668_0_72, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLEvent), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Event' - 11 - addEvent", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__G__ShipGenDict_668_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLParticle(void) {
   /* Pythia8::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle));
   G__memfunc_setup("Particle",820,G__G__ShipGenDict_669_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__G__ShipGenDict_669_0_2, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 0, 15, 1, 1, 0, 
"i - - 0 - idIn i - - 0 '0' statusIn "
"i - - 0 '0' mother1In i - - 0 '0' mother2In "
"i - - 0 '0' daughter1In i - - 0 '0' daughter2In "
"i - - 0 '0' colIn i - - 0 '0' acolIn "
"d - - 0 '0.' pxIn d - - 0 '0.' pyIn "
"d - - 0 '0.' pzIn d - - 0 '0.' eIn "
"d - - 0 '0.' mIn d - - 0 '0.' scaleIn "
"d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__G__ShipGenDict_669_0_3, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 0, 12, 1, 1, 0, 
"i - - 0 - idIn i - - 0 - statusIn "
"i - - 0 - mother1In i - - 0 - mother2In "
"i - - 0 - daughter1In i - - 0 - daughter2In "
"i - - 0 - colIn i - - 0 - acolIn "
"u 'Pythia8::Vec4' - 0 - pIn d - - 0 '0.' mIn "
"d - - 0 '0.' scaleIn d - - 0 '9.' polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__G__ShipGenDict_669_0_4, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 0, 1, 1, 1, 0, "u 'Pythia8::Particle' - 11 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__ShipGenDict_669_0_5, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticle), -1, 1, 1, 1, 1, 0, "u 'Pythia8::Particle' - 11 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvtPtr",945,G__G__ShipGenDict_669_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::Event' - 0 - evtPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDEPtr",859,G__G__ShipGenDict_669_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ParticleDataEntry' - 0 '0' pdePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__G__ShipGenDict_669_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__ShipGenDict_669_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusPos",982,G__G__ShipGenDict_669_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusNeg",958,G__G__ShipGenDict_669_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusCode",1055,G__G__ShipGenDict_669_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - statusIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother1",704,G__G__ShipGenDict_669_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mother1In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother2",705,G__G__ShipGenDict_669_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mother2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mothers",770,G__G__ShipGenDict_669_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' mother1In i - - 0 '0' mother2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter1",901,G__G__ShipGenDict_669_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - daughter1In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter2",902,G__G__ShipGenDict_669_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - daughter2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughters",967,G__G__ShipGenDict_669_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' daughter1In i - - 0 '0' daughter2In", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__G__ShipGenDict_669_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - colIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acol",415,G__G__ShipGenDict_669_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - acolIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cols",433,G__G__ShipGenDict_669_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' colIn i - - 0 '0' acolIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__ShipGenDict_669_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 0 - pIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__ShipGenDict_669_0_23, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - pxIn d - - 0 - pyIn "
"d - - 0 - pzIn d - - 0 - eIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__G__ShipGenDict_669_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pxIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__G__ShipGenDict_669_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pyIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__G__ShipGenDict_669_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - pzIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__G__ShipGenDict_669_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - eIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__G__ShipGenDict_669_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__G__ShipGenDict_669_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - scaleIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pol",331,G__G__ShipGenDict_669_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - polIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__G__ShipGenDict_669_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 0 - vProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__G__ShipGenDict_669_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - xProdIn d - - 0 - yProdIn "
"d - - 0 - zProdIn d - - 0 - tProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xProd",525,G__G__ShipGenDict_669_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yProd",526,G__G__ShipGenDict_669_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - yProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zProd",527,G__G__ShipGenDict_669_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - zProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tProd",521,G__G__ShipGenDict_669_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tProdIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__G__ShipGenDict_669_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tauIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__G__ShipGenDict_669_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__ShipGenDict_669_0_39, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother1",704,G__G__ShipGenDict_669_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mother2",705,G__G__ShipGenDict_669_0_41, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter1",901,G__G__ShipGenDict_669_0_42, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughter2",902,G__G__ShipGenDict_669_0_43, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("col",318,G__G__ShipGenDict_669_0_44, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acol",415,G__G__ShipGenDict_669_0_45, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__ShipGenDict_669_0_46, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__G__ShipGenDict_669_0_47, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__G__ShipGenDict_669_0_48, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__G__ShipGenDict_669_0_49, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__G__ShipGenDict_669_0_50, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__G__ShipGenDict_669_0_51, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scale",520,G__G__ShipGenDict_669_0_52, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pol",331,G__G__ShipGenDict_669_0_53, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasVertex",954,G__G__ShipGenDict_669_0_54, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vProd",523,G__G__ShipGenDict_669_0_55, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xProd",525,G__G__ShipGenDict_669_0_56, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yProd",526,G__G__ShipGenDict_669_0_57, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zProd",527,G__G__ShipGenDict_669_0_58, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tProd",521,G__G__ShipGenDict_669_0_59, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau",330,G__G__ShipGenDict_669_0_60, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("idAbs",483,G__G__ShipGenDict_669_0_61, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusAbs",954,G__G__ShipGenDict_669_0_62, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFinal",710,G__G__ShipGenDict_669_0_63, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isRescatteredIncoming",2182,G__G__ShipGenDict_669_0_64, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2",159,G__G__ShipGenDict_669_0_65, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mCalc",480,G__G__ShipGenDict_669_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2Calc",530,G__G__ShipGenDict_669_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eCalc",472,G__G__ShipGenDict_669_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT",196,G__G__ShipGenDict_669_0_69, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT2",246,G__G__ShipGenDict_669_0_70, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mT",193,G__G__ShipGenDict_669_0_71, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mT2",243,G__G__ShipGenDict_669_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs",390,G__G__ShipGenDict_669_0_73, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pAbs2",440,G__G__ShipGenDict_669_0_74, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT",185,G__G__ShipGenDict_669_0_75, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eT2",235,G__G__ShipGenDict_669_0_76, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__G__ShipGenDict_669_0_77, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__G__ShipGenDict_669_0_78, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaXZ",712,G__G__ShipGenDict_669_0_79, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pPos",418,G__G__ShipGenDict_669_0_80, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pNeg",394,G__G__ShipGenDict_669_0_81, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__ShipGenDict_669_0_82, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__G__ShipGenDict_669_0_83, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vDec",386,G__G__ShipGenDict_669_0_84, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLVec4), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xDec",388,G__G__ShipGenDict_669_0_85, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("yDec",389,G__G__ShipGenDict_669_0_86, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zDec",390,G__G__ShipGenDict_669_0_87, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tDec",384,G__G__ShipGenDict_669_0_88, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("index",536,G__G__ShipGenDict_669_0_89, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statusHepMC",1105,G__G__ShipGenDict_669_0_90, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iTopCopy",823,G__G__ShipGenDict_669_0_91, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopy",809,G__G__ShipGenDict_669_0_92, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iTopCopyId",996,G__G__ShipGenDict_669_0_93, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iBotCopyId",982,G__G__ShipGenDict_669_0_94, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("motherList",1067,G__G__ShipGenDict_669_0_95, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daughterList",1264,G__G__ShipGenDict_669_0_96, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sisterList",1078,G__G__ShipGenDict_669_0_97, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "g - - 0 'false' traceTopBot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAncestor",1051,G__G__ShipGenDict_669_0_98, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iAncestor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("undoDecay",924,G__G__ShipGenDict_669_0_99, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__G__ShipGenDict_669_0_100, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nameWithStatus",1473,G__G__ShipGenDict_669_0_101, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 '20' maxLen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spinType",860,G__G__ShipGenDict_669_0_102, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chargeType",1036,G__G__ShipGenDict_669_0_103, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__G__ShipGenDict_669_0_104, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCharged",906,G__G__ShipGenDict_669_0_105, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNeutral",951,G__G__ShipGenDict_669_0_106, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colType",736,G__G__ShipGenDict_669_0_107, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m0",157,G__G__ShipGenDict_669_0_108, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mWidth",621,G__G__ShipGenDict_669_0_109, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMin",401,G__G__ShipGenDict_669_0_110, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mMax",403,G__G__ShipGenDict_669_0_111, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mSel",401,G__G__ShipGenDict_669_0_112, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constituentMass",1620,G__G__ShipGenDict_669_0_113, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tau0",378,G__G__ShipGenDict_669_0_114, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mayDecay",813,G__G__ShipGenDict_669_0_115, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("canDecay",792,G__G__ShipGenDict_669_0_116, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doExternalDecay",1532,G__G__ShipGenDict_669_0_117, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isResonance",1146,G__G__ShipGenDict_669_0_118, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVisible",938,G__G__ShipGenDict_669_0_119, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__G__ShipGenDict_669_0_120, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isQuark",736,G__G__ShipGenDict_669_0_121, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGluon",737,G__G__ShipGenDict_669_0_122, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiquark",941,G__G__ShipGenDict_669_0_123, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isParton",848,G__G__ShipGenDict_669_0_124, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHadron",824,G__G__ShipGenDict_669_0_125, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particleDataEntry",1760,G__G__ShipGenDict_669_0_126, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale3",786,G__G__ShipGenDict_669_0_127, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale4",787,G__G__ShipGenDict_669_0_128, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rescale5",788,G__G__ShipGenDict_669_0_129, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rot",341,G__G__ShipGenDict_669_0_130, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - thetaIn d - - 0 - phiIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_669_0_131, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_669_0_132, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - betaX d - - 0 - betaY "
"d - - 0 - betaZ d - - 0 - gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_669_0_133, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bst",329,G__G__ShipGenDict_669_0_134, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pBst d - - 0 - mBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__G__ShipGenDict_669_0_135, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::Vec4' - 11 - pBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bstback",730,G__G__ShipGenDict_669_0_136, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'Pythia8::Vec4' - 11 - pBst d - - 0 - mBst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotbst",670,G__G__ShipGenDict_669_0_137, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Pythia8::RotBstMatrix' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offsetHistory",1401,G__G__ShipGenDict_669_0_138, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - minMother i - - 0 - addMother "
"i - - 0 - minDaughter i - - 0 - addDaughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offsetCol",933,G__G__ShipGenDict_669_0_139, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - addCol", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__G__ShipGenDict_669_0_140, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8cLcLPythia(void) {
   /* Pythia8::Pythia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia));
   G__memfunc_setup("Pythia",623,G__G__ShipGenDict_1065_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"../xmldoc\"' xmlDir g - - 0 'true' printBanner", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readString",1043,G__G__ShipGenDict_1065_0_2, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - g - - 0 'true' warn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__G__ShipGenDict_1065_0_3, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - fileName g - - 0 'true' warn "
"i - - 0 'SUBRUNDEFAULT' subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__G__ShipGenDict_1065_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - fileName i - - 0 - subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__G__ShipGenDict_1065_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 'cin' is g - - 0 'true' warn "
"i - - 0 'SUBRUNDEFAULT' subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readFile",796,G__G__ShipGenDict_1065_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is i - - 0 - subrun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDFPtr",860,G__G__ShipGenDict_1065_0_7, 103, -1, -1, 0, 6, 1, 1, 0, 
"U 'Pythia8::PDF' - 0 - pdfAPtrIn U 'Pythia8::PDF' - 0 - pdfBPtrIn "
"U 'Pythia8::PDF' - 0 '0' pdfHardAPtrIn U 'Pythia8::PDF' - 0 '0' pdfHardBPtrIn "
"U 'Pythia8::PDF' - 0 '0' pdfPomAPtrIn U 'Pythia8::PDF' - 0 '0' pdfPomBPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLHAupPtr",1084,G__G__ShipGenDict_1065_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::LHAup' - 0 - lhaUpPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDecayPtr",1128,G__G__ShipGenDict_1065_0_9, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'Pythia8::DecayHandler' - 0 - decayHandlePtrIn u 'vector<int,allocator<int> >' 'vector<int>' 0 - handledParticlesIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRndmEnginePtr",1641,G__G__ShipGenDict_1065_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::RndmEngine' - 0 - rndmEnginePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUserHooksPtr",1573,G__G__ShipGenDict_1065_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::UserHooks' - 0 - userHooksPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMergingHooksPtr",1871,G__G__ShipGenDict_1065_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::MergingHooks' - 0 - mergingHooksPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamShapePtr",1512,G__G__ShipGenDict_1065_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::BeamShape' - 0 - beamShapePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaPtr",1139,G__G__ShipGenDict_1065_0_14, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::SigmaProcess' - 0 - sigmaPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResonancePtr",1568,G__G__ShipGenDict_1065_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::ResonanceWidths' - 0 - resonancePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setShowerPtr",1274,G__G__ShipGenDict_1065_0_16, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'Pythia8::TimeShower' - 0 - timesDecPtrIn U 'Pythia8::TimeShower' - 0 '0' timesPtrIn "
"U 'Pythia8::SpaceShower' - 0 '0' spacePtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_17, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_18, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - idAin i - - 0 - idBin "
"d - - 0 - eCMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_19, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - idAin i - - 0 - idBin "
"d - - 0 - eAin d - - 0 - eBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_20, 103, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - idAin i - - 0 - idBin "
"d - - 0 - pxAin d - - 0 - pyAin "
"d - - 0 - pzAin d - - 0 - pxBin "
"d - - 0 - pyBin d - - 0 - pzBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_21, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - LesHouchesEventFile g - - 0 'false' skipInit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ShipGenDict_1065_0_22, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Pythia8::LHAup' - 0 - lhaUpPtrIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,G__G__ShipGenDict_1065_0_23, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceTimeShower",1558,G__G__ShipGenDict_1065_0_24, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - iBeg i - - 0 - iEnd "
"d - - 0 - pTmax i - - 0 '0' nBranchMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceHadronLevel",1635,G__G__ShipGenDict_1065_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' findJunctions", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("moreDecays",1036,G__G__ShipGenDict_1065_0_26, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("forceRHadronDecays",1814,G__G__ShipGenDict_1065_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHAeventList",1171,G__G__ShipGenDict_1065_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHAeventSkip",1166,G__G__ShipGenDict_1065_0_29, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nSkip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stat",444,G__G__ShipGenDict_1065_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("statistics",1099,G__G__ShipGenDict_1065_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 'false' all g - - 0 'false' reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flag",410,G__G__ShipGenDict_1065_0_32, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mode",421,G__G__ShipGenDict_1065_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parm",432,G__G__ShipGenDict_1065_0_34, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("word",444,G__G__ShipGenDict_1065_0_35, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPDFPtr",848,G__G__ShipGenDict_1065_0_36, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPDF), -1, 0, 2, 1, 1, 0, 
"i - - 0 - idIn i - - 0 '1' sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pythia",623,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia), -1, 0, 1, 1, 4, 0, "u 'Pythia8::Pythia' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia), -1, 1, 1, 1, 4, 0, "u 'Pythia8::Pythia' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("banner",630,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readSubrun",1051,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - line g - - 0 'true' warn "
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkSettings",1359,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkBeams",998,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initKinematics",1468,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPDFs",769,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextKinematics",1479,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boostAndVertex",1464,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"g - - 0 - toLab g - - 0 - setVertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doRHadronDecays",1498,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initSLHA",732,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pythia", 749, G__G__ShipGenDict_1065_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPythia8Generator(void) {
   /* Pythia8Generator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator));
   G__memfunc_setup("Pythia8Generator",1614,G__G__ShipGenDict_1071_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8Generator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__G__ShipGenDict_1071_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__ShipGenDict_1071_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "!", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "!", (void*) NULL, 1);
   G__memfunc_setup("SetMom",597,G__G__ShipGenDict_1071_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__G__ShipGenDict_1071_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHNLId",699,G__G__ShipGenDict_1071_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseDeepCopy",1094,G__G__ShipGenDict_1071_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandom1",959,G__G__ShipGenDict_1071_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandom3",961,G__G__ShipGenDict_1071_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPythiaInstance",1732,G__G__ShipGenDict_1071_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1071_0_13, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Pythia8Generator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1071_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia8Generator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1071_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Pythia8Generator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1071_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Pythia8Generator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1071_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1071_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia8Generator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1071_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pythia8Generator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1071_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pythia8Generator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1071_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pythia8Generator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Pythia8Generator", 1740, G__G__ShipGenDict_1071_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHNLPythia8Generator(void) {
   /* HNLPythia8Generator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator));
   G__memfunc_setup("HNLPythia8Generator",1840,G__G__ShipGenDict_1170_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__G__ShipGenDict_1170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__ShipGenDict_1170_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "!", (void*) NULL, 0);
   G__memfunc_setup("List",412,G__G__ShipGenDict_1170_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", "!", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "!", (void*) NULL, 1);
   G__memfunc_setup("SetMom",597,G__G__ShipGenDict_1170_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__G__ShipGenDict_1170_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHNLId",699,G__G__ShipGenDict_1170_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLmin",700,G__G__ShipGenDict_1170_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLmax",702,G__G__ShipGenDict_1170_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandom1",959,G__G__ShipGenDict_1170_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandom3",961,G__G__ShipGenDict_1170_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseExternalFile",1520,G__G__ShipGenDict_1170_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - x i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseDeepCopy",1094,G__G__ShipGenDict_1170_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPythiaInstance",1764,G__G__ShipGenDict_1170_0_16, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_Pythia8cLcLPythia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1170_0_17, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HNLPythia8Generator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1170_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNLPythia8Generator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1170_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HNLPythia8Generator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1170_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HNLPythia8Generator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1170_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1170_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNLPythia8Generator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1170_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HNLPythia8Generator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1170_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNLPythia8Generator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1170_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HNLPythia8Generator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HNLPythia8Generator", 1840, G__G__ShipGenDict_1170_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_HNLPythia8Generator), -1, 0, 1, 1, 1, 0, "u 'HNLPythia8Generator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HNLPythia8Generator", 1966, G__G__ShipGenDict_1170_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenieGenerator(void) {
   /* GenieGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator));
   G__memfunc_setup("GenieGenerator",1423,G__G__ShipGenDict_1223_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OldReadEvent",1181,G__G__ShipGenDict_1223_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1223_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - i - - 0 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1223_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("GetNevents",1027,G__G__ShipGenDict_1223_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuOnly",613,G__G__ShipGenDict_1223_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositions",1268,G__G__ShipGenDict_1223_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - zTa d - 'Double_t' 0 '-3400.' zS "
"d - 'Double_t' 0 '2650.' zE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBox",562,G__G__ShipGenDict_1223_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - dVec u 'TVector3' - 0 - box", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanMaterialBudget",1803,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"D - 'Double_t' 10 - start D - 'Double_t' 10 - end "
"D - 'Double_t' 0 - mparam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1223_0_12, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GenieGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1223_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenieGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1223_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GenieGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1223_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GenieGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1223_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1223_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenieGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1223_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenieGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1223_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenieGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1223_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenieGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenieGenerator", 1423, G__G__ShipGenDict_1223_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_GenieGenerator), -1, 0, 1, 1, 1, 0, "u 'GenieGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenieGenerator", 1549, G__G__ShipGenDict_1223_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNuageGenerator(void) {
   /* NuageGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator));
   G__memfunc_setup("NuageGenerator",1431,G__G__ShipGenDict_1228_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1228_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - i - - 0 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1228_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("GetNevents",1027,G__G__ShipGenDict_1228_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuOnly",613,G__G__ShipGenDict_1228_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositions",1268,G__G__ShipGenDict_1228_0_7, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - zTa d - 'Double_t' 0 '-3400.' zS "
"d - 'Double_t' 0 '2650.' zE d - 'Double_t' 0 '0' xS "
"d - 'Double_t' 0 '0' xE d - 'Double_t' 0 '0' yS "
"d - 'Double_t' 0 '0' yE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBox",562,G__G__ShipGenDict_1228_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - dVec u 'TVector3' - 0 - box", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanMaterialBudget",1803,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"D - 'Double_t' 10 - start D - 'Double_t' 10 - end "
"D - 'Double_t' 0 - mparam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1228_0_11, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NuageGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1228_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NuageGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1228_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NuageGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1228_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NuageGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1228_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1228_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NuageGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1228_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NuageGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1228_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NuageGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1228_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NuageGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NuageGenerator", 1431, G__G__ShipGenDict_1228_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_NuageGenerator), -1, 0, 1, 1, 1, 0, "u 'NuageGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NuageGenerator", 1557, G__G__ShipGenDict_1228_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNtupleGenerator(void) {
   /* NtupleGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator));
   G__memfunc_setup("NtupleGenerator",1567,G__G__ShipGenDict_1229_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1229_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - i - - 0 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1229_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("GetNevents",1027,G__G__ShipGenDict_1229_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1229_0_6, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NtupleGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1229_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1229_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NtupleGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1229_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NtupleGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1229_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1229_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1229_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NtupleGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1229_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NtupleGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1229_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NtupleGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NtupleGenerator", 1567, G__G__ShipGenDict_1229_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_NtupleGenerator), -1, 0, 1, 1, 1, 0, "u 'NtupleGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NtupleGenerator", 1693, G__G__ShipGenDict_1229_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonBackGenerator(void) {
   /* MuonBackGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator));
   G__memfunc_setup("MuonBackGenerator",1719,G__G__ShipGenDict_1230_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1230_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - i - - 0 - - "
"g - 'Bool_t' 10 - fl", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1230_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("GetNevents",1027,G__G__ShipGenDict_1230_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "!", (void*) NULL, 0);
   G__memfunc_setup("CloseFile",886,G__G__ShipGenDict_1230_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "!", (void*) NULL, 0);
   G__memfunc_setup("SetPhiRandom",1198,G__G__ShipGenDict_1230_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSmearBeam",1177,G__G__ShipGenDict_1230_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1230_0_9, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MuonBackGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1230_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonBackGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1230_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MuonBackGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1230_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MuonBackGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1230_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1230_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonBackGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1230_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonBackGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1230_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonBackGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1230_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonBackGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MuonBackGenerator", 1719, G__G__ShipGenDict_1230_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_MuonBackGenerator), -1, 0, 1, 1, 1, 0, "u 'MuonBackGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonBackGenerator", 1845, G__G__ShipGenDict_1230_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCosmicsGenerator(void) {
   /* CosmicsGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator));
   G__memfunc_setup("CosmicsGenerator",1656,G__G__ShipGenDict_1248_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1248_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - largeMom", "!", (void*) NULL, 1);
   G__memfunc_setup("GenerateDynamics",1635,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorBox",1123,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1248_0_6, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CosmicsGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1248_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CosmicsGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1248_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CosmicsGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1248_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CosmicsGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1248_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1248_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CosmicsGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1248_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CosmicsGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1248_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CosmicsGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1248_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CosmicsGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CosmicsGenerator", 1656, G__G__ShipGenDict_1248_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_CosmicsGenerator), -1, 0, 1, 1, 1, 0, "u 'CosmicsGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CosmicsGenerator", 1782, G__G__ShipGenDict_1248_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuDISGenerator(void) {
   /* MuDISGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator));
   G__memfunc_setup("MuDISGenerator",1353,G__G__ShipGenDict_1250_0_1, 105, G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairPrimaryGenerator' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1250_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - i - - 0 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__ShipGenDict_1250_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", "!", (void*) NULL, 1);
   G__memfunc_setup("GetNevents",1027,G__G__ShipGenDict_1250_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositions",1268,G__G__ShipGenDict_1250_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - zTa d - 'Double_t' 0 '-3400.' zS "
"d - 'Double_t' 0 '2650.' zE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanMaterialBudget",1803,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"D - 'Double_t' 10 - start D - 'Double_t' 10 - end "
"D - 'Double_t' 0 - mparam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ShipGenDict_1250_0_8, 85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MuDISGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ShipGenDict_1250_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuDISGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ShipGenDict_1250_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MuDISGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ShipGenDict_1250_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MuDISGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ShipGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ShipGenDict_1250_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ShipGenDict_1250_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuDISGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ShipGenDict_1250_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuDISGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ShipGenDict_1250_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuDISGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ShipGenDict_1250_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuDISGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MuDISGenerator", 1353, G__G__ShipGenDict_1250_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__ShipGenDictLN_MuDISGenerator), -1, 0, 1, 1, 1, 0, "u 'MuDISGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuDISGenerator", 1479, G__G__ShipGenDict_1250_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__ShipGenDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__ShipGenDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__ShipGenDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ShipGenDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_FairPrimaryGenerator = { "FairPrimaryGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_FairGenerator = { "FairGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia6Generator = { "Pythia6Generator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TPythia6 = { "TPythia6" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_tPythia6Generator = { "tPythia6Generator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8 = { "Pythia8" , 110 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLRndmEngine = { "Pythia8::RndmEngine" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLRndm = { "Pythia8::Rndm" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLRotBstMatrix = { "Pythia8::RotBstMatrix" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLVec4 = { "Pythia8::Vec4" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLInfo = { "Pythia8::Info" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR = { "map<int,long,less<int>,allocator<pair<const int,long> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLSettings = { "Pythia8::Settings" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR = { "map<string,Pythia8::Flag,less<string>,allocator<pair<const string,Pythia8::Flag> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR = { "map<string,Pythia8::Mode,less<string>,allocator<pair<const string,Pythia8::Mode> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR = { "map<string,Pythia8::Parm,less<string>,allocator<pair<const string,Pythia8::Parm> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR = { "map<string,Pythia8::Word,less<string>,allocator<pair<const string,Pythia8::Word> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR = { "map<string,Pythia8::MVec,less<string>,allocator<pair<const string,Pythia8::MVec> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR = { "map<string,Pythia8::PVec,less<string>,allocator<pair<const string,Pythia8::PVec> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLCouplings = { "Pythia8::Couplings" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLParticleData = { "Pythia8::ParticleData" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLResonanceWidths = { "Pythia8::ResonanceWidths" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLDecayChannel = { "Pythia8::DecayChannel" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry = { "Pythia8::ParticleDataEntry" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR = { "vector<Pythia8::DecayChannel,allocator<Pythia8::DecayChannel> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::DecayChannel,allocator<Pythia8::DecayChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR = { "vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ResonanceWidths*,allocator<Pythia8::ResonanceWidths*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR = { "map<int,Pythia8::ParticleDataEntry,less<int>,allocator<pair<const int,Pythia8::ParticleDataEntry> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLEvent = { "Pythia8::Event" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLParticle = { "Pythia8::Particle" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLJunction = { "Pythia8::Junction" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR = { "vector<Pythia8::Particle,allocator<Pythia8::Particle> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Particle,allocator<Pythia8::Particle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR = { "vector<Pythia8::Junction,allocator<Pythia8::Junction> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Junction,allocator<Pythia8::Junction> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR = { "vector<Pythia8::SingleClusterJet,allocator<Pythia8::SingleClusterJet> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleClusterJet,allocator<Pythia8::SingleClusterJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR = { "vector<Pythia8::SingleCellJet,allocator<Pythia8::SingleCellJet> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleCellJet,allocator<Pythia8::SingleCellJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR = { "vector<Pythia8::SingleSlowJet,allocator<Pythia8::SingleSlowJet> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SingleSlowJet,allocator<Pythia8::SingleSlowJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLPDF = { "Pythia8::PDF" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOpairlEstringcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEstringcOintgRsPgRsPgRsPgR = { "map<int,pair<string,int>,less<int>,allocator<pair<const int,pair<string,int> > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLBeamParticle = { "Pythia8::BeamParticle" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR = { "vector<Pythia8::ResolvedParton,allocator<Pythia8::ResolvedParton> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ResolvedParton,allocator<Pythia8::ResolvedParton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLBeamShape = { "Pythia8::BeamShape" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR = { "vector<Pythia8::BoseEinsteinHadron,allocator<Pythia8::BoseEinsteinHadron> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::BoseEinsteinHadron,allocator<Pythia8::BoseEinsteinHadron> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR = { "vector<Pythia8::ColSinglet,allocator<Pythia8::ColSinglet> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ColSinglet,allocator<Pythia8::ColSinglet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR = { "vector<Pythia8::StringRegion,allocator<Pythia8::StringRegion> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::StringRegion,allocator<Pythia8::StringRegion> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR = { "map<int,pair<int,int>,less<int>,allocator<pair<const int,pair<int,int> > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR = { "map<pair<int,int>,int,less<pair<int,int> >,allocator<pair<const pair<int,int>,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR = { "map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > >,less<int>,allocator<pair<const int,map<double,complex<double>,less<double>,allocator<pair<const double,complex<double> > > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR = { "vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >,allocator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > >,allocator<vector<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > >,allocator<set<pair<int,int>,less<pair<int,int> >,allocator<pair<int,int> > > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR = { "vector<Pythia8::HadronScatterPair,allocator<Pythia8::HadronScatterPair> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::HadronScatterPair,allocator<Pythia8::HadronScatterPair> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLPartonSystems = { "Pythia8::PartonSystems" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR = { "vector<Pythia8::PartonSystem,allocator<Pythia8::PartonSystem> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::PartonSystem,allocator<Pythia8::PartonSystem> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLLHAup = { "Pythia8::LHAup" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR = { "vector<Pythia8::LHAParticle,allocator<Pythia8::LHAParticle> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHAParticle,allocator<Pythia8::LHAParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR = { "vector<Pythia8::LHAProcess,allocator<Pythia8::LHAProcess> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHAProcess,allocator<Pythia8::LHAProcess> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLSigmaTotal = { "Pythia8::SigmaTotal" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR = { "vector<Pythia8::LHdecayChannel,allocator<Pythia8::LHdecayChannel> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHdecayChannel,allocator<Pythia8::LHdecayChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR = { "vector<Pythia8::LHdecayTable,allocator<Pythia8::LHdecayTable> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHdecayTable,allocator<Pythia8::LHdecayTable> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR = { "vector<Pythia8::LHblock<int>,allocator<Pythia8::LHblock<int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::LHblock<int>,allocator<Pythia8::LHblock<int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR = { "map<string,Pythia8::LHgenericBlock,less<string>,allocator<pair<const string,Pythia8::LHgenericBlock> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLSLHAinterface = { "Pythia8::SLHAinterface" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLSigmaProcess = { "Pythia8::SigmaProcess" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR = { "vector<Pythia8::InBeam,allocator<Pythia8::InBeam> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::InBeam,allocator<Pythia8::InBeam> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR = { "vector<Pythia8::InPair,allocator<Pythia8::InPair> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::InPair,allocator<Pythia8::InPair> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLUserHooks = { "Pythia8::UserHooks" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLMergingHooks = { "Pythia8::MergingHooks" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLTimeShower = { "Pythia8::TimeShower" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR = { "vector<Pythia8::TimeDipoleEnd,allocator<Pythia8::TimeDipoleEnd> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::TimeDipoleEnd,allocator<Pythia8::TimeDipoleEnd> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR = { "vector<complex<double>,allocator<complex<double> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<complex<double>,allocator<complex<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR = { "vector<vector<complex<double>,allocator<complex<double> > >,allocator<vector<complex<double>,allocator<complex<double> > > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<complex<double>,allocator<complex<double> > >,allocator<vector<complex<double>,allocator<complex<double> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR = { "vector<Pythia8::HelicityParticle,allocator<Pythia8::HelicityParticle> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::HelicityParticle,allocator<Pythia8::HelicityParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR = { "vector<Pythia8::GammaMatrix,allocator<Pythia8::GammaMatrix> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::GammaMatrix,allocator<Pythia8::GammaMatrix> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR = { "vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR = { "vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >,allocator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> >,allocator<vector<Pythia8::Wave4,allocator<Pythia8::Wave4> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLDecayHandler = { "Pythia8::DecayHandler" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR = { "vector<Pythia8::Vec4,allocator<Pythia8::Vec4> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Vec4,allocator<Pythia8::Vec4> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR = { "vector<Pythia8::FlavContainer,allocator<Pythia8::FlavContainer> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::FlavContainer,allocator<Pythia8::FlavContainer> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLRHadrons = { "Pythia8::RHadrons" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLHadronLevel = { "Pythia8::HadronLevel" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR = { "vector<Pythia8::SigmaProcess*,allocator<Pythia8::SigmaProcess*> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SigmaProcess*,allocator<Pythia8::SigmaProcess*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLSpaceShower = { "Pythia8::SpaceShower" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR = { "vector<Pythia8::SpaceDipoleEnd,allocator<Pythia8::SpaceDipoleEnd> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::SpaceDipoleEnd,allocator<Pythia8::SpaceDipoleEnd> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLPartonLevel = { "Pythia8::PartonLevel" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR = { "vector<Pythia8::Clustering,allocator<Pythia8::Clustering> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::Clustering,allocator<Pythia8::Clustering> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR = { "vector<Pythia8::History*,allocator<Pythia8::History*> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::History*,allocator<Pythia8::History*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR = { "map<double,Pythia8::History*,less<double>,allocator<pair<const double,Pythia8::History*> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR = { "vector<Pythia8::ProcessContainer*,allocator<Pythia8::ProcessContainer*> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Pythia8::ProcessContainer*,allocator<Pythia8::ProcessContainer*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLProcessLevel = { "Pythia8::ProcessLevel" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLMerging = { "Pythia8::Merging" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8cLcLPythia = { "Pythia8::Pythia" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Pythia8Generator = { "Pythia8Generator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_FairLogger = { "FairLogger" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_HNLPythia8Generator = { "HNLPythia8Generator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_GenieGenerator = { "GenieGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_NuageGenerator = { "NuageGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_NtupleGenerator = { "NtupleGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_MuonBackGenerator = { "MuonBackGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_Co3Rng = { "Co3Rng" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_CosmicsGenerator = { "CosmicsGenerator" , 99 , -1 };
G__linked_taginfo G__G__ShipGenDictLN_MuDISGenerator = { "MuDISGenerator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__ShipGenDict() {
  G__G__ShipGenDictLN_TClass.tagnum = -1 ;
  G__G__ShipGenDictLN_TBuffer.tagnum = -1 ;
  G__G__ShipGenDictLN_TMemberInspector.tagnum = -1 ;
  G__G__ShipGenDictLN_TObject.tagnum = -1 ;
  G__G__ShipGenDictLN_TNamed.tagnum = -1 ;
  G__G__ShipGenDictLN_TString.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_string.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TClonesArray.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_FairPrimaryGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_FairGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia6Generator.tagnum = -1 ;
  G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TFile.tagnum = -1 ;
  G__G__ShipGenDictLN_TPythia6.tagnum = -1 ;
  G__G__ShipGenDictLN_tPythia6Generator.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLRndmEngine.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLRndm.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLRotBstMatrix.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLVec4.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLInfo.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLSettings.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLCouplings.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLParticleData.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLResonanceWidths.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLDecayChannel.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLEvent.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLParticle.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLJunction.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLPDF.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOpairlEstringcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEstringcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLBeamParticle.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLBeamShape.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLPartonSystems.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLLHAup.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLSigmaTotal.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLSLHAinterface.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLSigmaProcess.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLUserHooks.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLMergingHooks.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLTimeShower.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLDecayHandler.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLRHadrons.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLHadronLevel.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLSpaceShower.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLPartonLevel.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLProcessLevel.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLMerging.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8cLcLPythia.tagnum = -1 ;
  G__G__ShipGenDictLN_Pythia8Generator.tagnum = -1 ;
  G__G__ShipGenDictLN_TTree.tagnum = -1 ;
  G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_FairLogger.tagnum = -1 ;
  G__G__ShipGenDictLN_HNLPythia8Generator.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__ShipGenDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__ShipGenDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__ShipGenDictLN_TVector3.tagnum = -1 ;
  G__G__ShipGenDictLN_GenieGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShipGenDictLN_NuageGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_NtupleGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_MuonBackGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_Co3Rng.tagnum = -1 ;
  G__G__ShipGenDictLN_CosmicsGenerator.tagnum = -1 ;
  G__G__ShipGenDictLN_MuDISGenerator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__ShipGenDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_string);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_FairPrimaryGenerator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_FairGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia6Generator),sizeof(Pythia6Generator),-1,324864,(char*)NULL,G__setup_memvarPythia6Generator,G__setup_memfuncPythia6Generator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TPythia6);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_tPythia6Generator),sizeof(tPythia6Generator),-1,324864,(char*)NULL,G__setup_memvartPythia6Generator,G__setup_memfunctPythia6Generator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLRndmEngine);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLRndm);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLRotBstMatrix);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLVec4);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLInfo),sizeof(Pythia8::Info),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLInfo,G__setup_memfuncPythia8cLcLInfo);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOlongcOlesslEintgRcOallocatorlEpairlEconstsPintcOlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLSettings),sizeof(Pythia8::Settings),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLSettings,G__setup_memfuncPythia8cLcLSettings);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLFlagcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLFlaggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLModecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLModegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLParmcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLParmgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLWordcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLWordgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLMVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLMVecgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLPVeccOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLPVecgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLCouplings);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLParticleData),sizeof(Pythia8::ParticleData),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLParticleData,G__setup_memfuncPythia8cLcLParticleData);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLResonanceWidths);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLDecayChannel),sizeof(Pythia8::DecayChannel),-1,262400,(char*)NULL,G__setup_memvarPythia8cLcLDecayChannel,G__setup_memfuncPythia8cLcLDecayChannel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLParticleDataEntry),sizeof(Pythia8::ParticleDataEntry),-1,296192,(char*)NULL,G__setup_memvarPythia8cLcLParticleDataEntry,G__setup_memfuncPythia8cLcLParticleDataEntry);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLDecayChannelcOallocatorlEPythia8cLcLDecayChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResonanceWidthsmUcOallocatorlEPythia8cLcLResonanceWidthsmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOPythia8cLcLParticleDataEntrycOlesslEintgRcOallocatorlEpairlEconstsPintcOPythia8cLcLParticleDataEntrygRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLEvent),sizeof(Pythia8::Event),-1,264960,(char*)NULL,G__setup_memvarPythia8cLcLEvent,G__setup_memfuncPythia8cLcLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLParticle),sizeof(Pythia8::Particle),-1,297728,(char*)NULL,G__setup_memvarPythia8cLcLParticle,G__setup_memfuncPythia8cLcLParticle);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLJunction);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLParticlecOallocatorlEPythia8cLcLParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLJunctioncOallocatorlEPythia8cLcLJunctiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleClusterJetcOallocatorlEPythia8cLcLSingleClusterJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleCellJetcOallocatorlEPythia8cLcLSingleCellJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSingleSlowJetcOallocatorlEPythia8cLcLSingleSlowJetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLPDF);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOpairlEstringcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEstringcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLBeamParticle);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLResolvedPartoncOallocatorlEPythia8cLcLResolvedPartongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLBeamShape);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLBoseEinsteinHadroncOallocatorlEPythia8cLcLBoseEinsteinHadrongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLColSingletcOallocatorlEPythia8cLcLColSingletgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLStringRegioncOallocatorlEPythia8cLcLStringRegiongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOpairlEintcOintgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEdoublecOcomplexlEdoublegRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOcomplexlEdoublegRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_setlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRcOallocatorlEvectorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOallocatorlEsetlEpairlEintcOintgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHadronScatterPaircOallocatorlEPythia8cLcLHadronScatterPairgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLPartonSystems);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLPartonSystemcOallocatorlEPythia8cLcLPartonSystemgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLLHAup);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAParticlecOallocatorlEPythia8cLcLLHAParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHAProcesscOallocatorlEPythia8cLcLLHAProcessgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLSigmaTotal);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayChannelcOallocatorlEPythia8cLcLLHdecayChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHdecayTablecOallocatorlEPythia8cLcLLHdecayTablegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLLHblocklEintgRcOallocatorlEPythia8cLcLLHblocklEintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOPythia8cLcLLHgenericBlockcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOPythia8cLcLLHgenericBlockgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLSLHAinterface);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLSigmaProcess);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInBeamcOallocatorlEPythia8cLcLInBeamgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLInPaircOallocatorlEPythia8cLcLInPairgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLUserHooks);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLMergingHooks);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLTimeShower);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLTimeDipoleEndcOallocatorlEPythia8cLcLTimeDipoleEndgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRcOallocatorlEvectorlEcomplexlEdoublegRcOallocatorlEcomplexlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHelicityParticlecOallocatorlEPythia8cLcLHelicityParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLGammaMatrixcOallocatorlEPythia8cLcLGammaMatrixgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRcOallocatorlEvectorlEPythia8cLcLWave4cOallocatorlEPythia8cLcLWave4gRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLDecayHandler);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLVec4cOallocatorlEPythia8cLcLVec4gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLFlavContainercOallocatorlEPythia8cLcLFlavContainergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLRHadrons);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLHadronLevel);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSigmaProcessmUcOallocatorlEPythia8cLcLSigmaProcessmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLSpaceShower);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLSpaceDipoleEndcOallocatorlEPythia8cLcLSpaceDipoleEndgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLPartonLevel);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLClusteringcOallocatorlEPythia8cLcLClusteringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLHistorymUcOallocatorlEPythia8cLcLHistorymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEdoublecOPythia8cLcLHistorymUcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOPythia8cLcLHistorymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlEPythia8cLcLProcessContainermUcOallocatorlEPythia8cLcLProcessContainermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLProcessLevel);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLMerging);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8cLcLPythia),sizeof(Pythia8::Pythia),-1,265984,(char*)NULL,G__setup_memvarPythia8cLcLPythia,G__setup_memfuncPythia8cLcLPythia);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Pythia8Generator),sizeof(Pythia8Generator),-1,324864,(char*)NULL,G__setup_memvarPythia8Generator,G__setup_memfuncPythia8Generator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_FairLogger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_HNLPythia8Generator),sizeof(HNLPythia8Generator),-1,324864,(char*)NULL,G__setup_memvarHNLPythia8Generator,G__setup_memfuncHNLPythia8Generator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_GenieGenerator),sizeof(GenieGenerator),-1,324864,(char*)NULL,G__setup_memvarGenieGenerator,G__setup_memfuncGenieGenerator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_NuageGenerator),sizeof(NuageGenerator),-1,324864,(char*)NULL,G__setup_memvarNuageGenerator,G__setup_memfuncNuageGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_NtupleGenerator),sizeof(NtupleGenerator),-1,324864,(char*)NULL,G__setup_memvarNtupleGenerator,G__setup_memfuncNtupleGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_MuonBackGenerator),sizeof(MuonBackGenerator),-1,324864,(char*)NULL,G__setup_memvarMuonBackGenerator,G__setup_memfuncMuonBackGenerator);
   G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_Co3Rng);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_CosmicsGenerator),sizeof(CosmicsGenerator),-1,324864,(char*)NULL,G__setup_memvarCosmicsGenerator,G__setup_memfuncCosmicsGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShipGenDictLN_MuDISGenerator),sizeof(MuDISGenerator),-1,324864,(char*)NULL,G__setup_memvarMuDISGenerator,G__setup_memfuncMuDISGenerator);
}
extern "C" void G__cpp_setupG__ShipGenDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__ShipGenDict()");
  G__set_cpp_environmentG__ShipGenDict();
  G__cpp_setup_tagtableG__ShipGenDict();

  G__cpp_setup_inheritanceG__ShipGenDict();

  G__cpp_setup_typetableG__ShipGenDict();

  G__cpp_setup_memvarG__ShipGenDict();

  G__cpp_setup_memfuncG__ShipGenDict();
  G__cpp_setup_globalG__ShipGenDict();
  G__cpp_setup_funcG__ShipGenDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__ShipGenDict();
  return;
}
class G__cpp_setup_initG__ShipGenDict {
  public:
    G__cpp_setup_initG__ShipGenDict() { G__add_setup_func("G__ShipGenDict",(G__incsetup)(&G__cpp_setupG__ShipGenDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__ShipGenDict() { G__remove_setup_func("G__ShipGenDict"); }
};
G__cpp_setup_initG__ShipGenDict G__cpp_setup_initializerG__ShipGenDict;

