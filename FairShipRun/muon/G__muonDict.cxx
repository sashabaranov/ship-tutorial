//
// File generated by /opt/ocean/FairSoftInst/bin/rootcint at Thu Oct  8 06:26:13 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIinputdIFairShipRundImuondIG__muonDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__muonDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void muonPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_muonPoint(void *p = 0);
   static void *newArray_muonPoint(Long_t size, void *p);
   static void delete_muonPoint(void *p);
   static void deleteArray_muonPoint(void *p);
   static void destruct_muonPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::muonPoint*)
   {
      ::muonPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::muonPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("muonPoint", ::muonPoint::Class_Version(), "/input/FairShip/muon/muonPoint.h", 11,
                  typeid(::muonPoint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::muonPoint::Dictionary, isa_proxy, 4,
                  sizeof(::muonPoint) );
      instance.SetNew(&new_muonPoint);
      instance.SetNewArray(&newArray_muonPoint);
      instance.SetDelete(&delete_muonPoint);
      instance.SetDeleteArray(&deleteArray_muonPoint);
      instance.SetDestructor(&destruct_muonPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::muonPoint*)
   {
      return GenerateInitInstanceLocal((::muonPoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::muonPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void muon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_muon(void *p = 0);
   static void *newArray_muon(Long_t size, void *p);
   static void delete_muon(void *p);
   static void deleteArray_muon(void *p);
   static void destruct_muon(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::muon*)
   {
      ::muon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::muon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("muon", ::muon::Class_Version(), "/input/FairShip/muon/muon.h", 14,
                  typeid(::muon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::muon::Dictionary, isa_proxy, 4,
                  sizeof(::muon) );
      instance.SetNew(&new_muon);
      instance.SetNewArray(&newArray_muon);
      instance.SetDelete(&delete_muon);
      instance.SetDeleteArray(&deleteArray_muon);
      instance.SetDestructor(&destruct_muon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::muon*)
   {
      return GenerateInitInstanceLocal((::muon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::muon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void muonContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_muonContFact(void *p = 0);
   static void *newArray_muonContFact(Long_t size, void *p);
   static void delete_muonContFact(void *p);
   static void deleteArray_muonContFact(void *p);
   static void destruct_muonContFact(void *p);
   static void streamer_muonContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::muonContFact*)
   {
      ::muonContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::muonContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("muonContFact", ::muonContFact::Class_Version(), "/input/FairShip/muon/muonContFact.h", 9,
                  typeid(::muonContFact), ::ROOT::DefineBehavior(ptr, ptr),
                  &::muonContFact::Dictionary, isa_proxy, 0,
                  sizeof(::muonContFact) );
      instance.SetNew(&new_muonContFact);
      instance.SetNewArray(&newArray_muonContFact);
      instance.SetDelete(&delete_muonContFact);
      instance.SetDeleteArray(&deleteArray_muonContFact);
      instance.SetDestructor(&destruct_muonContFact);
      instance.SetStreamerFunc(&streamer_muonContFact);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::muonContFact*)
   {
      return GenerateInitInstanceLocal((::muonContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::muonContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr muonPoint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *muonPoint::Class_Name()
{
   return "muonPoint";
}

//______________________________________________________________________________
const char *muonPoint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muonPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int muonPoint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muonPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void muonPoint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muonPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *muonPoint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muonPoint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr muon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *muon::Class_Name()
{
   return "muon";
}

//______________________________________________________________________________
const char *muon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int muon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void muon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *muon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr muonContFact::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *muonContFact::Class_Name()
{
   return "muonContFact";
}

//______________________________________________________________________________
const char *muonContFact::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muonContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int muonContFact::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::muonContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void muonContFact::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muonContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *muonContFact::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::muonContFact*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void muonContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class muonContFact.

   FairContFact::Streamer(R__b);
}

//______________________________________________________________________________
void muonContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class muonContFact.
      TClass *R__cl = ::muonContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairContFact::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_muonContFact(void *p) {
      return  p ? new(p) ::muonContFact : new ::muonContFact;
   }
   static void *newArray_muonContFact(Long_t nElements, void *p) {
      return p ? new(p) ::muonContFact[nElements] : new ::muonContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_muonContFact(void *p) {
      delete ((::muonContFact*)p);
   }
   static void deleteArray_muonContFact(void *p) {
      delete [] ((::muonContFact*)p);
   }
   static void destruct_muonContFact(void *p) {
      typedef ::muonContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_muonContFact(TBuffer &buf, void *obj) {
      ((::muonContFact*)obj)->::muonContFact::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::muonContFact

//______________________________________________________________________________
void muon::Streamer(TBuffer &R__b)
{
   // Stream an object of class muon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(muon::Class(),this);
   } else {
      R__b.WriteClassBuffer(muon::Class(),this);
   }
}

//______________________________________________________________________________
void muon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class muon.
      TClass *R__cl = ::muon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackID", &fTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVolumeID", &fVolumeID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.InspectMember(fPos, "fPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &fMom);
      R__insp.InspectMember(fMom, "fMom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fELoss", &fELoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM0z", &fM0z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM1z", &fM1z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM2z", &fM2z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM3z", &fM3z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF0z", &fF0z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF1z", &fF1z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2z", &fF2z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilterThickness", &fFilterThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActiveThickness", &fActiveThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMax", &fXMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMax", &fYMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fmuonPointCollection", &fmuonPointCollection);
      FairDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_muon(void *p) {
      return  p ? new(p) ::muon : new ::muon;
   }
   static void *newArray_muon(Long_t nElements, void *p) {
      return p ? new(p) ::muon[nElements] : new ::muon[nElements];
   }
   // Wrapper around operator delete
   static void delete_muon(void *p) {
      delete ((::muon*)p);
   }
   static void deleteArray_muon(void *p) {
      delete [] ((::muon*)p);
   }
   static void destruct_muon(void *p) {
      typedef ::muon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::muon

//______________________________________________________________________________
void muonPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class muonPoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(muonPoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(muonPoint::Class(),this);
   }
}

//______________________________________________________________________________
void muonPoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class muonPoint.
      TClass *R__cl = ::muonPoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdgCode", &fPdgCode);
      FairMCPoint::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_muonPoint(void *p) {
      return  p ? new(p) ::muonPoint : new ::muonPoint;
   }
   static void *newArray_muonPoint(Long_t nElements, void *p) {
      return p ? new(p) ::muonPoint[nElements] : new ::muonPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_muonPoint(void *p) {
      delete ((::muonPoint*)p);
   }
   static void deleteArray_muonPoint(void *p) {
      delete [] ((::muonPoint*)p);
   }
   static void destruct_muonPoint(void *p) {
      typedef ::muonPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::muonPoint

/********************************************************
* /input/FairShipRun/muon/G__muonDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__muonDict();

extern "C" void G__set_cpp_environmentG__muonDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("muon.h");
  G__add_compiledheader("muonContFact.h");
  G__add_compiledheader("muonPoint.h");
  G__cpp_reset_tagtableG__muonDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__muonDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* muonPoint */
static int G__G__muonDict_280_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   muonPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muonPoint[n];
     } else {
       p = new((void*) gvp) muonPoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muonPoint;
     } else {
       p = new((void*) gvp) muonPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__muonDictLN_muonPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   muonPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new muonPoint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) muonPoint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__muonDictLN_muonPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const muonPoint*) G__getstructoffset())->PdgCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) muonPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) muonPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      muonPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muonPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muonPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_280_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muonPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef muonPoint G__TmuonPoint;
static int G__G__muonDict_280_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (muonPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((muonPoint*) (soff+(sizeof(muonPoint)*i)))->~G__TmuonPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (muonPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((muonPoint*) (soff))->~G__TmuonPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* muon */
static int G__G__muonDict_281_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   muon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new muon((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) muon((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__muonDictLN_muon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   muon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muon[n];
     } else {
       p = new((void*) gvp) muon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muon;
     } else {
       p = new((void*) gvp) muon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__muonDictLN_muon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetZStationPositions((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetZFilterPositions((Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetActiveThickness((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetFilterThickness((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetXMax((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->SetYMax((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((muon*) G__getstructoffset())->AddHit(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3]))
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) muon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) muon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      muon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_281_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef muon G__Tmuon;
static int G__G__muonDict_281_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((muon*) (soff+(sizeof(muon)*i)))->~G__Tmuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((muon*) (soff))->~G__Tmuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* muonContFact */
static int G__G__muonDict_283_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   muonContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muonContFact[n];
     } else {
       p = new((void*) gvp) muonContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new muonContFact;
     } else {
       p = new((void*) gvp) muonContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__muonDictLN_muonContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) muonContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) muonContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      muonContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((muonContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muonContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) muonContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__muonDict_283_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) muonContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef muonContFact G__TmuonContFact;
static int G__G__muonDict_283_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (muonContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((muonContFact*) (soff+(sizeof(muonContFact)*i)))->~G__TmuonContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (muonContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((muonContFact*) (soff))->~G__TmuonContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* muonPoint */

/* muon */

/* muonContFact */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__muonDict {
 public:
  G__Sizep2memfuncG__muonDict(): p(&G__Sizep2memfuncG__muonDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__muonDict::*p)();
};

size_t G__get_sizep2memfuncG__muonDict()
{
  G__Sizep2memfuncG__muonDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__muonDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint))) {
     muonPoint *G__Lderived;
     G__Lderived=(muonPoint*)0x1000;
     {
       FairMCPoint *G__Lpbase=(FairMCPoint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint),G__get_linked_tagnum(&G__G__muonDictLN_FairMCPoint),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairMultiLinkedData_Interface *G__Lpbase=(FairMultiLinkedData_Interface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint),G__get_linked_tagnum(&G__G__muonDictLN_FairMultiLinkedData_Interface),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint),G__get_linked_tagnum(&G__G__muonDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__muonDictLN_muon))) {
     muon *G__Lderived;
     G__Lderived=(muon*)0x1000;
     {
       FairDetector *G__Lpbase=(FairDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon),G__get_linked_tagnum(&G__G__muonDictLN_FairDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairModule *G__Lpbase=(FairModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon),G__get_linked_tagnum(&G__G__muonDictLN_FairModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon),G__get_linked_tagnum(&G__G__muonDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon),G__get_linked_tagnum(&G__G__muonDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact))) {
     muonContFact *G__Lderived;
     G__Lderived=(muonContFact*)0x1000;
     {
       FairContFact *G__Lpbase=(FairContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact),G__get_linked_tagnum(&G__G__muonDictLN_FairContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact),G__get_linked_tagnum(&G__G__muonDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact),G__get_linked_tagnum(&G__G__muonDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__muonDictLN_FairMultiLinkedData_Interface))) {
     FairMultiLinkedData_Interface *G__Lderived;
     G__Lderived=(FairMultiLinkedData_Interface*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_FairMultiLinkedData_Interface),G__get_linked_tagnum(&G__G__muonDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__muonDictLN_FairMCPoint))) {
     FairMCPoint *G__Lderived;
     G__Lderived=(FairMCPoint*)0x1000;
     {
       FairMultiLinkedData_Interface *G__Lpbase=(FairMultiLinkedData_Interface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_FairMCPoint),G__get_linked_tagnum(&G__G__muonDictLN_FairMultiLinkedData_Interface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__muonDictLN_FairMCPoint),G__get_linked_tagnum(&G__G__muonDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__muonDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Double32_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes in memory, written as a 4 bytes float",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<FairLink>",117,G__get_linked_tagnum(&G__G__muonDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<FairLink,less<FairLink> >",117,G__get_linked_tagnum(&G__G__muonDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__muonDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TString>",117,G__get_linked_tagnum(&G__G__muonDictLN_listlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::list<TString>*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI>",117,G__get_linked_tagnum(&G__G__muonDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::multimap<TString,TArrayI> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TClonesArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<TClonesArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::queue<TClonesArray*> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TBranch*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*,less<int> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,FairFileSource*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,FairFileSource*>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,FairFileSource*,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,Double_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* muonPoint */
static void G__setup_memvarmuonPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint));
   { muonPoint *p; p=(muonPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPdgCode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* muon */
static void G__setup_memvarmuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon));
   { muon *p; p=(muon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrackID=",0,"!  track index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVolumeID=",0,"!  volume id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TLorentzVector),-1,-1,4,"fPos=",0,"!  position at entrance");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TLorentzVector),-1,-1,4,"fMom=",0,"!  momentum at entrance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fTime=",0,"!  time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fLength=",0,"!  length");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fELoss=",0,"!  energy loss");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fM0z=",0,"!  z-position of veto station");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fM1z=",0,"!  z-position of tracking station 1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fM2z=",0,"!  z-position of tracking station 2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fM3z=",0,"!  z-position of tracking station 3");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fF0z=",0,"!  z-position of veto station");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fF1z=",0,"!  z-position of tracking station 1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fF2z=",0,"!  z-position of tracking station 2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fFilterThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fActiveThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fYMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TClonesArray),-1,-1,4,"fmuonPointCollection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* muonContFact */
static void G__setup_memvarmuonContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact));
   { muonContFact *p; p=(muonContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__muonDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__muonDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmuonPoint(void) {
   /* muonPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonPoint));
   G__memfunc_setup("muonPoint",969,G__G__muonDict_280_0_1, 105, G__get_linked_tagnum(&G__G__muonDictLN_muonPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonPoint",969,G__G__muonDict_280_0_2, 105, G__get_linked_tagnum(&G__G__muonDictLN_muonPoint), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - trackID i - 'Int_t' 0 - detID "
"u 'TVector3' - 0 - pos u 'TVector3' - 0 - mom "
"d - 'Double_t' 0 - tof d - 'Double_t' 0 - length "
"d - 'Double_t' 0 - eLoss i - 'Int_t' 0 - pdgCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PdgCode",662,G__G__muonDict_280_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonPoint",969,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__muonDictLN_muonPoint), -1, 0, 1, 1, 4, 0, "u 'muonPoint' - 11 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__muonDictLN_muonPoint), -1, 0, 1, 1, 4, 0, "u 'muonPoint' - 11 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__muonDict_280_0_7, 85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&muonPoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__muonDict_280_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonPoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__muonDict_280_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&muonPoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__muonDict_280_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&muonPoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__muonDict_280_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__muonDict_280_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonPoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__muonDict_280_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muonPoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__muonDict_280_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonPoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__muonDict_280_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muonPoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~muonPoint", 1095, G__G__muonDict_280_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmuon(void) {
   /* muon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__muonDictLN_muon));
   G__memfunc_setup("muon",447,G__G__muonDict_281_0_1, 105, G__get_linked_tagnum(&G__G__muonDictLN_muon), -1, 0, 2, 1, 1, 0, 
"C - - 10 - Name g - 'Bool_t' 0 - Active", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muon",447,G__G__muonDict_281_0_2, 105, G__get_linked_tagnum(&G__G__muonDictLN_muon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessHits",1143,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairVolume' - 0 '0' v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Register",837,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCollection",1324,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__muonDictLN_TClonesArray), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iColl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZStationPositions",2096,G__G__muonDict_281_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double32_t' 0 - z0 d - 'Double32_t' 0 - z1 "
"d - 'Double32_t' 0 - z2 d - 'Double32_t' 0 - z3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZFilterPositions",1972,G__G__muonDict_281_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 0 - z0 d - 'Double32_t' 0 - z1 "
"d - 'Double32_t' 0 - z2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveThickness",1844,G__G__muonDict_281_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - activeThickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilterThickness",1854,G__G__muonDict_281_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - filterThickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXMax",682,G__G__muonDict_281_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYMax",683,G__G__muonDict_281_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - yMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHit",558,G__G__muonDict_281_0_15, 85, G__get_linked_tagnum(&G__G__muonDictLN_muonPoint), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - trackID i - 'Int_t' 0 - detID "
"u 'TVector3' - 0 - pos u 'TVector3' - 0 - mom "
"d - 'Double_t' 0 - time d - 'Double_t' 0 - length "
"d - 'Double_t' 0 - eLoss i - 'Int_t' 0 - pdgcode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyClones",1023,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TClonesArray' - 0 - cl1 U 'TClonesArray' - 0 - cl2 "
"i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSpecialPhysicsCuts",2159,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndOfEvent",974,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishPrimary",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishRun",918,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginPrimary",1225,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostTrack",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreTrack",796,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginEvent",999,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("muon",447,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__muonDictLN_muon), -1, 0, 1, 1, 4, 0, "u 'muon' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__muonDictLN_muon), -1, 1, 1, 1, 4, 0, "u 'muon' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitMedium",1013,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__muonDict_281_0_28, 85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&muon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__muonDict_281_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__muonDict_281_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&muon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__muonDict_281_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&muon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__muonDict_281_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__muonDict_281_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__muonDict_281_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__muonDict_281_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__muonDict_281_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muon::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~muon", 573, G__G__muonDict_281_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmuonContFact(void) {
   /* muonContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__muonDictLN_muonContFact));
   G__memfunc_setup("setAllContainers",1659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonContFact",1233,G__G__muonDict_283_0_2, 105, G__get_linked_tagnum(&G__G__muonDictLN_muonContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__muonDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "U 'FairContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__muonDict_283_0_4, 85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&muonContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__muonDict_283_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__muonDict_283_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&muonContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__muonDict_283_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&muonContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__muonDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__muonDict_283_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__muonDict_283_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__muonDict_283_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muonContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__muonDict_283_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&muonContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__muonDict_283_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&muonContFact::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~muonContFact", 1359, G__G__muonDict_283_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__muonDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__muonDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__muonDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__muonDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__muonDictLN_FairContFact = { "FairContFact" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairParSet = { "FairParSet" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairVolume = { "FairVolume" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairModule = { "FairModule" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairDetector = { "FairDetector" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_muonPoint = { "muonPoint" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_muon = { "muon" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairContainer = { "FairContainer" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_muonContFact = { "muonContFact" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR = { "set<FairLink,less<FairLink>,allocator<FairLink> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_listlETStringcOallocatorlETStringgRsPgR = { "list<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR = { "map<TString,TChain*,less<TString>,allocator<pair<const TString,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR = { "map<TString,list<TString,allocator<TString> >*,less<TString>,allocator<pair<const TString,list<TString,allocator<TString> >*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR = { "multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString>,allocator<pair<const TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR = { "map<TString,TObject*,less<TString>,allocator<pair<const TString,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR = { "deque<TClonesArray*,allocator<TClonesArray*> >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR = { "queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString>,allocator<pair<const TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR = { "map<TString,TClonesArray*,less<TString>,allocator<pair<const TString,TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR = { "map<TString,FairTSBufferFunctional*,less<TString>,allocator<pair<const TString,FairTSBufferFunctional*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR = { "map<TString,FairWriteoutBuffer*,less<TString>,allocator<pair<const TString,FairWriteoutBuffer*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR = { "map<int,TBranch*,less<int>,allocator<pair<const int,TBranch*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR = { "map<unsigned int,FairFileSource*,less<unsigned int>,allocator<pair<const unsigned int,FairFileSource*> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairMultiLinkedData_Interface = { "FairMultiLinkedData_Interface" , 99 , -1 };
G__linked_taginfo G__G__muonDictLN_FairMCPoint = { "FairMCPoint" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__muonDict() {
  G__G__muonDictLN_TClass.tagnum = -1 ;
  G__G__muonDictLN_TBuffer.tagnum = -1 ;
  G__G__muonDictLN_TMemberInspector.tagnum = -1 ;
  G__G__muonDictLN_TObject.tagnum = -1 ;
  G__G__muonDictLN_TNamed.tagnum = -1 ;
  G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__muonDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__muonDictLN_TClonesArray.tagnum = -1 ;
  G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__muonDictLN_FairContFact.tagnum = -1 ;
  G__G__muonDictLN_FairParSet.tagnum = -1 ;
  G__G__muonDictLN_FairVolume.tagnum = -1 ;
  G__G__muonDictLN_FairModule.tagnum = -1 ;
  G__G__muonDictLN_FairDetector.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__muonDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__muonDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__muonDictLN_TVector3.tagnum = -1 ;
  G__G__muonDictLN_TLorentzVector.tagnum = -1 ;
  G__G__muonDictLN_muonPoint.tagnum = -1 ;
  G__G__muonDictLN_muon.tagnum = -1 ;
  G__G__muonDictLN_FairContainer.tagnum = -1 ;
  G__G__muonDictLN_muonContFact.tagnum = -1 ;
  G__G__muonDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_listlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__G__muonDictLN_FairMultiLinkedData_Interface.tagnum = -1 ;
  G__G__muonDictLN_FairMCPoint.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__muonDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairContFact);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairParSet);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairVolume);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairModule);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairDetector);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__muonDictLN_muonPoint),sizeof(muonPoint),-1,327424,(char*)NULL,G__setup_memvarmuonPoint,G__setup_memfuncmuonPoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__muonDictLN_muon),sizeof(muon),-1,327424,(char*)NULL,G__setup_memvarmuon,G__setup_memfuncmuon);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__muonDictLN_muonContFact),sizeof(muonContFact),-1,62720,"Factory for all muon parameter containers",G__setup_memvarmuonContFact,G__setup_memfuncmuonContFact);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_setlEFairLinkcOlesslEFairLinkgRcOallocatorlEFairLinkgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_listlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplEunsignedsPintcOFairFileSourcemUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOFairFileSourcemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairMultiLinkedData_Interface);
   G__get_linked_tagnum_fwd(&G__G__muonDictLN_FairMCPoint);
}
extern "C" void G__cpp_setupG__muonDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__muonDict()");
  G__set_cpp_environmentG__muonDict();
  G__cpp_setup_tagtableG__muonDict();

  G__cpp_setup_inheritanceG__muonDict();

  G__cpp_setup_typetableG__muonDict();

  G__cpp_setup_memvarG__muonDict();

  G__cpp_setup_memfuncG__muonDict();
  G__cpp_setup_globalG__muonDict();
  G__cpp_setup_funcG__muonDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__muonDict();
  return;
}
class G__cpp_setup_initG__muonDict {
  public:
    G__cpp_setup_initG__muonDict() { G__add_setup_func("G__muonDict",(G__incsetup)(&G__cpp_setupG__muonDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__muonDict() { G__remove_setup_func("G__muonDict"); }
};
G__cpp_setup_initG__muonDict G__cpp_setup_initializerG__muonDict;

